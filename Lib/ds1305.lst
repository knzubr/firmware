   1               		.file	"ds1305.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
  10               		.text
  11               	.Ltext0:
 153               		.weak	spiEnableDS1305
 155               	spiEnableDS1305:
 156               		.stabd	46,0,0
   1:../../freeRtos/Lib/ds1305.c **** /*********************************************
   2:../../freeRtos/Lib/ds1305.c ****  * vim:sw=8:ts=8:si:et
   3:../../freeRtos/Lib/ds1305.c ****  * To use the above modeline in vim you must have "set modeline" in your .vimrc
   4:../../freeRtos/Lib/ds1305.c ****  * Author: Guido Socher 
   5:../../freeRtos/Lib/ds1305.c ****  * Copyright: GPL V2
   6:../../freeRtos/Lib/ds1305.c ****  * http://www.gnu.org/licenses/gpl.html
   7:../../freeRtos/Lib/ds1305.c ****  *
   8:../../freeRtos/Lib/ds1305.c ****  * Based on the enc28j60.c file from the AVRlib library by Pascal Stang.
   9:../../freeRtos/Lib/ds1305.c ****  * For AVRlib See http://www.procyonengineering.com/
  10:../../freeRtos/Lib/ds1305.c ****  * Used with explicit permission of Pascal Stang.
  11:../../freeRtos/Lib/ds1305.c ****  *
  12:../../freeRtos/Lib/ds1305.c ****  * Title: Microchip ENC28J60 Ethernet Interface Driver
  13:../../freeRtos/Lib/ds1305.c ****  * Chip type           : ATMEGA88 with ENC28J60
  14:../../freeRtos/Lib/ds1305.c ****  *********************************************/
  15:../../freeRtos/Lib/ds1305.c **** #include <avr/io.h>
  16:../../freeRtos/Lib/ds1305.c **** #include <util/delay.h>
  17:../../freeRtos/Lib/ds1305.c **** #include "ds1305.h"
  18:../../freeRtos/Lib/ds1305.c **** #include "spiXmega.h"
  19:../../freeRtos/Lib/ds1305.c **** 
  20:../../freeRtos/Lib/ds1305.c **** void spiEnableDS1305(void)  {};
 158               	.LM0:
 159               	.LFBB1:
 160               	/* prologue: function */
 161               	/* frame size = 0 */
 162               	/* stack size = 0 */
 163               	.L__stack_usage = 0
 164 0000 0895      		ret
 166               	.Lscope1:
 168               		.stabd	78,0,0
 170               		.weak	spiDisableDS1305
 172               	spiDisableDS1305:
 173               		.stabd	46,0,0
  21:../../freeRtos/Lib/ds1305.c **** void spiDisableDS1305(void) {};
 175               	.LM1:
 176               	.LFBB2:
 177               	/* prologue: function */
 178               	/* frame size = 0 */
 179               	/* stack size = 0 */
 180               	.L__stack_usage = 0
 181 0002 0895      		ret
 183               	.Lscope2:
 185               		.stabd	78,0,0
 188               	.global	readTimeBCD
 190               	readTimeBCD:
 191               		.stabd	46,0,0
  22:../../freeRtos/Lib/ds1305.c **** 
  23:../../freeRtos/Lib/ds1305.c **** 
  24:../../freeRtos/Lib/ds1305.c **** void readTimeBCD(timeBCD_t *time)
  25:../../freeRtos/Lib/ds1305.c **** {
 193               	.LM2:
 194               	.LFBB3:
 196               	.LM3:
 197 0004 1F93      		push r17
 198 0006 CF93      		push r28
 199 0008 DF93      		push r29
 200               	/* prologue: function */
 201               	/* frame size = 0 */
 202               	/* stack size = 3 */
 203               	.L__stack_usage = 3
 204 000a EC01      		movw r28,r24
  26:../../freeRtos/Lib/ds1305.c ****   spiTake();
 206               	.LM4:
 207 000c 0E94 0000 		call spiTake
  27:../../freeRtos/Lib/ds1305.c ****   spiEnableDS1305();
 209               	.LM5:
 210 0010 0E94 0000 		call spiEnableDS1305
  28:../../freeRtos/Lib/ds1305.c ****   
  29:../../freeRtos/Lib/ds1305.c ****   uint8_t *ptr = (uint8_t *)(time);
  30:../../freeRtos/Lib/ds1305.c ****   uint8_t i;
  31:../../freeRtos/Lib/ds1305.c ****   
  32:../../freeRtos/Lib/ds1305.c ****   spiSend(0x00);
 212               	.LM6:
 213 0014 80E0      		ldi r24,0
 214 0016 0E94 0000 		call spiSend
  33:../../freeRtos/Lib/ds1305.c **** 
  34:../../freeRtos/Lib/ds1305.c ****   for (i=0; i<sizeof(timeBCD_t); i++)
 216               	.LM7:
 217 001a 10E0      		ldi r17,0
 218               	.L5:
  35:../../freeRtos/Lib/ds1305.c ****   {
  36:../../freeRtos/Lib/ds1305.c ****     *ptr = spiSend(i);
 220               	.LM8:
 221 001c 812F      		mov r24,r17
 222 001e 0E94 0000 		call spiSend
 223 0022 8993      		st Y+,r24
  34:../../freeRtos/Lib/ds1305.c ****   for (i=0; i<sizeof(timeBCD_t); i++)
 225               	.LM9:
 226 0024 1F5F      		subi r17,lo8(-(1))
 227 0026 1730      		cpi r17,lo8(7)
 228 0028 01F4      		brne .L5
  37:../../freeRtos/Lib/ds1305.c ****     ptr++;
  38:../../freeRtos/Lib/ds1305.c ****   }  
  39:../../freeRtos/Lib/ds1305.c ****   spiDisableDS1305();  
 230               	.LM10:
 231 002a 0E94 0000 		call spiDisableDS1305
 232               	/* epilogue start */
  40:../../freeRtos/Lib/ds1305.c ****   spiGive();
  41:../../freeRtos/Lib/ds1305.c **** }
 234               	.LM11:
 235 002e DF91      		pop r29
 236 0030 CF91      		pop r28
 237 0032 1F91      		pop r17
  40:../../freeRtos/Lib/ds1305.c ****   spiGive();
 239               	.LM12:
 240 0034 0C94 0000 		jmp spiGive
 245               	.Lscope3:
 247               		.stabd	78,0,0
 250               	.global	readTimeDecoded
 252               	readTimeDecoded:
 253               		.stabd	46,0,0
  42:../../freeRtos/Lib/ds1305.c **** 
  43:../../freeRtos/Lib/ds1305.c **** #if USE_DECODED_TIME_STRUCT
  44:../../freeRtos/Lib/ds1305.c **** void readTimeDecoded(timeDecoded_t *time)
  45:../../freeRtos/Lib/ds1305.c **** {
 255               	.LM13:
 256               	.LFBB4:
 257               	/* prologue: function */
 258               	/* frame size = 0 */
 259               	/* stack size = 0 */
 260               	.L__stack_usage = 0
  46:../../freeRtos/Lib/ds1305.c ****   readTimeBCD((timeBCD_t *)(time));
 262               	.LM14:
 263 0038 0C94 0000 		jmp readTimeBCD
 265               	.Lscope4:
 267               		.stabd	78,0,0
 270               	.global	readTime
 272               	readTime:
 273               		.stabd	46,0,0
  47:../../freeRtos/Lib/ds1305.c **** }
  48:../../freeRtos/Lib/ds1305.c **** void readTime (time_t *time)
  49:../../freeRtos/Lib/ds1305.c **** {
 275               	.LM15:
 276               	.LFBB5:
 277               	/* prologue: function */
 278               	/* frame size = 0 */
 279               	/* stack size = 0 */
 280               	.L__stack_usage = 0
  50:../../freeRtos/Lib/ds1305.c ****   readTimeBCD((timeBCD_t *)(time));
 282               	.LM16:
 283 003c 0C94 0000 		jmp readTimeBCD
 285               	.Lscope5:
 287               		.stabd	78,0,0
 290               	.global	setTimeBCD
 292               	setTimeBCD:
 293               		.stabd	46,0,0
  51:../../freeRtos/Lib/ds1305.c **** }
  52:../../freeRtos/Lib/ds1305.c **** #endif /* USE_DECODED_TIME_STRUCT */
  53:../../freeRtos/Lib/ds1305.c **** 
  54:../../freeRtos/Lib/ds1305.c **** 
  55:../../freeRtos/Lib/ds1305.c **** void setTimeBCD(timeBCD_t *time)
  56:../../freeRtos/Lib/ds1305.c **** {
 295               	.LM17:
 296               	.LFBB6:
 297 0040 0F93      		push r16
 298 0042 1F93      		push r17
 299 0044 CF93      		push r28
 300 0046 DF93      		push r29
 301               	/* prologue: function */
 302               	/* frame size = 0 */
 303               	/* stack size = 4 */
 304               	.L__stack_usage = 4
 305 0048 EC01      		movw r28,r24
  57:../../freeRtos/Lib/ds1305.c ****   spiTake();
 307               	.LM18:
 308 004a 0E94 0000 		call spiTake
  58:../../freeRtos/Lib/ds1305.c ****   spiEnableDS1305();
 310               	.LM19:
 311 004e 0E94 0000 		call spiEnableDS1305
  59:../../freeRtos/Lib/ds1305.c ****   
  60:../../freeRtos/Lib/ds1305.c ****   uint8_t *ptr = (uint8_t *)(time);
  61:../../freeRtos/Lib/ds1305.c ****   uint8_t i;
  62:../../freeRtos/Lib/ds1305.c ****   spiSend(0x80);
 313               	.LM20:
 314 0052 80E8      		ldi r24,lo8(-128)
 315 0054 0E94 0000 		call spiSend
 316 0058 8E01      		movw r16,r28
 317 005a 095F      		subi r16,-7
 318 005c 1F4F      		sbci r17,-1
 319               	.L11:
  63:../../freeRtos/Lib/ds1305.c ****   for (i=0; i<sizeof(timeBCD_t); i++)
  64:../../freeRtos/Lib/ds1305.c ****   {
  65:../../freeRtos/Lib/ds1305.c ****     spiSend(*ptr);
 321               	.LM21:
 322 005e 8991      		ld r24,Y+
 323 0060 0E94 0000 		call spiSend
  63:../../freeRtos/Lib/ds1305.c ****   for (i=0; i<sizeof(timeBCD_t); i++)
 325               	.LM22:
 326 0064 C017      		cp r28,r16
 327 0066 D107      		cpc r29,r17
 328 0068 01F4      		brne .L11
  66:../../freeRtos/Lib/ds1305.c ****     ptr++;
  67:../../freeRtos/Lib/ds1305.c ****   }  
  68:../../freeRtos/Lib/ds1305.c ****   
  69:../../freeRtos/Lib/ds1305.c ****   spiDisableDS1305();  
 330               	.LM23:
 331 006a 0E94 0000 		call spiDisableDS1305
 332               	/* epilogue start */
  70:../../freeRtos/Lib/ds1305.c ****   spiGive();
  71:../../freeRtos/Lib/ds1305.c **** }
 334               	.LM24:
 335 006e DF91      		pop r29
 336 0070 CF91      		pop r28
 337 0072 1F91      		pop r17
 338 0074 0F91      		pop r16
  70:../../freeRtos/Lib/ds1305.c ****   spiGive();
 340               	.LM25:
 341 0076 0C94 0000 		jmp spiGive
 343               	.Lscope6:
 345               		.stabd	78,0,0
 348               	.global	setTimeDecoded
 350               	setTimeDecoded:
 351               		.stabd	46,0,0
  72:../../freeRtos/Lib/ds1305.c **** 
  73:../../freeRtos/Lib/ds1305.c **** #if USE_DECODED_TIME_STRUCT
  74:../../freeRtos/Lib/ds1305.c **** void setTimeDecoded(timeDecoded_t *time)
  75:../../freeRtos/Lib/ds1305.c **** {
 353               	.LM26:
 354               	.LFBB7:
 355               	/* prologue: function */
 356               	/* frame size = 0 */
 357               	/* stack size = 0 */
 358               	.L__stack_usage = 0
  76:../../freeRtos/Lib/ds1305.c ****   setTimeBCD((timeBCD_t *)(time));
 360               	.LM27:
 361 007a 0C94 0000 		jmp setTimeBCD
 363               	.Lscope7:
 365               		.stabd	78,0,0
 368               	.global	setTime
 370               	setTime:
 371               		.stabd	46,0,0
  77:../../freeRtos/Lib/ds1305.c **** }
  78:../../freeRtos/Lib/ds1305.c **** void setTime(time_t *time)
  79:../../freeRtos/Lib/ds1305.c **** {
 373               	.LM28:
 374               	.LFBB8:
 375               	/* prologue: function */
 376               	/* frame size = 0 */
 377               	/* stack size = 0 */
 378               	.L__stack_usage = 0
  80:../../freeRtos/Lib/ds1305.c ****   setTimeBCD((timeBCD_t *)(time));
 380               	.LM29:
 381 007e 0C94 0000 		jmp setTimeBCD
 383               	.Lscope8:
 385               		.stabd	78,0,0
 387               	.global	ds1305start
 389               	ds1305start:
 390               		.stabd	46,0,0
  81:../../freeRtos/Lib/ds1305.c **** }
  82:../../freeRtos/Lib/ds1305.c **** #endif /* USE_DECODED_TIME_STRUCT */
  83:../../freeRtos/Lib/ds1305.c **** 
  84:../../freeRtos/Lib/ds1305.c **** void ds1305start(void)
  85:../../freeRtos/Lib/ds1305.c **** {  
 392               	.LM30:
 393               	.LFBB9:
 394               	/* prologue: function */
 395               	/* frame size = 0 */
 396               	/* stack size = 0 */
 397               	.L__stack_usage = 0
  86:../../freeRtos/Lib/ds1305.c ****   spiTake();
 399               	.LM31:
 400 0082 0E94 0000 		call spiTake
  87:../../freeRtos/Lib/ds1305.c ****   spiEnableDS1305();
 402               	.LM32:
 403 0086 0E94 0000 		call spiEnableDS1305
  88:../../freeRtos/Lib/ds1305.c **** 
  89:../../freeRtos/Lib/ds1305.c ****   spiSend(0x8F);
 405               	.LM33:
 406 008a 8FE8      		ldi r24,lo8(-113)
 407 008c 0E94 0000 		call spiSend
  90:../../freeRtos/Lib/ds1305.c ****   spiSend(0x00);
 409               	.LM34:
 410 0090 80E0      		ldi r24,0
 411 0092 0E94 0000 		call spiSend
  91:../../freeRtos/Lib/ds1305.c ****   
  92:../../freeRtos/Lib/ds1305.c ****   spiDisableDS1305();  
 413               	.LM35:
 414 0096 0E94 0000 		call spiDisableDS1305
  93:../../freeRtos/Lib/ds1305.c ****   spiGive();
 416               	.LM36:
 417 009a 0C94 0000 		jmp spiGive
 419               	.Lscope9:
 421               		.stabd	78,0,0
 426               	.global	ds1305writeMem
 428               	ds1305writeMem:
 429               		.stabd	46,0,0
  94:../../freeRtos/Lib/ds1305.c **** 
  95:../../freeRtos/Lib/ds1305.c ****   return;
  96:../../freeRtos/Lib/ds1305.c **** }
  97:../../freeRtos/Lib/ds1305.c **** 
  98:../../freeRtos/Lib/ds1305.c **** 
  99:../../freeRtos/Lib/ds1305.c **** uint8_t ds1305writeMem      (uint8_t addr, uint8_t length, uint8_t *data)
 100:../../freeRtos/Lib/ds1305.c **** {
 431               	.LM37:
 432               	.LFBB10:
 433 009e EF92      		push r14
 434 00a0 FF92      		push r15
 435 00a2 1F93      		push r17
 436 00a4 CF93      		push r28
 437 00a6 DF93      		push r29
 438 00a8 1F92      		push __zero_reg__
 439 00aa CDB7      		in r28,__SP_L__
 440 00ac DEB7      		in r29,__SP_H__
 441               	/* prologue: function */
 442               	/* frame size = 1 */
 443               	/* stack size = 6 */
 444               	.L__stack_usage = 6
 445 00ae 162F      		mov r17,r22
 446 00b0 7A01      		movw r14,r20
 101:../../freeRtos/Lib/ds1305.c ****   if (addr > 95)
 448               	.LM38:
 449 00b2 8036      		cpi r24,lo8(96)
 450 00b4 00F4      		brsh .L19
 102:../../freeRtos/Lib/ds1305.c ****     return 1;
 103:../../freeRtos/Lib/ds1305.c ****   if (addr + length > 95)
 452               	.LM39:
 453 00b6 262F      		mov r18,r22
 454 00b8 30E0      		ldi r19,0
 455 00ba 280F      		add r18,r24
 456 00bc 311D      		adc r19,__zero_reg__
 457 00be 2036      		cpi r18,96
 458 00c0 3105      		cpc r19,__zero_reg__
 459 00c2 04F4      		brge .L20
 104:../../freeRtos/Lib/ds1305.c ****     return 2;
 105:../../freeRtos/Lib/ds1305.c **** 
 106:../../freeRtos/Lib/ds1305.c ****   addr += 0xA0;
 107:../../freeRtos/Lib/ds1305.c ****   
 108:../../freeRtos/Lib/ds1305.c ****   spiTake();
 461               	.LM40:
 462 00c4 8983      		std Y+1,r24
 463 00c6 0E94 0000 		call spiTake
 109:../../freeRtos/Lib/ds1305.c ****   spiEnableDS1305();
 465               	.LM41:
 466 00ca 0E94 0000 		call spiEnableDS1305
 110:../../freeRtos/Lib/ds1305.c **** 
 111:../../freeRtos/Lib/ds1305.c ****   spiSend(addr);
 468               	.LM42:
 469 00ce 8981      		ldd r24,Y+1
 470 00d0 8056      		subi r24,lo8(-(-96))
 471 00d2 0E94 0000 		call spiSend
 472               	.L17:
 112:../../freeRtos/Lib/ds1305.c ****   while (length > 0)
 474               	.LM43:
 475 00d6 1123      		tst r17
 476 00d8 01F0      		breq .L21
 113:../../freeRtos/Lib/ds1305.c ****   {
 114:../../freeRtos/Lib/ds1305.c ****     spiSend(*data);
 478               	.LM44:
 479 00da F701      		movw r30,r14
 480 00dc 8191      		ld r24,Z+
 481 00de 7F01      		movw r14,r30
 482 00e0 0E94 0000 		call spiSend
 115:../../freeRtos/Lib/ds1305.c ****     data++;
 116:../../freeRtos/Lib/ds1305.c ****     length--;
 484               	.LM45:
 485 00e4 1150      		subi r17,lo8(-(-1))
 486 00e6 00C0      		rjmp .L17
 487               	.L21:
 117:../../freeRtos/Lib/ds1305.c ****   }
 118:../../freeRtos/Lib/ds1305.c ****   
 119:../../freeRtos/Lib/ds1305.c ****   spiDisableDS1305();  
 489               	.LM46:
 490 00e8 0E94 0000 		call spiDisableDS1305
 120:../../freeRtos/Lib/ds1305.c ****   spiGive();
 492               	.LM47:
 493 00ec 0E94 0000 		call spiGive
 121:../../freeRtos/Lib/ds1305.c ****   return 0;
 495               	.LM48:
 496 00f0 80E0      		ldi r24,0
 497 00f2 00C0      		rjmp .L16
 498               	.L19:
 102:../../freeRtos/Lib/ds1305.c ****     return 1;
 500               	.LM49:
 501 00f4 81E0      		ldi r24,lo8(1)
 502 00f6 00C0      		rjmp .L16
 503               	.L20:
 104:../../freeRtos/Lib/ds1305.c ****     return 2;
 505               	.LM50:
 506 00f8 82E0      		ldi r24,lo8(2)
 507               	.L16:
 508               	/* epilogue start */
 122:../../freeRtos/Lib/ds1305.c **** }
 510               	.LM51:
 511 00fa 0F90      		pop __tmp_reg__
 512 00fc DF91      		pop r29
 513 00fe CF91      		pop r28
 514 0100 1F91      		pop r17
 515 0102 FF90      		pop r15
 516 0104 EF90      		pop r14
 517 0106 0895      		ret
 519               	.Lscope10:
 521               		.stabd	78,0,0
 526               	.global	ds1305readMem
 528               	ds1305readMem:
 529               		.stabd	46,0,0
 123:../../freeRtos/Lib/ds1305.c **** uint8_t ds1305readMem       (uint8_t addr, uint8_t length, uint8_t *data)
 124:../../freeRtos/Lib/ds1305.c **** {
 531               	.LM52:
 532               	.LFBB11:
 533 0108 EF92      		push r14
 534 010a FF92      		push r15
 535 010c 1F93      		push r17
 536 010e CF93      		push r28
 537 0110 DF93      		push r29
 538 0112 1F92      		push __zero_reg__
 539 0114 CDB7      		in r28,__SP_L__
 540 0116 DEB7      		in r29,__SP_H__
 541               	/* prologue: function */
 542               	/* frame size = 1 */
 543               	/* stack size = 6 */
 544               	.L__stack_usage = 6
 545 0118 162F      		mov r17,r22
 546 011a 7A01      		movw r14,r20
 125:../../freeRtos/Lib/ds1305.c ****   if (addr >95)
 548               	.LM53:
 549 011c 8036      		cpi r24,lo8(96)
 550 011e 00F4      		brsh .L26
 126:../../freeRtos/Lib/ds1305.c ****     return 1;
 127:../../freeRtos/Lib/ds1305.c ****   if (addr + length > 95)
 552               	.LM54:
 553 0120 262F      		mov r18,r22
 554 0122 30E0      		ldi r19,0
 555 0124 280F      		add r18,r24
 556 0126 311D      		adc r19,__zero_reg__
 557 0128 2036      		cpi r18,96
 558 012a 3105      		cpc r19,__zero_reg__
 559 012c 04F4      		brge .L27
 128:../../freeRtos/Lib/ds1305.c ****     return 2;
 129:../../freeRtos/Lib/ds1305.c ****   
 130:../../freeRtos/Lib/ds1305.c ****   addr += 0x20;
 131:../../freeRtos/Lib/ds1305.c ****   
 132:../../freeRtos/Lib/ds1305.c ****   spiTake();
 561               	.LM55:
 562 012e 8983      		std Y+1,r24
 563 0130 0E94 0000 		call spiTake
 133:../../freeRtos/Lib/ds1305.c ****   spiEnableDS1305();
 565               	.LM56:
 566 0134 0E94 0000 		call spiEnableDS1305
 134:../../freeRtos/Lib/ds1305.c **** 
 135:../../freeRtos/Lib/ds1305.c ****   spiSend(addr);
 568               	.LM57:
 569 0138 8981      		ldd r24,Y+1
 570 013a 805E      		subi r24,lo8(-(32))
 571 013c 0E94 0000 		call spiSend
 572               	.L24:
 136:../../freeRtos/Lib/ds1305.c ****   while (length > 0)
 574               	.LM58:
 575 0140 1123      		tst r17
 576 0142 01F0      		breq .L28
 137:../../freeRtos/Lib/ds1305.c ****   {
 138:../../freeRtos/Lib/ds1305.c ****     *data = spiSend(0);
 578               	.LM59:
 579 0144 80E0      		ldi r24,0
 580 0146 0E94 0000 		call spiSend
 581 014a F701      		movw r30,r14
 582 014c 8193      		st Z+,r24
 583 014e 7F01      		movw r14,r30
 139:../../freeRtos/Lib/ds1305.c ****     data++;
 140:../../freeRtos/Lib/ds1305.c ****     length--;
 585               	.LM60:
 586 0150 1150      		subi r17,lo8(-(-1))
 587 0152 00C0      		rjmp .L24
 588               	.L28:
 141:../../freeRtos/Lib/ds1305.c ****   }
 142:../../freeRtos/Lib/ds1305.c ****   
 143:../../freeRtos/Lib/ds1305.c ****   spiDisableDS1305();  
 590               	.LM61:
 591 0154 0E94 0000 		call spiDisableDS1305
 144:../../freeRtos/Lib/ds1305.c ****   spiGive();
 593               	.LM62:
 594 0158 0E94 0000 		call spiGive
 145:../../freeRtos/Lib/ds1305.c ****   return 0;
 596               	.LM63:
 597 015c 80E0      		ldi r24,0
 598 015e 00C0      		rjmp .L23
 599               	.L26:
 126:../../freeRtos/Lib/ds1305.c ****     return 1;
 601               	.LM64:
 602 0160 81E0      		ldi r24,lo8(1)
 603 0162 00C0      		rjmp .L23
 604               	.L27:
 128:../../freeRtos/Lib/ds1305.c ****     return 2;
 606               	.LM65:
 607 0164 82E0      		ldi r24,lo8(2)
 608               	.L23:
 609               	/* epilogue start */
 146:../../freeRtos/Lib/ds1305.c **** }
 611               	.LM66:
 612 0166 0F90      		pop __tmp_reg__
 613 0168 DF91      		pop r29
 614 016a CF91      		pop r28
 615 016c 1F91      		pop r17
 616 016e FF90      		pop r15
 617 0170 EF90      		pop r14
 618 0172 0895      		ret
 620               	.Lscope11:
 622               		.stabd	78,0,0
 623               		.comm	xSemaphoreSpiSS,2,1
 625               		.weak	spiSend
 627               	.Letext0:
 628               		.ident	"GCC: (GNU) 4.8.2"
 629               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:0000000000000000 ds1305.c
     /tmp/ccXBtKE1.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccXBtKE1.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccXBtKE1.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccXBtKE1.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccXBtKE1.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccXBtKE1.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccXBtKE1.s:155    .text:0000000000000000 spiEnableDS1305
     /tmp/ccXBtKE1.s:172    .text:0000000000000002 spiDisableDS1305
     /tmp/ccXBtKE1.s:190    .text:0000000000000004 readTimeBCD
     /tmp/ccXBtKE1.s:252    .text:0000000000000038 readTimeDecoded
     /tmp/ccXBtKE1.s:272    .text:000000000000003c readTime
     /tmp/ccXBtKE1.s:292    .text:0000000000000040 setTimeBCD
     /tmp/ccXBtKE1.s:350    .text:000000000000007a setTimeDecoded
     /tmp/ccXBtKE1.s:370    .text:000000000000007e setTime
     /tmp/ccXBtKE1.s:389    .text:0000000000000082 ds1305start
     /tmp/ccXBtKE1.s:428    .text:000000000000009e ds1305writeMem
     /tmp/ccXBtKE1.s:528    .text:0000000000000108 ds1305readMem
                            *COM*:0000000000000002 xSemaphoreSpiSS

UNDEFINED SYMBOLS
spiTake
spiSend
spiGive
__do_clear_bss
