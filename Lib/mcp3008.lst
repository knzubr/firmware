   1               		.file	"mcp3008.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
  10               		.text
  11               	.Ltext0:
 275               		.weak	enableSpiMCP3008
 277               	enableSpiMCP3008:
 278               		.stabd	46,0,0
   1:../../freeRtos/Lib/mcp3008.c **** /*****************************************************************************
   2:../../freeRtos/Lib/mcp3008.c **** * vim:sw=2:ts=2:si:et
   3:../../freeRtos/Lib/mcp3008.c **** *
   4:../../freeRtos/Lib/mcp3008.c **** * Title      : MPC23s17 parrarel I/O 16 bit port driver
   5:../../freeRtos/Lib/mcp3008.c **** * Author     : Adam Kaliszan adam.kaliszan@gmail.com
   6:../../freeRtos/Lib/mcp3008.c **** * Copyright  : GPL V2
   7:../../freeRtos/Lib/mcp3008.c **** *
   8:../../freeRtos/Lib/mcp3008.c **** *This driver provides:
   9:../../freeRtos/Lib/mcp3008.c **** * - read/set operation
  10:../../freeRtos/Lib/mcp3008.c **** *Driver uses mutexes and is condition race free. Function can be invoken by any thread.
  11:../../freeRtos/Lib/mcp3008.c **** *****************************************************************************/
  12:../../freeRtos/Lib/mcp3008.c **** //@{
  13:../../freeRtos/Lib/mcp3008.c **** #include <avr/io.h>
  14:../../freeRtos/Lib/mcp3008.c **** #include <util/delay.h>
  15:../../freeRtos/Lib/mcp3008.c **** #include "mcp3008.h"
  16:../../freeRtos/Lib/mcp3008.c **** #include "spiXmega.h"
  17:../../freeRtos/Lib/mcp3008.c **** 
  18:../../freeRtos/Lib/mcp3008.c **** void enableSpiMCP3008(void)   {};
 280               	.LM0:
 281               	.LFBB1:
 282               	/* prologue: function */
 283               	/* frame size = 0 */
 284               	/* stack size = 0 */
 285               	.L__stack_usage = 0
 286 0000 0895      		ret
 288               	.Lscope1:
 290               		.stabd	78,0,0
 292               		.weak	disableSpiMCP3008
 294               	disableSpiMCP3008:
 295               		.stabd	46,0,0
  19:../../freeRtos/Lib/mcp3008.c **** void disableSpiMCP3008(void)  {};
 297               	.LM1:
 298               	.LFBB2:
 299               	/* prologue: function */
 300               	/* frame size = 0 */
 301               	/* stack size = 0 */
 302               	.L__stack_usage = 0
 303 0002 0895      		ret
 305               	.Lscope2:
 307               		.stabd	78,0,0
 310               	.global	MCP3008_getSampleDiff
 312               	MCP3008_getSampleDiff:
 313               		.stabd	46,0,0
  20:../../freeRtos/Lib/mcp3008.c **** 
  21:../../freeRtos/Lib/mcp3008.c **** 
  22:../../freeRtos/Lib/mcp3008.c **** uint16_t MCP3008_getSampleDiff(uint8_t inputNo)
  23:../../freeRtos/Lib/mcp3008.c **** {
 315               	.LM2:
 316               	.LFBB3:
 318               	.LM3:
 319 0004 1F93      		push r17
 320 0006 CF93      		push r28
 321 0008 DF93      		push r29
 322 000a 1F92      		push __zero_reg__
 323 000c CDB7      		in r28,__SP_L__
 324 000e DEB7      		in r29,__SP_H__
 325               	/* prologue: function */
 326               	/* frame size = 1 */
 327               	/* stack size = 4 */
 328               	.L__stack_usage = 4
  24:../../freeRtos/Lib/mcp3008.c ****   uint8_t resultLo;
  25:../../freeRtos/Lib/mcp3008.c ****   uint8_t resultHi;
  26:../../freeRtos/Lib/mcp3008.c ****   inputNo = inputNo << 4;
 330               	.LM4:
 331 0010 182F      		mov r17,r24
 332 0012 1295      		swap r17
 333 0014 107F      		andi r17,lo8(-16)
  27:../../freeRtos/Lib/mcp3008.c ****   inputNo &= 0x70;
  28:../../freeRtos/Lib/mcp3008.c ****   
  29:../../freeRtos/Lib/mcp3008.c ****   spiTake();
 335               	.LM5:
 336 0016 0E94 0000 		call spiTake
  30:../../freeRtos/Lib/mcp3008.c ****   enableSpiMCP3008();
 338               	.LM6:
 339 001a 0E94 0000 		call enableSpiMCP3008
  31:../../freeRtos/Lib/mcp3008.c ****   
  32:../../freeRtos/Lib/mcp3008.c ****   spiSend(0x01);                               //Start
 341               	.LM7:
 342 001e 81E0      		ldi r24,lo8(1)
 343 0020 0E94 0000 		call spiSend
  33:../../freeRtos/Lib/mcp3008.c ****   resultHi = spiSend(inputNo);  //DIFF/!SGL A2 A1 A0 X X X X
 345               	.LM8:
 346 0024 812F      		mov r24,r17
 347 0026 8077      		andi r24,lo8(112)
 348 0028 0E94 0000 		call spiSend
 349 002c 182F      		mov r17,r24
  34:../../freeRtos/Lib/mcp3008.c ****   resultLo = spiSend(0);        //X X X X X X X X
 351               	.LM9:
 352 002e 80E0      		ldi r24,0
 353 0030 0E94 0000 		call spiSend
  35:../../freeRtos/Lib/mcp3008.c ****   
  36:../../freeRtos/Lib/mcp3008.c ****   disableSpiMCP3008(); 
 355               	.LM10:
 356 0034 8983      		std Y+1,r24
 357 0036 0E94 0000 		call disableSpiMCP3008
  37:../../freeRtos/Lib/mcp3008.c ****   spiGive();
 359               	.LM11:
 360 003a 0E94 0000 		call spiGive
  38:../../freeRtos/Lib/mcp3008.c ****   
  39:../../freeRtos/Lib/mcp3008.c ****   resultHi &= 0x03;
 362               	.LM12:
 363 003e 1370      		andi r17,lo8(3)
  40:../../freeRtos/Lib/mcp3008.c ****   return resultHi << 8 | resultLo;
 365               	.LM13:
 366 0040 8981      		ldd r24,Y+1
 367 0042 90E0      		ldi r25,0
  41:../../freeRtos/Lib/mcp3008.c **** }
 369               	.LM14:
 370 0044 912B      		or r25,r17
 371               	/* epilogue start */
 372 0046 0F90      		pop __tmp_reg__
 373 0048 DF91      		pop r29
 374 004a CF91      		pop r28
 375 004c 1F91      		pop r17
 376 004e 0895      		ret
 381               	.Lscope3:
 383               		.stabd	78,0,0
 386               	.global	MCP3008_getSampleSingle
 388               	MCP3008_getSampleSingle:
 389               		.stabd	46,0,0
  42:../../freeRtos/Lib/mcp3008.c **** 
  43:../../freeRtos/Lib/mcp3008.c **** uint16_t MCP3008_getSampleSingle(uint8_t inputNo)
  44:../../freeRtos/Lib/mcp3008.c **** {
 391               	.LM15:
 392               	.LFBB4:
 393 0050 1F93      		push r17
 394 0052 CF93      		push r28
 395 0054 DF93      		push r29
 396 0056 1F92      		push __zero_reg__
 397 0058 CDB7      		in r28,__SP_L__
 398 005a DEB7      		in r29,__SP_H__
 399               	/* prologue: function */
 400               	/* frame size = 1 */
 401               	/* stack size = 4 */
 402               	.L__stack_usage = 4
  45:../../freeRtos/Lib/mcp3008.c ****   uint8_t resultLo;
  46:../../freeRtos/Lib/mcp3008.c ****   uint8_t resultHi;
  47:../../freeRtos/Lib/mcp3008.c ****   inputNo = inputNo << 4;
 404               	.LM16:
 405 005c 182F      		mov r17,r24
 406 005e 1295      		swap r17
  48:../../freeRtos/Lib/mcp3008.c ****   inputNo &= 0x70;
 408               	.LM17:
 409 0060 1077      		andi r17,lo8(112)
  49:../../freeRtos/Lib/mcp3008.c ****   inputNo |= 0x80;
  50:../../freeRtos/Lib/mcp3008.c ****   
  51:../../freeRtos/Lib/mcp3008.c ****   spiTake();
 411               	.LM18:
 412 0062 0E94 0000 		call spiTake
  52:../../freeRtos/Lib/mcp3008.c ****   enableSpiMCP3008();
 414               	.LM19:
 415 0066 0E94 0000 		call enableSpiMCP3008
  53:../../freeRtos/Lib/mcp3008.c ****   
  54:../../freeRtos/Lib/mcp3008.c ****   spiSend(0x01);                //Start
 417               	.LM20:
 418 006a 81E0      		ldi r24,lo8(1)
 419 006c 0E94 0000 		call spiSend
  55:../../freeRtos/Lib/mcp3008.c ****   resultHi = spiSend(inputNo);  //DIFF/!SGL A2 A1 A0 X X X X
 421               	.LM21:
 422 0070 812F      		mov r24,r17
 423 0072 8068      		ori r24,lo8(-128)
 424 0074 0E94 0000 		call spiSend
 425 0078 182F      		mov r17,r24
  56:../../freeRtos/Lib/mcp3008.c ****   resultLo = spiSend(0);        //X X X X X X X X
 427               	.LM22:
 428 007a 80E0      		ldi r24,0
 429 007c 0E94 0000 		call spiSend
  57:../../freeRtos/Lib/mcp3008.c ****   
  58:../../freeRtos/Lib/mcp3008.c ****   disableSpiMCP3008(); 
 431               	.LM23:
 432 0080 8983      		std Y+1,r24
 433 0082 0E94 0000 		call disableSpiMCP3008
  59:../../freeRtos/Lib/mcp3008.c ****   spiGive();
 435               	.LM24:
 436 0086 0E94 0000 		call spiGive
  60:../../freeRtos/Lib/mcp3008.c ****   
  61:../../freeRtos/Lib/mcp3008.c ****   resultHi &= 0x03;
 438               	.LM25:
 439 008a 1370      		andi r17,lo8(3)
  62:../../freeRtos/Lib/mcp3008.c ****   return resultHi << 8 | resultLo;
 441               	.LM26:
 442 008c 8981      		ldd r24,Y+1
 443 008e 90E0      		ldi r25,0
  63:../../freeRtos/Lib/mcp3008.c **** }
 445               	.LM27:
 446 0090 912B      		or r25,r17
 447               	/* epilogue start */
 448 0092 0F90      		pop __tmp_reg__
 449 0094 DF91      		pop r29
 450 0096 CF91      		pop r28
 451 0098 1F91      		pop r17
 452 009a 0895      		ret
 457               	.Lscope4:
 459               		.stabd	78,0,0
 460               		.comm	czasRtc,7,1
 461               		.comm	sockets,2,1
 462               		.comm	tcpDebugLevel,1,1
 463               		.comm	tcpDebugStream,2,1
 464               		.comm	IpMyConfig,15,1
 465               		.comm	udpDbgLevel,1,1
 466               		.comm	udpDbgStream,2,1
 467               		.comm	udpSocket,2,1
 468               		.comm	icmpDebugLevel,1,1
 469               		.comm	icmpDebug,2,1
 470               		.comm	arpDebugLevel,1,1
 471               		.comm	arpDebug,2,1
 472               		.comm	plen,2,1
 473               		.comm	nicState,14,1
 474               		.comm	xSemaphoreRs485,2,1
 475               		.comm	lockSensors,2,1
 476               		.comm	portB,1,1
 477               		.comm	portA,1,1
 478               		.comm	xSemaphoreSpiSS,2,1
 479               		.comm	rollers,2,1
 480               		.comm	wwwport,1,1
 481               		.comm	klastry,128,1
 504               		.weak	spiSend
 506               	.Letext0:
 507               		.ident	"GCC: (GNU) 4.8.2"
 508               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:0000000000000000 mcp3008.c
     /tmp/ccPh5iI9.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccPh5iI9.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccPh5iI9.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccPh5iI9.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccPh5iI9.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccPh5iI9.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccPh5iI9.s:277    .text:0000000000000000 enableSpiMCP3008
     /tmp/ccPh5iI9.s:294    .text:0000000000000002 disableSpiMCP3008
     /tmp/ccPh5iI9.s:312    .text:0000000000000004 MCP3008_getSampleDiff
     /tmp/ccPh5iI9.s:388    .text:0000000000000050 MCP3008_getSampleSingle
                            *COM*:0000000000000007 czasRtc
                            *COM*:0000000000000002 sockets
                            *COM*:0000000000000001 tcpDebugLevel
                            *COM*:0000000000000002 tcpDebugStream
                            *COM*:000000000000000f IpMyConfig
                            *COM*:0000000000000001 udpDbgLevel
                            *COM*:0000000000000002 udpDbgStream
                            *COM*:0000000000000002 udpSocket
                            *COM*:0000000000000001 icmpDebugLevel
                            *COM*:0000000000000002 icmpDebug
                            *COM*:0000000000000001 arpDebugLevel
                            *COM*:0000000000000002 arpDebug
                            *COM*:0000000000000002 plen
                            *COM*:000000000000000e nicState
                            *COM*:0000000000000002 xSemaphoreRs485
                            *COM*:0000000000000002 lockSensors
                            *COM*:0000000000000001 portB
                            *COM*:0000000000000001 portA
                            *COM*:0000000000000002 xSemaphoreSpiSS
                            *COM*:0000000000000002 rollers
                            *COM*:0000000000000001 wwwport
                            *COM*:0000000000000080 klastry

UNDEFINED SYMBOLS
spiTake
spiSend
spiGive
__do_clear_bss
