   1               		.file	"tcp.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
  10               		.text
  11               	.Ltext0:
 184               	.global	socketInit
 186               	socketInit:
 187               		.stabd	46,0,0
   1:../../freeRtos/Lib/net/tcp.c **** /**
   2:../../freeRtos/Lib/net/tcp.c ****  * @file        tcp.c
   3:../../freeRtos/Lib/net/tcp.c ****  * @author      Adam Kaliszan
   4:../../freeRtos/Lib/net/tcp.c ****  * @brief       TCP socket
   5:../../freeRtos/Lib/net/tcp.c ****  * @ingroup     network
   6:../../freeRtos/Lib/net/tcp.c ****  * @defgroup    netstack Network Stack
   7:../../freeRtos/Lib/net/tcp.c ****  * @version     0.2
   8:../../freeRtos/Lib/net/tcp.c ****  * Created:     13.10.2010
   9:../../freeRtos/Lib/net/tcp.c ****  * Revised:     05.10.2010
  10:../../freeRtos/Lib/net/tcp.c ****  * Editor Tabs: 2
  11:../../freeRtos/Lib/net/tcp.c ****  *
  12:../../freeRtos/Lib/net/tcp.c ****  */
  13:../../freeRtos/Lib/net/tcp.c **** 
  14:../../freeRtos/Lib/net/tcp.c **** #include "tcp.h"
  15:../../freeRtos/Lib/net/tcp.c **** 
  16:../../freeRtos/Lib/net/tcp.c **** 
  17:../../freeRtos/Lib/net/tcp.c **** static struct TcpIpSocket* findConnectedSocket(void);
  18:../../freeRtos/Lib/net/tcp.c **** 
  19:../../freeRtos/Lib/net/tcp.c **** /**
  20:../../freeRtos/Lib/net/tcp.c ****  * @param *sck socket
  21:../../freeRtos/Lib/net/tcp.c ****  */
  22:../../freeRtos/Lib/net/tcp.c **** static inline void tcpAcceptConn(struct TcpIpSocket *sck);
  23:../../freeRtos/Lib/net/tcp.c **** 
  24:../../freeRtos/Lib/net/tcp.c **** inline void socketInit(void)
  25:../../freeRtos/Lib/net/tcp.c **** {
 189               	.LM0:
 190               	.LFBB1:
 191 0000 BF92      		push r11
 192 0002 CF92      		push r12
 193 0004 DF92      		push r13
 194 0006 EF92      		push r14
 195 0008 FF92      		push r15
 196 000a 0F93      		push r16
 197 000c 1F93      		push r17
 198 000e CF93      		push r28
 199 0010 DF93      		push r29
 200               	/* prologue: function */
 201               	/* frame size = 0 */
 202               	/* stack size = 9 */
 203               	.L__stack_usage = 9
  26:../../freeRtos/Lib/net/tcp.c ****   sockets = xmalloc(NUMBER_OF_SOCKETS * sizeof(struct TcpIpSocket));
 205               	.LM1:
 206 0012 80E3      		ldi r24,lo8(48)
 207 0014 92E0      		ldi r25,lo8(2)
 208 0016 0E94 0000 		call xmalloc
 209 001a 9093 0000 		sts sockets+1,r25
 210 001e 8093 0000 		sts sockets,r24
  27:../../freeRtos/Lib/net/tcp.c ****   memset(sockets, 0, NUMBER_OF_SOCKETS * sizeof(struct TcpIpSocket));
 212               	.LM2:
 213 0022 20E3      		ldi r18,lo8(48)
 214 0024 32E0      		ldi r19,lo8(2)
 215 0026 FC01      		movw r30,r24
 216 0028 A901      		movw r20,r18
 217               		0:
 218 002a 1192      		st Z+,__zero_reg__
 219 002c 4150      		subi r20,1
 220 002e 5040      		sbci r21,0
 221 0030 01F4      		brne 0b
  28:../../freeRtos/Lib/net/tcp.c ****   
  29:../../freeRtos/Lib/net/tcp.c ****   uint8_t            i;
  30:../../freeRtos/Lib/net/tcp.c ****   uint8_t            *ptr = (uint8_t *)RTOS_TCP_BUF_BASE_ADDR;
  31:../../freeRtos/Lib/net/tcp.c **** 
  32:../../freeRtos/Lib/net/tcp.c ****   struct TcpIpSocket *sck = sockets;
 223               	.LM3:
 224 0032 0091 0000 		lds r16,sockets
 225 0036 1091 0000 		lds r17,sockets+1
 226 003a C8EA      		ldi r28,lo8(-88)
 227 003c D1E6      		ldi r29,lo8(97)
  33:../../freeRtos/Lib/net/tcp.c ****   for (i=0; i < NUMBER_OF_SOCKETS; i++)
  34:../../freeRtos/Lib/net/tcp.c ****   {
  35:../../freeRtos/Lib/net/tcp.c **** //    sck->Rx = xQueueCreateExternal(255, 1, (void *)(ptr));
  36:../../freeRtos/Lib/net/tcp.c ****     ptr+=256;
  37:../../freeRtos/Lib/net/tcp.c **** //    sck->Tx = xQueueCreateExternal(255, 1, (void *)(ptr));
  38:../../freeRtos/Lib/net/tcp.c ****     ptr+=256;
  39:../../freeRtos/Lib/net/tcp.c **** 
  40:../../freeRtos/Lib/net/tcp.c ****     sck->localPort     = (i<16) ? htons(MYTELNETPOERT + i) : (MYTELNETPOERT + 16);
  41:../../freeRtos/Lib/net/tcp.c ****     sck->seqNoLastSent = HTONL(0xFF112233); 
 229               	.LM4:
 230 003e CC24      		clr r12
 231 0040 CA94      		dec r12
 232 0042 81E1      		ldi r24,lo8(17)
 233 0044 D82E      		mov r13,r24
 234 0046 82E2      		ldi r24,lo8(34)
 235 0048 E82E      		mov r14,r24
 236 004a 83E3      		ldi r24,lo8(51)
 237 004c F82E      		mov r15,r24
  42:../../freeRtos/Lib/net/tcp.c ****     sck->state         = LISTEN;   
 239               	.LM5:
 240 004e BB24      		clr r11
 241 0050 B394      		inc r11
 242               	.L4:
 243 0052 8C2F      		mov r24,r28
 244 0054 885A      		subi r24,lo8(-(88))
  40:../../freeRtos/Lib/net/tcp.c ****     sck->localPort     = (i<16) ? htons(MYTELNETPOERT + i) : (MYTELNETPOERT + 16);
 246               	.LM6:
 247 0056 8031      		cpi r24,lo8(16)
 248 0058 00F4      		brsh .L5
  40:../../freeRtos/Lib/net/tcp.c ****     sck->localPort     = (i<16) ? htons(MYTELNETPOERT + i) : (MYTELNETPOERT + 16);
 250               	.LM7:
 251 005a CE01      		movw r24,r28
 252 005c 0E94 0000 		call htons
 253 0060 00C0      		rjmp .L2
 254               	.L5:
  40:../../freeRtos/Lib/net/tcp.c ****     sck->localPort     = (i<16) ? htons(MYTELNETPOERT + i) : (MYTELNETPOERT + 16);
 256               	.LM8:
 257 0062 88EB      		ldi r24,lo8(-72)
 258 0064 91E6      		ldi r25,lo8(97)
 259               	.L2:
  40:../../freeRtos/Lib/net/tcp.c ****     sck->localPort     = (i<16) ? htons(MYTELNETPOERT + i) : (MYTELNETPOERT + 16);
 261               	.LM9:
 262 0066 F801      		movw r30,r16
 263 0068 9683      		std Z+6,r25
 264 006a 8583      		std Z+5,r24
  41:../../freeRtos/Lib/net/tcp.c ****     sck->seqNoLastSent = HTONL(0xFF112233); 
 266               	.LM10:
 267 006c C586      		std Z+13,r12
 268 006e D686      		std Z+14,r13
 269 0070 E786      		std Z+15,r14
 270 0072 F08A      		std Z+16,r15
 272               	.LM11:
 273 0074 B082      		st Z,r11
  43:../../freeRtos/Lib/net/tcp.c ****     sck++;
 275               	.LM12:
 276 0076 045E      		subi r16,-28
 277 0078 1F4F      		sbci r17,-1
 278 007a 2196      		adiw r28,1
  33:../../freeRtos/Lib/net/tcp.c ****   for (i=0; i < NUMBER_OF_SOCKETS; i++)
 280               	.LM13:
 281 007c CC3B      		cpi r28,-68
 282 007e F1E6      		ldi r31,97
 283 0080 DF07      		cpc r29,r31
 284 0082 01F4      		brne .L4
 285               	/* epilogue start */
  44:../../freeRtos/Lib/net/tcp.c ****   }
  45:../../freeRtos/Lib/net/tcp.c **** }
 287               	.LM14:
 288 0084 DF91      		pop r29
 289 0086 CF91      		pop r28
 290 0088 1F91      		pop r17
 291 008a 0F91      		pop r16
 292 008c FF90      		pop r15
 293 008e EF90      		pop r14
 294 0090 DF90      		pop r13
 295 0092 CF90      		pop r12
 296 0094 BF90      		pop r11
 297 0096 0895      		ret
 302               	.Lscope1:
 304               		.stabd	78,0,0
 307               	.global	calculateTcpChecksun
 309               	calculateTcpChecksun:
 310               		.stabd	46,0,0
  46:../../freeRtos/Lib/net/tcp.c **** 
  47:../../freeRtos/Lib/net/tcp.c **** struct TcpIpSocket* findConnectedSocket(void)
  48:../../freeRtos/Lib/net/tcp.c **** {
  49:../../freeRtos/Lib/net/tcp.c ****   struct TcpIpSocket *result = sockets;
  50:../../freeRtos/Lib/net/tcp.c ****   uint8_t i;
  51:../../freeRtos/Lib/net/tcp.c ****   for (i=0; i<NUMBER_OF_SOCKETS; i++)
  52:../../freeRtos/Lib/net/tcp.c ****   {
  53:../../freeRtos/Lib/net/tcp.c ****     if ( ((result->state != LISTEN) && (result->state != CLOSED)) 
  54:../../freeRtos/Lib/net/tcp.c ****       && (result->RemoteIpAddr == nicState.layer3.ip->srcipaddr) && (result->localPort == nicState.
  55:../../freeRtos/Lib/net/tcp.c ****     {
  56:../../freeRtos/Lib/net/tcp.c **** #if TCP_DEBUG
  57:../../freeRtos/Lib/net/tcp.c ****       if (tcpDebugStream != NULL)
  58:../../freeRtos/Lib/net/tcp.c ****         if (tcpDebugLevel > 2)
  59:../../freeRtos/Lib/net/tcp.c ****           fprintf_P(tcpDebugStream, PSTR("Found TCP socket state %d\r\n"), result->state);
  60:../../freeRtos/Lib/net/tcp.c **** #endif      
  61:../../freeRtos/Lib/net/tcp.c ****       return result;
  62:../../freeRtos/Lib/net/tcp.c ****     }
  63:../../freeRtos/Lib/net/tcp.c ****     result++;
  64:../../freeRtos/Lib/net/tcp.c ****   }
  65:../../freeRtos/Lib/net/tcp.c ****   
  66:../../freeRtos/Lib/net/tcp.c ****   result = sockets;
  67:../../freeRtos/Lib/net/tcp.c ****   for (i=0; i<NUMBER_OF_SOCKETS; i++)
  68:../../freeRtos/Lib/net/tcp.c ****   {
  69:../../freeRtos/Lib/net/tcp.c ****     if ((result->state == LISTEN) && (result->localPort == nicState.layer4.tcp->destport))
  70:../../freeRtos/Lib/net/tcp.c ****     {
  71:../../freeRtos/Lib/net/tcp.c **** #if TCP_DEBUG
  72:../../freeRtos/Lib/net/tcp.c ****       if (tcpDebugStream != NULL)
  73:../../freeRtos/Lib/net/tcp.c ****         if (tcpDebugLevel > 2)
  74:../../freeRtos/Lib/net/tcp.c ****           fprintf_P(tcpDebugStream, PSTR("Found TCP socket no %d state LISTEN\r\n"), i);
  75:../../freeRtos/Lib/net/tcp.c **** #endif      
  76:../../freeRtos/Lib/net/tcp.c ****       return &sockets[i];
  77:../../freeRtos/Lib/net/tcp.c ****     }
  78:../../freeRtos/Lib/net/tcp.c ****     result++;
  79:../../freeRtos/Lib/net/tcp.c ****   }
  80:../../freeRtos/Lib/net/tcp.c **** #if TCP_DEBUG
  81:../../freeRtos/Lib/net/tcp.c ****   if (tcpDebugStream != NULL)
  82:../../freeRtos/Lib/net/tcp.c ****     if (tcpDebugLevel > 2)
  83:../../freeRtos/Lib/net/tcp.c ****       fprintf_P(tcpDebugStream, PSTR("Can't find TCP socket with localPort %d\r\n"), htons(nicState
  84:../../freeRtos/Lib/net/tcp.c **** #endif
  85:../../freeRtos/Lib/net/tcp.c ****   return NULL;
  86:../../freeRtos/Lib/net/tcp.c **** }
  87:../../freeRtos/Lib/net/tcp.c **** 
  88:../../freeRtos/Lib/net/tcp.c **** static inline void tcpAcceptConn(struct TcpIpSocket *sck)
  89:../../freeRtos/Lib/net/tcp.c **** {
  90:../../freeRtos/Lib/net/tcp.c ****   sck->state        = SYN_RECEIVED;
  91:../../freeRtos/Lib/net/tcp.c ****   sck->remotePort   = nicState.layer4.tcp->srcport;
  92:../../freeRtos/Lib/net/tcp.c ****   sck->RemoteIpAddr = nicState.layer3.ip->srcipaddr;
  93:../../freeRtos/Lib/net/tcp.c **** }
  94:../../freeRtos/Lib/net/tcp.c **** 
  95:../../freeRtos/Lib/net/tcp.c **** inline uint8_t processTcpPacket(void)
  96:../../freeRtos/Lib/net/tcp.c **** {
  97:../../freeRtos/Lib/net/tcp.c ****   struct TcpIpSocket *socket = findConnectedSocket();
  98:../../freeRtos/Lib/net/tcp.c ****   
  99:../../freeRtos/Lib/net/tcp.c ****   if (socket == NULL)
 100:../../freeRtos/Lib/net/tcp.c ****     return 1;
 101:../../freeRtos/Lib/net/tcp.c ****   
 102:../../freeRtos/Lib/net/tcp.c ****   
 103:../../freeRtos/Lib/net/tcp.c ****   socket->seqNoLastReceived = htonl(nicState.layer4.tcp->seqno);
 104:../../freeRtos/Lib/net/tcp.c ****   
 105:../../freeRtos/Lib/net/tcp.c ****   if (socket->state == LISTEN)
 106:../../freeRtos/Lib/net/tcp.c ****   {
 107:../../freeRtos/Lib/net/tcp.c ****     if (nicState.layer4.tcp->flags & TCP_FLAGS_SYN)
 108:../../freeRtos/Lib/net/tcp.c ****     {
 109:../../freeRtos/Lib/net/tcp.c **** //      uint16_t len = nicState.layer4.tcp->tcpoffset>>4;
 110:../../freeRtos/Lib/net/tcp.c **** //      len *=4;
 111:../../freeRtos/Lib/net/tcp.c **** #if TCP_DEBUG
 112:../../freeRtos/Lib/net/tcp.c ****       if (tcpDebugStream != NULL)
 113:../../freeRtos/Lib/net/tcp.c ****         if (tcpDebugLevel > 2)
 114:../../freeRtos/Lib/net/tcp.c ****           fprintf_P(tcpDebugStream, PSTR("Opening TCP connection socket state change LISTEN->SYN_RE
 115:../../freeRtos/Lib/net/tcp.c **** #endif
 116:../../freeRtos/Lib/net/tcp.c ****       tcpAcceptConn(socket);
 117:../../freeRtos/Lib/net/tcp.c ****       //Preparing response
 118:../../freeRtos/Lib/net/tcp.c ****       nicState.layer4.tcp->srcport   = socket->localPort;
 119:../../freeRtos/Lib/net/tcp.c ****       nicState.layer4.tcp->destport  = socket->remotePort;
 120:../../freeRtos/Lib/net/tcp.c ****       nicState.layer4.tcp->seqno     = htonl(socket->seqNoLastSent);
 121:../../freeRtos/Lib/net/tcp.c ****       nicState.layer4.tcp->ackno     = htonl(socket->seqNoLastReceived+1);
 122:../../freeRtos/Lib/net/tcp.c ****       nicState.layer4.tcp->tcpoffset = 5<<4;
 123:../../freeRtos/Lib/net/tcp.c ****       nicState.layer4.tcp->flags     = TCP_FLAGS_ACK+TCP_FLAGS_SYN;
 124:../../freeRtos/Lib/net/tcp.c ****       nicState.layer4.tcp->wnd       = htons(100);
 125:../../freeRtos/Lib/net/tcp.c ****       nicState.layer4.tcp->tcpchksum = 0;
 126:../../freeRtos/Lib/net/tcp.c ****       nicState.layer4.tcp->urgp      = 0;
 127:../../freeRtos/Lib/net/tcp.c ****       calculateTcpChecksun(TCP_HEADER_LEN);
 128:../../freeRtos/Lib/net/tcp.c **** 
 129:../../freeRtos/Lib/net/tcp.c ****       socket->seqNoLastSent++;
 130:../../freeRtos/Lib/net/tcp.c ****       ipSend(socket->RemoteIpAddr, IP_PROTO_TCP, TCP_HEADER_LEN);
 131:../../freeRtos/Lib/net/tcp.c ****     }
 132:../../freeRtos/Lib/net/tcp.c **** #if TCP_DEBUG
 133:../../freeRtos/Lib/net/tcp.c ****     else
 134:../../freeRtos/Lib/net/tcp.c ****     {
 135:../../freeRtos/Lib/net/tcp.c ****       if (tcpDebugStream != NULL)
 136:../../freeRtos/Lib/net/tcp.c ****         if (tcpDebugLevel > 1)
 137:../../freeRtos/Lib/net/tcp.c ****           fprintf_P(tcpDebugStream, PSTR("Opening TCP connection ERROR: syn flag wasn't set\r\n"));
 138:../../freeRtos/Lib/net/tcp.c ****     }
 139:../../freeRtos/Lib/net/tcp.c **** #endif    
 140:../../freeRtos/Lib/net/tcp.c ****     return 0;
 141:../../freeRtos/Lib/net/tcp.c ****   }
 142:../../freeRtos/Lib/net/tcp.c ****   
 143:../../freeRtos/Lib/net/tcp.c ****   if (socket->state == SYN_RECEIVED)
 144:../../freeRtos/Lib/net/tcp.c ****   {
 145:../../freeRtos/Lib/net/tcp.c ****     if (nicState.layer4.tcp->flags & TCP_FLAGS_ACK)
 146:../../freeRtos/Lib/net/tcp.c ****     {
 147:../../freeRtos/Lib/net/tcp.c ****       socket->state    = ESTABILISHED;
 148:../../freeRtos/Lib/net/tcp.c **** #if TCP_DEBUG
 149:../../freeRtos/Lib/net/tcp.c ****     if (tcpDebugStream != NULL)
 150:../../freeRtos/Lib/net/tcp.c ****       if (tcpDebugLevel > 2)
 151:../../freeRtos/Lib/net/tcp.c ****         fprintf_P(tcpDebugStream, PSTR("Opening TCP connection socket state change SYN_RECEIVED->ES
 152:../../freeRtos/Lib/net/tcp.c **** #endif        
 153:../../freeRtos/Lib/net/tcp.c **** 
 154:../../freeRtos/Lib/net/tcp.c ****     }
 155:../../freeRtos/Lib/net/tcp.c ****     else
 156:../../freeRtos/Lib/net/tcp.c ****     {
 157:../../freeRtos/Lib/net/tcp.c ****       socket->state = LISTEN;
 158:../../freeRtos/Lib/net/tcp.c **** #if TCP_DEBUG
 159:../../freeRtos/Lib/net/tcp.c ****       if (tcpDebugStream != NULL)
 160:../../freeRtos/Lib/net/tcp.c ****         if (tcpDebugLevel > 1)
 161:../../freeRtos/Lib/net/tcp.c ****           fprintf_P(tcpDebugStream, PSTR("Opening TCP connection ERROR: ack flag wasn't set\r\n"));
 162:../../freeRtos/Lib/net/tcp.c **** #endif    
 163:../../freeRtos/Lib/net/tcp.c ****     }
 164:../../freeRtos/Lib/net/tcp.c ****     return 0;
 165:../../freeRtos/Lib/net/tcp.c ****   }
 166:../../freeRtos/Lib/net/tcp.c ****   
 167:../../freeRtos/Lib/net/tcp.c ****   
 168:../../freeRtos/Lib/net/tcp.c ****   if (socket->state == ESTABILISHED)
 169:../../freeRtos/Lib/net/tcp.c ****   {
 170:../../freeRtos/Lib/net/tcp.c ****     if (nicState.layer4.tcp->flags & TCP_FLAGS_FIN)  //ESTABILISHED -> CLOSE_WAIT -> closed
 171:../../freeRtos/Lib/net/tcp.c ****     {
 172:../../freeRtos/Lib/net/tcp.c ****       socket->timer              = timer100Hz;
 173:../../freeRtos/Lib/net/tcp.c ****       nicState.layer4.tcp->flags = TCP_FLAGS_ACK;
 174:../../freeRtos/Lib/net/tcp.c ****       
 175:../../freeRtos/Lib/net/tcp.c ****       uint8_t dataFromBufLen;
 176:../../freeRtos/Lib/net/tcp.c ****       uint8_t *dataPtr = (uint8_t *)(nicState.layer4.tcp+1);
 177:../../freeRtos/Lib/net/tcp.c **** //      while (xQueueReceive(socket->Tx, dataPtr, 0) == pdTRUE)
 178:../../freeRtos/Lib/net/tcp.c **** //      {
 179:../../freeRtos/Lib/net/tcp.c **** //        dataFromBufLen++;
 180:../../freeRtos/Lib/net/tcp.c **** //        dataPtr++;
 181:../../freeRtos/Lib/net/tcp.c **** //      }
 182:../../freeRtos/Lib/net/tcp.c ****       ipSend(socket->RemoteIpAddr, IP_PROTO_TCP, TCP_HEADER_LEN + dataFromBufLen);
 183:../../freeRtos/Lib/net/tcp.c ****       socket->state    = CLOSE_WAIT;
 184:../../freeRtos/Lib/net/tcp.c ****       
 185:../../freeRtos/Lib/net/tcp.c ****       
 186:../../freeRtos/Lib/net/tcp.c ****       nicState.layer4.tcp->flags = TCP_FLAGS_FIN;
 187:../../freeRtos/Lib/net/tcp.c ****       ipSend(socket->RemoteIpAddr, IP_PROTO_TCP, TCP_HEADER_LEN);
 188:../../freeRtos/Lib/net/tcp.c ****       socket->state    = LAST_ACK;
 189:../../freeRtos/Lib/net/tcp.c ****     }
 190:../../freeRtos/Lib/net/tcp.c ****     return 0;
 191:../../freeRtos/Lib/net/tcp.c ****   }
 192:../../freeRtos/Lib/net/tcp.c **** 
 193:../../freeRtos/Lib/net/tcp.c ****   //Read data and put into the queue
 194:../../freeRtos/Lib/net/tcp.c ****   
 195:../../freeRtos/Lib/net/tcp.c ****   return 0;
 196:../../freeRtos/Lib/net/tcp.c **** }
 197:../../freeRtos/Lib/net/tcp.c **** 
 198:../../freeRtos/Lib/net/tcp.c **** void calculateTcpChecksun(uint16_t tcpLen)
 199:../../freeRtos/Lib/net/tcp.c **** {
 312               	.LM15:
 313               	.LFBB2:
 314 0098 CF93      		push r28
 315 009a DF93      		push r29
 316               	/* prologue: function */
 317               	/* frame size = 0 */
 318               	/* stack size = 2 */
 319               	.L__stack_usage = 2
 200:../../freeRtos/Lib/net/tcp.c ****   nicState.layer4.tcp->tcpchksum = 0;
 321               	.LM16:
 322 009c C091 0000 		lds r28,nicState+12
 323 00a0 D091 0000 		lds r29,nicState+12+1
 324 00a4 198A      		std Y+17,__zero_reg__
 325 00a6 188A      		std Y+16,__zero_reg__
 201:../../freeRtos/Lib/net/tcp.c ****   nicState.layer4.tcp->tcpchksum = netChecksum(nicState.layer4.tcp, tcpLen); //TODO finish it
 327               	.LM17:
 328 00a8 BC01      		movw r22,r24
 329 00aa CE01      		movw r24,r28
 330 00ac 0E94 0000 		call netChecksum
 331 00b0 998B      		std Y+17,r25
 332 00b2 888B      		std Y+16,r24
 333               	/* epilogue start */
 202:../../freeRtos/Lib/net/tcp.c **** }
 335               	.LM18:
 336 00b4 DF91      		pop r29
 337 00b6 CF91      		pop r28
 338 00b8 0895      		ret
 340               	.Lscope2:
 342               		.stabd	78,0,0
 344               	.global	processTcpPacket
 346               	processTcpPacket:
 347               		.stabd	46,0,0
  96:../../freeRtos/Lib/net/tcp.c **** {
 349               	.LM19:
 350               	.LFBB3:
 351 00ba 8F92      		push r8
 352 00bc 9F92      		push r9
 353 00be AF92      		push r10
 354 00c0 BF92      		push r11
 355 00c2 DF92      		push r13
 356 00c4 EF92      		push r14
 357 00c6 FF92      		push r15
 358 00c8 0F93      		push r16
 359 00ca 1F93      		push r17
 360 00cc CF93      		push r28
 361 00ce DF93      		push r29
 362               	/* prologue: function */
 363               	/* frame size = 0 */
 364               	/* stack size = 11 */
 365               	.L__stack_usage = 11
 366               	.LBB14:
 367               	.LBB15:
  49:../../freeRtos/Lib/net/tcp.c ****   struct TcpIpSocket *result = sockets;
 369               	.LM20:
 370 00d0 E091 0000 		lds r30,sockets
 371 00d4 F091 0000 		lds r31,sockets+1
  54:../../freeRtos/Lib/net/tcp.c ****       && (result->RemoteIpAddr == nicState.layer3.ip->srcipaddr) && (result->localPort == nicState.
 373               	.LM21:
 374 00d8 E090 0000 		lds r14,nicState+10
 375 00dc F090 0000 		lds r15,nicState+10+1
 376 00e0 2091 0000 		lds r18,nicState+12
 377 00e4 3091 0000 		lds r19,nicState+12+1
 378 00e8 8F01      		movw r16,r30
 379 00ea 005D      		subi r16,-48
 380 00ec 1D4F      		sbci r17,-3
  49:../../freeRtos/Lib/net/tcp.c ****   struct TcpIpSocket *result = sockets;
 382               	.LM22:
 383 00ee EF01      		movw r28,r30
 384               	.L12:
  53:../../freeRtos/Lib/net/tcp.c ****     if ( ((result->state != LISTEN) && (result->state != CLOSED)) 
 386               	.LM23:
 387 00f0 D880      		ld r13,Y
 388 00f2 81E0      		ldi r24,lo8(1)
 389 00f4 8D15      		cp r24,r13
 390 00f6 00F4      		brsh .L9
  54:../../freeRtos/Lib/net/tcp.c ****       && (result->RemoteIpAddr == nicState.layer3.ip->srcipaddr) && (result->localPort == nicState.
 392               	.LM24:
 393 00f8 4981      		ldd r20,Y+1
 394 00fa 5A81      		ldd r21,Y+2
 395 00fc 6B81      		ldd r22,Y+3
 396 00fe 7C81      		ldd r23,Y+4
 397 0100 D701      		movw r26,r14
 398 0102 1C96      		adiw r26,12
 399 0104 8D90      		ld r8,X+
 400 0106 9D90      		ld r9,X+
 401 0108 AD90      		ld r10,X+
 402 010a BC90      		ld r11,X
 403 010c 1F97      		sbiw r26,12+3
 404 010e 4815      		cp r20,r8
 405 0110 5905      		cpc r21,r9
 406 0112 6A05      		cpc r22,r10
 407 0114 7B05      		cpc r23,r11
 408 0116 01F4      		brne .L9
 409 0118 4D81      		ldd r20,Y+5
 410 011a 5E81      		ldd r21,Y+6
 411 011c D901      		movw r26,r18
 412 011e 1296      		adiw r26,2
 413 0120 8D91      		ld r24,X+
 414 0122 9C91      		ld r25,X
 415 0124 1397      		sbiw r26,2+1
 416 0126 4817      		cp r20,r24
 417 0128 5907      		cpc r21,r25
 418 012a 01F4      		brne .L9
 419 012c 4F81      		ldd r20,Y+7
 420 012e 5885      		ldd r21,Y+8
 421 0130 8D91      		ld r24,X+
 422 0132 9C91      		ld r25,X
 423 0134 4817      		cp r20,r24
 424 0136 5907      		cpc r21,r25
 425 0138 01F4      		brne .L9
  57:../../freeRtos/Lib/net/tcp.c ****       if (tcpDebugStream != NULL)
 427               	.LM25:
 428 013a 8091 0000 		lds r24,tcpDebugStream
 429 013e 9091 0000 		lds r25,tcpDebugStream+1
 430 0142 0097      		sbiw r24,0
 431 0144 01F4      		brne .+2
 432 0146 00C0      		rjmp .L10
  58:../../freeRtos/Lib/net/tcp.c ****         if (tcpDebugLevel > 2)
 434               	.LM26:
 435 0148 2091 0000 		lds r18,tcpDebugLevel
 436 014c 2330      		cpi r18,lo8(3)
 437 014e 00F4      		brsh .+2
 438 0150 00C0      		rjmp .L10
  59:../../freeRtos/Lib/net/tcp.c ****           fprintf_P(tcpDebugStream, PSTR("Found TCP socket state %d\r\n"), result->state);
 440               	.LM27:
 441 0152 1F92      		push __zero_reg__
 442 0154 DF92      		push r13
 443 0156 20E0      		ldi r18,lo8(__c.2605)
 444 0158 30E0      		ldi r19,hi8(__c.2605)
 445 015a 3F93      		push r19
 446 015c 2F93      		push r18
 447 015e 9F93      		push r25
 448 0160 8F93      		push r24
 449 0162 0E94 0000 		call fprintf_P
 450 0166 0F90      		pop __tmp_reg__
 451 0168 0F90      		pop __tmp_reg__
 452 016a 0F90      		pop __tmp_reg__
 453 016c 0F90      		pop __tmp_reg__
 454 016e 0F90      		pop __tmp_reg__
 455 0170 0F90      		pop __tmp_reg__
 456 0172 00C0      		rjmp .L10
 457               	.L9:
  63:../../freeRtos/Lib/net/tcp.c ****     result++;
 459               	.LM28:
 460 0174 6C96      		adiw r28,28
  51:../../freeRtos/Lib/net/tcp.c ****   for (i=0; i<NUMBER_OF_SOCKETS; i++)
 462               	.LM29:
 463 0176 C017      		cp r28,r16
 464 0178 D107      		cpc r29,r17
 465 017a 01F0      		breq .+2
 466 017c 00C0      		rjmp .L12
 467 017e 10E0      		ldi r17,0
 468               	.L16:
  69:../../freeRtos/Lib/net/tcp.c ****     if ((result->state == LISTEN) && (result->localPort == nicState.layer4.tcp->destport))
 470               	.LM30:
 471 0180 8081      		ld r24,Z
 472 0182 8130      		cpi r24,lo8(1)
 473 0184 01F4      		brne .L13
 474 0186 4581      		ldd r20,Z+5
 475 0188 5681      		ldd r21,Z+6
 476 018a D901      		movw r26,r18
 477 018c 1296      		adiw r26,2
 478 018e 8D91      		ld r24,X+
 479 0190 9C91      		ld r25,X
 480 0192 1397      		sbiw r26,2+1
 481 0194 4817      		cp r20,r24
 482 0196 5907      		cpc r21,r25
 483 0198 01F4      		brne .L13
  72:../../freeRtos/Lib/net/tcp.c ****       if (tcpDebugStream != NULL)
 485               	.LM31:
 486 019a 8091 0000 		lds r24,tcpDebugStream
 487 019e 9091 0000 		lds r25,tcpDebugStream+1
 488 01a2 0097      		sbiw r24,0
 489 01a4 01F0      		breq .L14
  73:../../freeRtos/Lib/net/tcp.c ****         if (tcpDebugLevel > 2)
 491               	.LM32:
 492 01a6 2091 0000 		lds r18,tcpDebugLevel
 493 01aa 2330      		cpi r18,lo8(3)
 494 01ac 00F0      		brlo .L14
  74:../../freeRtos/Lib/net/tcp.c ****           fprintf_P(tcpDebugStream, PSTR("Found TCP socket no %d state LISTEN\r\n"), i);
 496               	.LM33:
 497 01ae 1F92      		push __zero_reg__
 498 01b0 1F93      		push r17
 499 01b2 20E0      		ldi r18,lo8(__c.2610)
 500 01b4 30E0      		ldi r19,hi8(__c.2610)
 501 01b6 3F93      		push r19
 502 01b8 2F93      		push r18
 503 01ba 9F93      		push r25
 504 01bc 8F93      		push r24
 505 01be 0E94 0000 		call fprintf_P
 506 01c2 0F90      		pop __tmp_reg__
 507 01c4 0F90      		pop __tmp_reg__
 508 01c6 0F90      		pop __tmp_reg__
 509 01c8 0F90      		pop __tmp_reg__
 510 01ca 0F90      		pop __tmp_reg__
 511 01cc 0F90      		pop __tmp_reg__
 512               	.L14:
  76:../../freeRtos/Lib/net/tcp.c ****       return &sockets[i];
 514               	.LM34:
 515 01ce C091 0000 		lds r28,sockets
 516 01d2 D091 0000 		lds r29,sockets+1
 517 01d6 BCE1      		ldi r27,lo8(28)
 518 01d8 1B9F      		mul r17,r27
 519 01da C00D      		add r28,r0
 520 01dc D11D      		adc r29,r1
 521 01de 1124      		clr __zero_reg__
 522 01e0 00C0      		rjmp .L10
 523               	.L13:
  78:../../freeRtos/Lib/net/tcp.c ****     result++;
 525               	.LM35:
 526 01e2 7C96      		adiw r30,28
  67:../../freeRtos/Lib/net/tcp.c ****   for (i=0; i<NUMBER_OF_SOCKETS; i++)
 528               	.LM36:
 529 01e4 1F5F      		subi r17,lo8(-(1))
 530 01e6 1431      		cpi r17,lo8(20)
 531 01e8 01F4      		brne .L16
  81:../../freeRtos/Lib/net/tcp.c ****   if (tcpDebugStream != NULL)
 533               	.LM37:
 534 01ea 8091 0000 		lds r24,tcpDebugStream
 535 01ee 9091 0000 		lds r25,tcpDebugStream+1
 536 01f2 892B      		or r24,r25
 537 01f4 01F4      		brne .+2
 538 01f6 00C0      		rjmp .L17
  82:../../freeRtos/Lib/net/tcp.c ****     if (tcpDebugLevel > 2)
 540               	.LM38:
 541 01f8 8091 0000 		lds r24,tcpDebugLevel
 542 01fc 8330      		cpi r24,lo8(3)
 543 01fe 00F4      		brsh .+2
 544 0200 00C0      		rjmp .L17
  83:../../freeRtos/Lib/net/tcp.c ****       fprintf_P(tcpDebugStream, PSTR("Can't find TCP socket with localPort %d\r\n"), htons(nicState
 546               	.LM39:
 547 0202 F901      		movw r30,r18
 548 0204 8281      		ldd r24,Z+2
 549 0206 9381      		ldd r25,Z+3
 550 0208 0E94 0000 		call htons
 551 020c 9F93      		push r25
 552 020e 8F93      		push r24
 553 0210 80E0      		ldi r24,lo8(__c.2615)
 554 0212 90E0      		ldi r25,hi8(__c.2615)
 555 0214 9F93      		push r25
 556 0216 8F93      		push r24
 557 0218 8091 0000 		lds r24,tcpDebugStream+1
 558 021c 8F93      		push r24
 559 021e 8091 0000 		lds r24,tcpDebugStream
 560 0222 8F93      		push r24
 561 0224 0E94 0000 		call fprintf_P
 562 0228 0F90      		pop __tmp_reg__
 563 022a 0F90      		pop __tmp_reg__
 564 022c 0F90      		pop __tmp_reg__
 565 022e 0F90      		pop __tmp_reg__
 566 0230 0F90      		pop __tmp_reg__
 567 0232 0F90      		pop __tmp_reg__
 568 0234 00C0      		rjmp .L17
 569               	.L10:
 570               	.LBE15:
 571               	.LBE14:
  99:../../freeRtos/Lib/net/tcp.c ****   if (socket == NULL)
 573               	.LM40:
 574 0236 2097      		sbiw r28,0
 575 0238 01F4      		brne .+2
 576 023a 00C0      		rjmp .L17
 103:../../freeRtos/Lib/net/tcp.c ****   socket->seqNoLastReceived = htonl(nicState.layer4.tcp->seqno);
 578               	.LM41:
 579 023c E091 0000 		lds r30,nicState+12
 580 0240 F091 0000 		lds r31,nicState+12+1
 581 0244 6481      		ldd r22,Z+4
 582 0246 7581      		ldd r23,Z+5
 583 0248 8681      		ldd r24,Z+6
 584 024a 9781      		ldd r25,Z+7
 585 024c 0E94 0000 		call htonl
 586 0250 6987      		std Y+9,r22
 587 0252 7A87      		std Y+10,r23
 588 0254 8B87      		std Y+11,r24
 589 0256 9C87      		std Y+12,r25
 105:../../freeRtos/Lib/net/tcp.c ****   if (socket->state == LISTEN)
 591               	.LM42:
 592 0258 8881      		ld r24,Y
 593 025a 8130      		cpi r24,lo8(1)
 594 025c 01F0      		breq .+2
 595 025e 00C0      		rjmp .L19
 107:../../freeRtos/Lib/net/tcp.c ****     if (nicState.layer4.tcp->flags & TCP_FLAGS_SYN)
 597               	.LM43:
 598 0260 E091 0000 		lds r30,nicState+12
 599 0264 F091 0000 		lds r31,nicState+12+1
 600 0268 2585      		ldd r18,Z+13
 601 026a 8091 0000 		lds r24,tcpDebugStream
 602 026e 9091 0000 		lds r25,tcpDebugStream+1
 603 0272 21FF      		sbrs r18,1
 604 0274 00C0      		rjmp .L20
 112:../../freeRtos/Lib/net/tcp.c ****       if (tcpDebugStream != NULL)
 606               	.LM44:
 607 0276 0097      		sbiw r24,0
 608 0278 01F0      		breq .L21
 113:../../freeRtos/Lib/net/tcp.c ****         if (tcpDebugLevel > 2)
 610               	.LM45:
 611 027a 2091 0000 		lds r18,tcpDebugLevel
 612 027e 2330      		cpi r18,lo8(3)
 613 0280 00F0      		brlo .L21
 114:../../freeRtos/Lib/net/tcp.c ****           fprintf_P(tcpDebugStream, PSTR("Opening TCP connection socket state change LISTEN->SYN_RE
 615               	.LM46:
 616 0282 20E0      		ldi r18,lo8(__c.2624)
 617 0284 30E0      		ldi r19,hi8(__c.2624)
 618 0286 3F93      		push r19
 619 0288 2F93      		push r18
 620 028a 9F93      		push r25
 621 028c 8F93      		push r24
 622 028e 0E94 0000 		call fprintf_P
 623 0292 0F90      		pop __tmp_reg__
 624 0294 0F90      		pop __tmp_reg__
 625 0296 0F90      		pop __tmp_reg__
 626 0298 0F90      		pop __tmp_reg__
 627               	.L21:
 628               	.LBB16:
 629               	.LBB17:
  90:../../freeRtos/Lib/net/tcp.c ****   sck->state        = SYN_RECEIVED;
 631               	.LM47:
 632 029a 82E0      		ldi r24,lo8(2)
 633 029c 8883      		st Y,r24
  91:../../freeRtos/Lib/net/tcp.c ****   sck->remotePort   = nicState.layer4.tcp->srcport;
 635               	.LM48:
 636 029e 0091 0000 		lds r16,nicState+12
 637 02a2 1091 0000 		lds r17,nicState+12+1
 638 02a6 D801      		movw r26,r16
 639 02a8 2D91      		ld r18,X+
 640 02aa 3C91      		ld r19,X
 641 02ac 3887      		std Y+8,r19
 642 02ae 2F83      		std Y+7,r18
  92:../../freeRtos/Lib/net/tcp.c ****   sck->RemoteIpAddr = nicState.layer3.ip->srcipaddr;
 644               	.LM49:
 645 02b0 E091 0000 		lds r30,nicState+10
 646 02b4 F091 0000 		lds r31,nicState+10+1
 647 02b8 8485      		ldd r24,Z+12
 648 02ba 9585      		ldd r25,Z+13
 649 02bc A685      		ldd r26,Z+14
 650 02be B785      		ldd r27,Z+15
 651 02c0 8983      		std Y+1,r24
 652 02c2 9A83      		std Y+2,r25
 653 02c4 AB83      		std Y+3,r26
 654 02c6 BC83      		std Y+4,r27
 655               	.LBE17:
 656               	.LBE16:
 118:../../freeRtos/Lib/net/tcp.c ****       nicState.layer4.tcp->srcport   = socket->localPort;
 658               	.LM50:
 659 02c8 8D81      		ldd r24,Y+5
 660 02ca 9E81      		ldd r25,Y+6
 661 02cc F801      		movw r30,r16
 662 02ce 9183      		std Z+1,r25
 663 02d0 8083      		st Z,r24
 119:../../freeRtos/Lib/net/tcp.c ****       nicState.layer4.tcp->destport  = socket->remotePort;
 665               	.LM51:
 666 02d2 3383      		std Z+3,r19
 667 02d4 2283      		std Z+2,r18
 120:../../freeRtos/Lib/net/tcp.c ****       nicState.layer4.tcp->seqno     = htonl(socket->seqNoLastSent);
 669               	.LM52:
 670 02d6 6D85      		ldd r22,Y+13
 671 02d8 7E85      		ldd r23,Y+14
 672 02da 8F85      		ldd r24,Y+15
 673 02dc 9889      		ldd r25,Y+16
 674 02de 0E94 0000 		call htonl
 675 02e2 D801      		movw r26,r16
 676 02e4 1496      		adiw r26,4
 677 02e6 6D93      		st X+,r22
 678 02e8 7D93      		st X+,r23
 679 02ea 8D93      		st X+,r24
 680 02ec 9C93      		st X,r25
 681 02ee 1797      		sbiw r26,4+3
 121:../../freeRtos/Lib/net/tcp.c ****       nicState.layer4.tcp->ackno     = htonl(socket->seqNoLastReceived+1);
 683               	.LM53:
 684 02f0 0091 0000 		lds r16,nicState+12
 685 02f4 1091 0000 		lds r17,nicState+12+1
 686 02f8 6985      		ldd r22,Y+9
 687 02fa 7A85      		ldd r23,Y+10
 688 02fc 8B85      		ldd r24,Y+11
 689 02fe 9C85      		ldd r25,Y+12
 690 0300 6F5F      		subi r22,-1
 691 0302 7F4F      		sbci r23,-1
 692 0304 8F4F      		sbci r24,-1
 693 0306 9F4F      		sbci r25,-1
 694 0308 0E94 0000 		call htonl
 695 030c F801      		movw r30,r16
 696 030e 6087      		std Z+8,r22
 697 0310 7187      		std Z+9,r23
 698 0312 8287      		std Z+10,r24
 699 0314 9387      		std Z+11,r25
 122:../../freeRtos/Lib/net/tcp.c ****       nicState.layer4.tcp->tcpoffset = 5<<4;
 701               	.LM54:
 702 0316 0091 0000 		lds r16,nicState+12
 703 031a 1091 0000 		lds r17,nicState+12+1
 704 031e 80E5      		ldi r24,lo8(80)
 705 0320 D801      		movw r26,r16
 706 0322 1C96      		adiw r26,12
 707 0324 8C93      		st X,r24
 708 0326 1C97      		sbiw r26,12
 123:../../freeRtos/Lib/net/tcp.c ****       nicState.layer4.tcp->flags     = TCP_FLAGS_ACK+TCP_FLAGS_SYN;
 710               	.LM55:
 711 0328 82E1      		ldi r24,lo8(18)
 712 032a 1D96      		adiw r26,13
 713 032c 8C93      		st X,r24
 124:../../freeRtos/Lib/net/tcp.c ****       nicState.layer4.tcp->wnd       = htons(100);
 715               	.LM56:
 716 032e 84E6      		ldi r24,lo8(100)
 717 0330 90E0      		ldi r25,0
 718 0332 0E94 0000 		call htons
 719 0336 F801      		movw r30,r16
 720 0338 9787      		std Z+15,r25
 721 033a 8687      		std Z+14,r24
 125:../../freeRtos/Lib/net/tcp.c ****       nicState.layer4.tcp->tcpchksum = 0;
 723               	.LM57:
 724 033c E091 0000 		lds r30,nicState+12
 725 0340 F091 0000 		lds r31,nicState+12+1
 726 0344 118A      		std Z+17,__zero_reg__
 727 0346 108A      		std Z+16,__zero_reg__
 126:../../freeRtos/Lib/net/tcp.c ****       nicState.layer4.tcp->urgp      = 0;
 729               	.LM58:
 730 0348 138A      		std Z+19,__zero_reg__
 731 034a 128A      		std Z+18,__zero_reg__
 127:../../freeRtos/Lib/net/tcp.c ****       calculateTcpChecksun(TCP_HEADER_LEN);
 733               	.LM59:
 734 034c 84E1      		ldi r24,lo8(20)
 735 034e 90E0      		ldi r25,0
 736 0350 0E94 0000 		call calculateTcpChecksun
 129:../../freeRtos/Lib/net/tcp.c ****       socket->seqNoLastSent++;
 738               	.LM60:
 739 0354 8D85      		ldd r24,Y+13
 740 0356 9E85      		ldd r25,Y+14
 741 0358 AF85      		ldd r26,Y+15
 742 035a B889      		ldd r27,Y+16
 743 035c 0196      		adiw r24,1
 744 035e A11D      		adc r26,__zero_reg__
 745 0360 B11D      		adc r27,__zero_reg__
 746 0362 8D87      		std Y+13,r24
 747 0364 9E87      		std Y+14,r25
 748 0366 AF87      		std Y+15,r26
 749 0368 B88B      		std Y+16,r27
 130:../../freeRtos/Lib/net/tcp.c ****       ipSend(socket->RemoteIpAddr, IP_PROTO_TCP, TCP_HEADER_LEN);
 751               	.LM61:
 752 036a 6981      		ldd r22,Y+1
 753 036c 7A81      		ldd r23,Y+2
 754 036e 8B81      		ldd r24,Y+3
 755 0370 9C81      		ldd r25,Y+4
 756 0372 24E1      		ldi r18,lo8(20)
 757 0374 30E0      		ldi r19,0
 758 0376 46E0      		ldi r20,lo8(6)
 759 0378 0E94 0000 		call ipSend
 760 037c 00C0      		rjmp .L48
 761               	.L20:
 135:../../freeRtos/Lib/net/tcp.c ****       if (tcpDebugStream != NULL)
 763               	.LM62:
 764 037e 0097      		sbiw r24,0
 765 0380 01F4      		brne .+2
 766 0382 00C0      		rjmp .L48
 136:../../freeRtos/Lib/net/tcp.c ****         if (tcpDebugLevel > 1)
 768               	.LM63:
 769 0384 2091 0000 		lds r18,tcpDebugLevel
 770 0388 2230      		cpi r18,lo8(2)
 771 038a 00F4      		brsh .+2
 772 038c 00C0      		rjmp .L48
 137:../../freeRtos/Lib/net/tcp.c ****           fprintf_P(tcpDebugStream, PSTR("Opening TCP connection ERROR: syn flag wasn't set\r\n"));
 774               	.LM64:
 775 038e 20E0      		ldi r18,lo8(__c.2626)
 776 0390 30E0      		ldi r19,hi8(__c.2626)
 777 0392 00C0      		rjmp .L49
 778               	.L19:
 143:../../freeRtos/Lib/net/tcp.c ****   if (socket->state == SYN_RECEIVED)
 780               	.LM65:
 781 0394 8230      		cpi r24,lo8(2)
 782 0396 01F4      		brne .L24
 145:../../freeRtos/Lib/net/tcp.c ****     if (nicState.layer4.tcp->flags & TCP_FLAGS_ACK)
 784               	.LM66:
 785 0398 E091 0000 		lds r30,nicState+12
 786 039c F091 0000 		lds r31,nicState+12+1
 787 03a0 2585      		ldd r18,Z+13
 788 03a2 8091 0000 		lds r24,tcpDebugStream
 789 03a6 9091 0000 		lds r25,tcpDebugStream+1
 790 03aa 24FF      		sbrs r18,4
 791 03ac 00C0      		rjmp .L25
 147:../../freeRtos/Lib/net/tcp.c ****       socket->state    = ESTABILISHED;
 793               	.LM67:
 794 03ae 23E0      		ldi r18,lo8(3)
 795 03b0 2883      		st Y,r18
 149:../../freeRtos/Lib/net/tcp.c ****     if (tcpDebugStream != NULL)
 797               	.LM68:
 798 03b2 0097      		sbiw r24,0
 799 03b4 01F4      		brne .+2
 800 03b6 00C0      		rjmp .L48
 150:../../freeRtos/Lib/net/tcp.c ****       if (tcpDebugLevel > 2)
 802               	.LM69:
 803 03b8 2091 0000 		lds r18,tcpDebugLevel
 804 03bc 2330      		cpi r18,lo8(3)
 805 03be 00F4      		brsh .+2
 806 03c0 00C0      		rjmp .L48
 151:../../freeRtos/Lib/net/tcp.c ****         fprintf_P(tcpDebugStream, PSTR("Opening TCP connection socket state change SYN_RECEIVED->ES
 808               	.LM70:
 809 03c2 20E0      		ldi r18,lo8(__c.2628)
 810 03c4 30E0      		ldi r19,hi8(__c.2628)
 811 03c6 00C0      		rjmp .L49
 812               	.L25:
 157:../../freeRtos/Lib/net/tcp.c ****       socket->state = LISTEN;
 814               	.LM71:
 815 03c8 21E0      		ldi r18,lo8(1)
 816 03ca 2883      		st Y,r18
 159:../../freeRtos/Lib/net/tcp.c ****       if (tcpDebugStream != NULL)
 818               	.LM72:
 819 03cc 0097      		sbiw r24,0
 820 03ce 01F0      		breq .L48
 160:../../freeRtos/Lib/net/tcp.c ****         if (tcpDebugLevel > 1)
 822               	.LM73:
 823 03d0 2091 0000 		lds r18,tcpDebugLevel
 824 03d4 2230      		cpi r18,lo8(2)
 825 03d6 00F0      		brlo .L48
 161:../../freeRtos/Lib/net/tcp.c ****           fprintf_P(tcpDebugStream, PSTR("Opening TCP connection ERROR: ack flag wasn't set\r\n"));
 827               	.LM74:
 828 03d8 20E0      		ldi r18,lo8(__c.2630)
 829 03da 30E0      		ldi r19,hi8(__c.2630)
 830               	.L49:
 831 03dc 3F93      		push r19
 832 03de 2F93      		push r18
 833 03e0 9F93      		push r25
 834 03e2 8F93      		push r24
 835 03e4 0E94 0000 		call fprintf_P
 836 03e8 0F90      		pop __tmp_reg__
 837 03ea 0F90      		pop __tmp_reg__
 838 03ec 0F90      		pop __tmp_reg__
 839 03ee 0F90      		pop __tmp_reg__
 840 03f0 00C0      		rjmp .L48
 841               	.L24:
 168:../../freeRtos/Lib/net/tcp.c ****   if (socket->state == ESTABILISHED)
 843               	.LM75:
 844 03f2 8330      		cpi r24,lo8(3)
 845 03f4 01F4      		brne .L48
 170:../../freeRtos/Lib/net/tcp.c ****     if (nicState.layer4.tcp->flags & TCP_FLAGS_FIN)  //ESTABILISHED -> CLOSE_WAIT -> closed
 847               	.LM76:
 848 03f6 E091 0000 		lds r30,nicState+12
 849 03fa F091 0000 		lds r31,nicState+12+1
 850 03fe 8585      		ldd r24,Z+13
 851 0400 80FF      		sbrs r24,0
 852 0402 00C0      		rjmp .L48
 853               	.LBB18:
 172:../../freeRtos/Lib/net/tcp.c ****       socket->timer              = timer100Hz;
 855               	.LM77:
 856 0404 8091 0000 		lds r24,timer100Hz
 857 0408 8D8B      		std Y+21,r24
 173:../../freeRtos/Lib/net/tcp.c ****       nicState.layer4.tcp->flags = TCP_FLAGS_ACK;
 859               	.LM78:
 860 040a 80E1      		ldi r24,lo8(16)
 861 040c 8587      		std Z+13,r24
 182:../../freeRtos/Lib/net/tcp.c ****       ipSend(socket->RemoteIpAddr, IP_PROTO_TCP, TCP_HEADER_LEN + dataFromBufLen);
 863               	.LM79:
 864 040e 6981      		ldd r22,Y+1
 865 0410 7A81      		ldd r23,Y+2
 866 0412 8B81      		ldd r24,Y+3
 867 0414 9C81      		ldd r25,Y+4
 868 0416 24E1      		ldi r18,lo8(20)
 869 0418 30E0      		ldi r19,0
 870 041a 46E0      		ldi r20,lo8(6)
 871 041c 0E94 0000 		call ipSend
 183:../../freeRtos/Lib/net/tcp.c ****       socket->state    = CLOSE_WAIT;
 873               	.LM80:
 874 0420 84E0      		ldi r24,lo8(4)
 875 0422 8883      		st Y,r24
 186:../../freeRtos/Lib/net/tcp.c ****       nicState.layer4.tcp->flags = TCP_FLAGS_FIN;
 877               	.LM81:
 878 0424 E091 0000 		lds r30,nicState+12
 879 0428 F091 0000 		lds r31,nicState+12+1
 880 042c 81E0      		ldi r24,lo8(1)
 881 042e 8587      		std Z+13,r24
 187:../../freeRtos/Lib/net/tcp.c ****       ipSend(socket->RemoteIpAddr, IP_PROTO_TCP, TCP_HEADER_LEN);
 883               	.LM82:
 884 0430 6981      		ldd r22,Y+1
 885 0432 7A81      		ldd r23,Y+2
 886 0434 8B81      		ldd r24,Y+3
 887 0436 9C81      		ldd r25,Y+4
 888 0438 24E1      		ldi r18,lo8(20)
 889 043a 30E0      		ldi r19,0
 890 043c 46E0      		ldi r20,lo8(6)
 891 043e 0E94 0000 		call ipSend
 188:../../freeRtos/Lib/net/tcp.c ****       socket->state    = LAST_ACK;
 893               	.LM83:
 894 0442 85E0      		ldi r24,lo8(5)
 895 0444 8883      		st Y,r24
 896               	.L48:
 897               	.LBE18:
 190:../../freeRtos/Lib/net/tcp.c ****     return 0;
 899               	.LM84:
 900 0446 80E0      		ldi r24,0
 901 0448 00C0      		rjmp .L47
 902               	.L17:
 100:../../freeRtos/Lib/net/tcp.c ****     return 1;
 904               	.LM85:
 905 044a 81E0      		ldi r24,lo8(1)
 906               	.L47:
 907               	/* epilogue start */
 196:../../freeRtos/Lib/net/tcp.c **** }
 909               	.LM86:
 910 044c DF91      		pop r29
 911 044e CF91      		pop r28
 912 0450 1F91      		pop r17
 913 0452 0F91      		pop r16
 914 0454 FF90      		pop r15
 915 0456 EF90      		pop r14
 916 0458 DF90      		pop r13
 917 045a BF90      		pop r11
 918 045c AF90      		pop r10
 919 045e 9F90      		pop r9
 920 0460 8F90      		pop r8
 921 0462 0895      		ret
 926               	.Lscope3:
 928               		.stabd	78,0,0
 931               	.global	sendTcBuffer
 933               	sendTcBuffer:
 934               		.stabd	46,0,0
 203:../../freeRtos/Lib/net/tcp.c **** 
 204:../../freeRtos/Lib/net/tcp.c **** 
 205:../../freeRtos/Lib/net/tcp.c **** 
 206:../../freeRtos/Lib/net/tcp.c **** uint8_t sendTcBuffer(uint8_t socketNo)
 207:../../freeRtos/Lib/net/tcp.c **** {
 936               	.LM87:
 937               	.LFBB4:
 938               	/* prologue: function */
 939               	/* frame size = 0 */
 940               	/* stack size = 0 */
 941               	.L__stack_usage = 0
 208:../../freeRtos/Lib/net/tcp.c ****   struct TcpIpSocket *sck = &sockets[socketNo];
 209:../../freeRtos/Lib/net/tcp.c ****   return 0;
 210:../../freeRtos/Lib/net/tcp.c **** }
 943               	.LM88:
 944 0464 80E0      		ldi r24,0
 945 0466 0895      		ret
 947               	.Lscope4:
 949               		.stabd	78,0,0
 951               	.global	netstackTCPIPProcess
 953               	netstackTCPIPProcess:
 954               		.stabd	46,0,0
 211:../../freeRtos/Lib/net/tcp.c **** 
 212:../../freeRtos/Lib/net/tcp.c **** void netstackTCPIPProcess(void)
 213:../../freeRtos/Lib/net/tcp.c **** {
 956               	.LM89:
 957               	.LFBB5:
 958 0468 CF93      		push r28
 959 046a DF93      		push r29
 960               	/* prologue: function */
 961               	/* frame size = 0 */
 962               	/* stack size = 2 */
 963               	.L__stack_usage = 2
 214:../../freeRtos/Lib/net/tcp.c ****   if (nicState.layer4.tcp->destport == htons(80))
 965               	.LM90:
 966 046c E091 0000 		lds r30,nicState+12
 967 0470 F091 0000 		lds r31,nicState+12+1
 968 0474 C281      		ldd r28,Z+2
 969 0476 D381      		ldd r29,Z+3
 970 0478 80E5      		ldi r24,lo8(80)
 971 047a 90E0      		ldi r25,0
 972 047c 0E94 0000 		call htons
 973 0480 C817      		cp r28,r24
 974 0482 D907      		cpc r29,r25
 975 0484 01F4      		brne .L52
 215:../../freeRtos/Lib/net/tcp.c ****   {
 216:../../freeRtos/Lib/net/tcp.c **** #if TCP_DEBUG
 217:../../freeRtos/Lib/net/tcp.c ****     if (tcpDebugStream != NULL)
 977               	.LM91:
 978 0486 8091 0000 		lds r24,tcpDebugStream
 979 048a 9091 0000 		lds r25,tcpDebugStream+1
 980 048e 0097      		sbiw r24,0
 981 0490 01F0      		breq .L51
 218:../../freeRtos/Lib/net/tcp.c ****       fprintf_P(tcpDebugStream, PSTR("HTTP not implemented\r\n"));
 983               	.LM92:
 984 0492 20E0      		ldi r18,lo8(__c.2644)
 985 0494 30E0      		ldi r19,hi8(__c.2644)
 986 0496 3F93      		push r19
 987 0498 2F93      		push r18
 988 049a 9F93      		push r25
 989 049c 8F93      		push r24
 990 049e 0E94 0000 		call fprintf_P
 991 04a2 0F90      		pop __tmp_reg__
 992 04a4 0F90      		pop __tmp_reg__
 993 04a6 0F90      		pop __tmp_reg__
 994 04a8 0F90      		pop __tmp_reg__
 995 04aa 00C0      		rjmp .L51
 996               	.L52:
 997               	/* epilogue start */
 219:../../freeRtos/Lib/net/tcp.c **** #endif
 220:../../freeRtos/Lib/net/tcp.c ****     ;
 221:../../freeRtos/Lib/net/tcp.c ****   }
 222:../../freeRtos/Lib/net/tcp.c ****   else
 223:../../freeRtos/Lib/net/tcp.c ****   {
 224:../../freeRtos/Lib/net/tcp.c ****     processTcpPacket();
 225:../../freeRtos/Lib/net/tcp.c ****   }
 226:../../freeRtos/Lib/net/tcp.c **** }
 999               	.LM93:
 1000 04ac DF91      		pop r29
 1001 04ae CF91      		pop r28
 224:../../freeRtos/Lib/net/tcp.c ****     processTcpPacket();
 1003               	.LM94:
 1004 04b0 0C94 0000 		jmp processTcpPacket
 1005               	.L51:
 1006               	/* epilogue start */
 1008               	.LM95:
 1009 04b4 DF91      		pop r29
 1010 04b6 CF91      		pop r28
 1011 04b8 0895      		ret
 1013               	.Lscope5:
 1015               		.stabd	78,0,0
 1019               	.global	setTcpDebug
 1021               	setTcpDebug:
 1022               		.stabd	46,0,0
 227:../../freeRtos/Lib/net/tcp.c **** 
 228:../../freeRtos/Lib/net/tcp.c **** #if TCP_DEBUG
 229:../../freeRtos/Lib/net/tcp.c **** void setTcpDebug(FILE *stream, uint8_t level)
 230:../../freeRtos/Lib/net/tcp.c **** {
 1024               	.LM96:
 1025               	.LFBB6:
 1026               	/* prologue: function */
 1027               	/* frame size = 0 */
 1028               	/* stack size = 0 */
 1029               	.L__stack_usage = 0
 231:../../freeRtos/Lib/net/tcp.c ****   tcpDebugStream = stream;
 1031               	.LM97:
 1032 04ba 9093 0000 		sts tcpDebugStream+1,r25
 1033 04be 8093 0000 		sts tcpDebugStream,r24
 232:../../freeRtos/Lib/net/tcp.c ****   tcpDebugLevel = level;
 1035               	.LM98:
 1036 04c2 6093 0000 		sts tcpDebugLevel,r22
 1037 04c6 0895      		ret
 1039               	.Lscope6:
 1041               		.stabd	78,0,0
 1043               	.global	flushTcpQueues
 1045               	flushTcpQueues:
 1046               		.stabd	46,0,0
 233:../../freeRtos/Lib/net/tcp.c **** }
 234:../../freeRtos/Lib/net/tcp.c **** #endif /* TCP_DEBUG */
 235:../../freeRtos/Lib/net/tcp.c **** 
 236:../../freeRtos/Lib/net/tcp.c **** void flushTcpQueues()
 237:../../freeRtos/Lib/net/tcp.c **** {
 1048               	.LM99:
 1049               	.LFBB7:
 1050               	/* prologue: function */
 1051               	/* frame size = 0 */
 1052               	/* stack size = 0 */
 1053               	.L__stack_usage = 0
 1054 04c8 0895      		ret
 1056               	.Lscope7:
 1058               		.stabd	78,0,0
 1060               	.global	httpProcess
 1062               	httpProcess:
 1063               		.stabd	46,0,0
 238:../../freeRtos/Lib/net/tcp.c ****   uint8_t sckNo = 0;
 239:../../freeRtos/Lib/net/tcp.c ****   struct TcpIpSocket *sck = sockets;
 240:../../freeRtos/Lib/net/tcp.c ****   for (sckNo = 0; sckNo < NUMBER_OF_SOCKETS; sckNo++)
 241:../../freeRtos/Lib/net/tcp.c ****   {
 242:../../freeRtos/Lib/net/tcp.c ****     
 243:../../freeRtos/Lib/net/tcp.c ****     sck++;
 244:../../freeRtos/Lib/net/tcp.c ****   }
 245:../../freeRtos/Lib/net/tcp.c **** }
 246:../../freeRtos/Lib/net/tcp.c **** 
 247:../../freeRtos/Lib/net/tcp.c **** 
 248:../../freeRtos/Lib/net/tcp.c **** inline void httpProcess()
 249:../../freeRtos/Lib/net/tcp.c **** {
 1065               	.LM100:
 1066               	.LFBB8:
 1067               	/* prologue: function */
 1068               	/* frame size = 0 */
 1069               	/* stack size = 0 */
 1070               	.L__stack_usage = 0
 1071 04ca 0895      		ret
 1073               	.Lscope8:
 1075               		.stabd	78,0,0
 1076               		.section	.progmem.data,"a",@progbits
 1079               	__c.2644:
 1080 0000 4854 5450 		.string	"HTTP not implemented\r\n"
 1080      206E 6F74 
 1080      2069 6D70 
 1080      6C65 6D65 
 1080      6E74 6564 
 1083               	__c.2615:
 1084 0017 4361 6E27 		.string	"Can't find TCP socket with localPort %d\r\n"
 1084      7420 6669 
 1084      6E64 2054 
 1084      4350 2073 
 1084      6F63 6B65 
 1087               	__c.2610:
 1088 0041 466F 756E 		.string	"Found TCP socket no %d state LISTEN\r\n"
 1088      6420 5443 
 1088      5020 736F 
 1088      636B 6574 
 1088      206E 6F20 
 1091               	__c.2605:
 1092 0067 466F 756E 		.string	"Found TCP socket state %d\r\n"
 1092      6420 5443 
 1092      5020 736F 
 1092      636B 6574 
 1092      2073 7461 
 1095               	__c.2630:
 1096 0083 4F70 656E 		.string	"Opening TCP connection ERROR: ack flag wasn't set\r\n"
 1096      696E 6720 
 1096      5443 5020 
 1096      636F 6E6E 
 1096      6563 7469 
 1099               	__c.2628:
 1100 00b7 4F70 656E 		.string	"Opening TCP connection socket state change SYN_RECEIVED->ESTABILISHED\r\n"
 1100      696E 6720 
 1100      5443 5020 
 1100      636F 6E6E 
 1100      6563 7469 
 1103               	__c.2626:
 1104 00ff 4F70 656E 		.string	"Opening TCP connection ERROR: syn flag wasn't set\r\n"
 1104      696E 6720 
 1104      5443 5020 
 1104      636F 6E6E 
 1104      6563 7469 
 1107               	__c.2624:
 1108 0133 4F70 656E 		.string	"Opening TCP connection socket state change LISTEN->SYN_RECEIVED\r\n"
 1108      696E 6720 
 1108      5443 5020 
 1108      636F 6E6E 
 1108      6563 7469 
 1109               		.comm	sockets,2,1
 1110               		.comm	tcpDebugLevel,1,1
 1111               		.comm	tcpDebugStream,2,1
 1112               		.comm	IpMyConfig,15,1
 1113               		.comm	udpDbgLevel,1,1
 1114               		.comm	udpDbgStream,2,1
 1115               		.comm	udpSocket,2,1
 1116               		.comm	icmpDebugLevel,1,1
 1117               		.comm	icmpDebug,2,1
 1118               		.comm	arpDebugLevel,1,1
 1119               		.comm	arpDebug,2,1
 1120               		.comm	plen,2,1
 1121               		.comm	nicState,14,1
 1122               		.comm	wwwport,1,1
 1137               		.text
 1139               	.Letext0:
 1140               		.ident	"GCC: (GNU) 4.8.2"
 1141               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:0000000000000000 tcp.c
     /tmp/ccpqHTuB.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccpqHTuB.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccpqHTuB.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccpqHTuB.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccpqHTuB.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccpqHTuB.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccpqHTuB.s:186    .text:0000000000000000 socketInit
                            *COM*:0000000000000002 sockets
     /tmp/ccpqHTuB.s:309    .text:0000000000000098 calculateTcpChecksun
                            *COM*:000000000000000e nicState
     /tmp/ccpqHTuB.s:346    .text:00000000000000ba processTcpPacket
                            *COM*:0000000000000002 tcpDebugStream
                            *COM*:0000000000000001 tcpDebugLevel
     /tmp/ccpqHTuB.s:1091   .progmem.data:0000000000000067 __c.2605
     /tmp/ccpqHTuB.s:1087   .progmem.data:0000000000000041 __c.2610
     /tmp/ccpqHTuB.s:1083   .progmem.data:0000000000000017 __c.2615
     /tmp/ccpqHTuB.s:1107   .progmem.data:0000000000000133 __c.2624
     /tmp/ccpqHTuB.s:1103   .progmem.data:00000000000000ff __c.2626
     /tmp/ccpqHTuB.s:1099   .progmem.data:00000000000000b7 __c.2628
     /tmp/ccpqHTuB.s:1095   .progmem.data:0000000000000083 __c.2630
     /tmp/ccpqHTuB.s:933    .text:0000000000000464 sendTcBuffer
     /tmp/ccpqHTuB.s:953    .text:0000000000000468 netstackTCPIPProcess
     /tmp/ccpqHTuB.s:1079   .progmem.data:0000000000000000 __c.2644
     /tmp/ccpqHTuB.s:1021   .text:00000000000004ba setTcpDebug
     /tmp/ccpqHTuB.s:1045   .text:00000000000004c8 flushTcpQueues
     /tmp/ccpqHTuB.s:1062   .text:00000000000004ca httpProcess
                            *COM*:000000000000000f IpMyConfig
                            *COM*:0000000000000001 udpDbgLevel
                            *COM*:0000000000000002 udpDbgStream
                            *COM*:0000000000000002 udpSocket
                            *COM*:0000000000000001 icmpDebugLevel
                            *COM*:0000000000000002 icmpDebug
                            *COM*:0000000000000001 arpDebugLevel
                            *COM*:0000000000000002 arpDebug
                            *COM*:0000000000000002 plen
                            *COM*:0000000000000001 wwwport

UNDEFINED SYMBOLS
xmalloc
htons
netChecksum
fprintf_P
htonl
ipSend
timer100Hz
__do_clear_bss
