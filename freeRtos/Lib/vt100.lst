   1               		.file	"vt100.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__ = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
  10               		.text
  11               	.Ltext0:
 560               		.data
 561               	.LC0:
 562 0000 1B63 00   		.string	"\033c"
 563               		.text
 566               	.global	vt100Init
 568               	vt100Init:
 569               		.stabd	46,0,0
   1:../../freeRtos/Lib/vt100.c **** /*! \file vt100.c \brief VT100 terminal function library. */
   2:../../freeRtos/Lib/vt100.c **** //*****************************************************************************
   3:../../freeRtos/Lib/vt100.c **** //
   4:../../freeRtos/Lib/vt100.c **** // File Name	: 'vt100.c'
   5:../../freeRtos/Lib/vt100.c **** // Title		: VT100 terminal function library
   6:../../freeRtos/Lib/vt100.c **** // Author		: Pascal Stang - Copyright (C) 2002
   7:../../freeRtos/Lib/vt100.c **** // Created		: 2002.08.27
   8:../../freeRtos/Lib/vt100.c **** // Revised		: 2002.08.27
   9:../../freeRtos/Lib/vt100.c **** // Version		: 0.1
  10:../../freeRtos/Lib/vt100.c **** // Target MCU	: Atmel AVR Series
  11:../../freeRtos/Lib/vt100.c **** // Editor Tabs	: 4
  12:../../freeRtos/Lib/vt100.c **** //
  13:../../freeRtos/Lib/vt100.c **** // NOTE: This code is currently below version 1.0, and therefore is considered
  14:../../freeRtos/Lib/vt100.c **** // to be lacking in some functionality or documentation, or may not be fully
  15:../../freeRtos/Lib/vt100.c **** // tested.  Nonetheless, you can expect most functions to work.
  16:../../freeRtos/Lib/vt100.c **** //
  17:../../freeRtos/Lib/vt100.c **** // This code is distributed under the GNU Public License
  18:../../freeRtos/Lib/vt100.c **** //		which can be found at http://www.gnu.org/licenses/gpl.txt
  19:../../freeRtos/Lib/vt100.c **** //
  20:../../freeRtos/Lib/vt100.c **** //*****************************************************************************
  21:../../freeRtos/Lib/vt100.c **** 
  22:../../freeRtos/Lib/vt100.c **** #ifndef WIN32
  23:../../freeRtos/Lib/vt100.c **** 	#include <avr/io.h>
  24:../../freeRtos/Lib/vt100.c **** 	#include <avr/interrupt.h>
  25:../../freeRtos/Lib/vt100.c **** 	#include <avr/pgmspace.h>
  26:../../freeRtos/Lib/vt100.c **** #endif
  27:../../freeRtos/Lib/vt100.c **** 
  28:../../freeRtos/Lib/vt100.c **** #include "main.h"
  29:../../freeRtos/Lib/vt100.c **** #include "vt100.h"
  30:../../freeRtos/Lib/vt100.c **** #include <stdio.h>
  31:../../freeRtos/Lib/vt100.c **** 
  32:../../freeRtos/Lib/vt100.c **** // Program ROM constants
  33:../../freeRtos/Lib/vt100.c **** 
  34:../../freeRtos/Lib/vt100.c **** // Global variables
  35:../../freeRtos/Lib/vt100.c **** 
  36:../../freeRtos/Lib/vt100.c **** // Functions
  37:../../freeRtos/Lib/vt100.c **** void vt100Init(cmdState_t *state)
  38:../../freeRtos/Lib/vt100.c **** {
 571               	.LM0:
 572               	.LFBB1:
 573               	/* prologue: function */
 574               	/* frame size = 0 */
 575               	/* stack size = 0 */
 576               	.L__stack_usage = 0
  39:../../freeRtos/Lib/vt100.c ****   // initializes terminal to "power-on" settings
  40:../../freeRtos/Lib/vt100.c ****   // ESC c
  41:../../freeRtos/Lib/vt100.c **** 
  42:../../freeRtos/Lib/vt100.c ****  fprintf_P(state->myStdInOut, "\x1B\x63");
 578               	.LM1:
 579 0000 00D0      		rcall .
 580 0002 0F92      		push __tmp_reg__
 581 0004 FC01      		movw r30,r24
 582 0006 828D      		ldd r24,Z+26
 583 0008 938D      		ldd r25,Z+27
 584 000a EDB7      		in r30,__SP_L__
 585 000c FEB7      		in r31,__SP_H__
 586 000e 8183      		std Z+1,r24
 587 0010 9283      		std Z+2,r25
 588 0012 80E0      		ldi r24,lo8(.LC0)
 589 0014 90E0      		ldi r25,hi8(.LC0)
 590 0016 8383      		std Z+3,r24
 591 0018 9483      		std Z+4,r25
 592 001a 0E94 0000 		call fprintf_P
 593 001e 0F90      		pop __tmp_reg__
 594 0020 0F90      		pop __tmp_reg__
 595 0022 0F90      		pop __tmp_reg__
 596 0024 0F90      		pop __tmp_reg__
 597               	/* epilogue start */
  43:../../freeRtos/Lib/vt100.c **** }
 599               	.LM2:
 600 0026 0895      		ret
 602               	.Lscope1:
 604               		.stabd	78,0,0
 605               		.data
 606               	.LC1:
 607 0003 1B5B 324A 		.string	"\033[2J"
 607      00
 608               		.text
 611               	.global	vt100ClearScreen
 613               	vt100ClearScreen:
 614               		.stabd	46,0,0
  44:../../freeRtos/Lib/vt100.c **** 
  45:../../freeRtos/Lib/vt100.c **** void vt100ClearScreen(cmdState_t *state)
  46:../../freeRtos/Lib/vt100.c **** {
 616               	.LM3:
 617               	.LFBB2:
 618               	/* prologue: function */
 619               	/* frame size = 0 */
 620               	/* stack size = 0 */
 621               	.L__stack_usage = 0
  47:../../freeRtos/Lib/vt100.c ****   // ESC [ 2 J
  48:../../freeRtos/Lib/vt100.c ****   fprintf_P(state->myStdInOut, "\x1B[2J");
 623               	.LM4:
 624 0028 00D0      		rcall .
 625 002a 0F92      		push __tmp_reg__
 626 002c FC01      		movw r30,r24
 627 002e 828D      		ldd r24,Z+26
 628 0030 938D      		ldd r25,Z+27
 629 0032 EDB7      		in r30,__SP_L__
 630 0034 FEB7      		in r31,__SP_H__
 631 0036 8183      		std Z+1,r24
 632 0038 9283      		std Z+2,r25
 633 003a 80E0      		ldi r24,lo8(.LC1)
 634 003c 90E0      		ldi r25,hi8(.LC1)
 635 003e 8383      		std Z+3,r24
 636 0040 9483      		std Z+4,r25
 637 0042 0E94 0000 		call fprintf_P
 638 0046 0F90      		pop __tmp_reg__
 639 0048 0F90      		pop __tmp_reg__
 640 004a 0F90      		pop __tmp_reg__
 641 004c 0F90      		pop __tmp_reg__
 642               	/* epilogue start */
  49:../../freeRtos/Lib/vt100.c **** }
 644               	.LM5:
 645 004e 0895      		ret
 647               	.Lscope2:
 649               		.stabd	78,0,0
 650               		.data
 651               	.LC2:
 652 0008 1B5B 2564 		.string	"\033[%dm"
 652      6D00 
 653               		.text
 657               	.global	vt100SetAttr
 659               	vt100SetAttr:
 660               		.stabd	46,0,0
  50:../../freeRtos/Lib/vt100.c **** 
  51:../../freeRtos/Lib/vt100.c **** void vt100SetAttr(uint8_t attr, cmdState_t *state)
  52:../../freeRtos/Lib/vt100.c **** {
 662               	.LM6:
 663               	.LFBB3:
 664               	/* prologue: function */
 665               	/* frame size = 0 */
 666               	/* stack size = 0 */
 667               	.L__stack_usage = 0
  53:../../freeRtos/Lib/vt100.c ****   // ESC [ Ps m
  54:../../freeRtos/Lib/vt100.c ****   fprintf_P(state->myStdInOut, "\x1B[%dm",attr);
 669               	.LM7:
 670 0050 00D0      		rcall .
 671 0052 00D0      		rcall .
 672 0054 EDB7      		in r30,__SP_L__
 673 0056 FEB7      		in r31,__SP_H__
 674 0058 3196      		adiw r30,1
 675 005a DB01      		movw r26,r22
 676 005c 5A96      		adiw r26,26
 677 005e 2D91      		ld r18,X+
 678 0060 3C91      		ld r19,X
 679 0062 5B97      		sbiw r26,26+1
 680 0064 ADB7      		in r26,__SP_L__
 681 0066 BEB7      		in r27,__SP_H__
 682 0068 1196      		adiw r26,1
 683 006a 2D93      		st X+,r18
 684 006c 3C93      		st X,r19
 685 006e 1297      		sbiw r26,1+1
 686 0070 20E0      		ldi r18,lo8(.LC2)
 687 0072 30E0      		ldi r19,hi8(.LC2)
 688 0074 2283      		std Z+2,r18
 689 0076 3383      		std Z+3,r19
 690 0078 8483      		std Z+4,r24
 691 007a 1582      		std Z+5,__zero_reg__
 692 007c 0E94 0000 		call fprintf_P
 693 0080 8DB7      		in r24,__SP_L__
 694 0082 9EB7      		in r25,__SP_H__
 695 0084 0696      		adiw r24,6
 696 0086 8DBF      		out __SP_L__,r24
 697 0088 9EBF      		out __SP_H__,r25
 698               	/* epilogue start */
  55:../../freeRtos/Lib/vt100.c **** }
 700               	.LM8:
 701 008a 0895      		ret
 703               	.Lscope3:
 705               		.stabd	78,0,0
 706               		.data
 707               	.LC3:
 708 000e 1B5B 3F32 		.string	"\033[?25h"
 708      3568 00
 709               	.LC4:
 710 0015 1B5B 3F32 		.string	"\033[?25l"
 710      356C 00
 711               		.text
 715               	.global	vt100SetCursorMode
 717               	vt100SetCursorMode:
 718               		.stabd	46,0,0
  56:../../freeRtos/Lib/vt100.c **** 
  57:../../freeRtos/Lib/vt100.c **** void vt100SetCursorMode(uint8_t visible, cmdState_t *state)
  58:../../freeRtos/Lib/vt100.c **** {
 720               	.LM9:
 721               	.LFBB4:
 722               	/* prologue: function */
 723               	/* frame size = 0 */
 724               	/* stack size = 0 */
 725               	.L__stack_usage = 0
 726 008c FB01      		movw r30,r22
 727 008e 228D      		ldd r18,Z+26
 728 0090 338D      		ldd r19,Z+27
  59:../../freeRtos/Lib/vt100.c ****   if(visible)
 730               	.LM10:
 731 0092 8823      		tst r24
 732 0094 01F0      		breq .L5
  60:../../freeRtos/Lib/vt100.c ****   // ESC [ ? 25 h
  61:../../freeRtos/Lib/vt100.c ****     fprintf_P(state->myStdInOut, "\x1B[?25h");
 734               	.LM11:
 735 0096 00D0      		rcall .
 736 0098 0F92      		push __tmp_reg__
 737 009a EDB7      		in r30,__SP_L__
 738 009c FEB7      		in r31,__SP_H__
 739 009e 2183      		std Z+1,r18
 740 00a0 3283      		std Z+2,r19
 741 00a2 80E0      		ldi r24,lo8(.LC3)
 742 00a4 90E0      		ldi r25,hi8(.LC3)
 743 00a6 00C0      		rjmp .L7
 744               	.L5:
  62:../../freeRtos/Lib/vt100.c ****   else
  63:../../freeRtos/Lib/vt100.c ****   // ESC [ ? 25 l
  64:../../freeRtos/Lib/vt100.c ****     fprintf_P(state->myStdInOut, "\x1B[?25l");
 746               	.LM12:
 747 00a8 00D0      		rcall .
 748 00aa 0F92      		push __tmp_reg__
 749 00ac EDB7      		in r30,__SP_L__
 750 00ae FEB7      		in r31,__SP_H__
 751 00b0 2183      		std Z+1,r18
 752 00b2 3283      		std Z+2,r19
 753 00b4 80E0      		ldi r24,lo8(.LC4)
 754 00b6 90E0      		ldi r25,hi8(.LC4)
 755               	.L7:
 756 00b8 8383      		std Z+3,r24
 757 00ba 9483      		std Z+4,r25
 758 00bc 0E94 0000 		call fprintf_P
 759 00c0 0F90      		pop __tmp_reg__
 760 00c2 0F90      		pop __tmp_reg__
 761 00c4 0F90      		pop __tmp_reg__
 762 00c6 0F90      		pop __tmp_reg__
 763 00c8 0895      		ret
 765               	.Lscope4:
 767               		.stabd	78,0,0
 768               		.data
 769               	.LC5:
 770 001c 1B5B 2564 		.string	"\033[%d;%dH"
 770      3B25 6448 
 770      00
 771               		.text
 776               	.global	vt100SetCursorPos
 778               	vt100SetCursorPos:
 779               		.stabd	46,0,0
  65:../../freeRtos/Lib/vt100.c **** }
  66:../../freeRtos/Lib/vt100.c **** 
  67:../../freeRtos/Lib/vt100.c **** void vt100SetCursorPos(uint8_t line, uint8_t col, cmdState_t *state)
  68:../../freeRtos/Lib/vt100.c **** {
 781               	.LM13:
 782               	.LFBB5:
 783               	/* prologue: function */
 784               	/* frame size = 0 */
 785               	/* stack size = 0 */
 786               	.L__stack_usage = 0
  69:../../freeRtos/Lib/vt100.c ****   // ESC [ Pl ; Pc H
  70:../../freeRtos/Lib/vt100.c ****   fprintf_P(state->myStdInOut, "\x1B[%d;%dH",line,col);
 788               	.LM14:
 789 00ca 2DB7      		in r18,__SP_L__
 790 00cc 3EB7      		in r19,__SP_H__
 791 00ce 2850      		subi r18,lo8(-(-8))
 792 00d0 3040      		sbci r19,hi8(-(-8))
 793 00d2 2DBF      		out __SP_L__,r18
 794 00d4 3EBF      		out __SP_H__,r19
 795 00d6 EDB7      		in r30,__SP_L__
 796 00d8 FEB7      		in r31,__SP_H__
 797 00da 3196      		adiw r30,1
 798 00dc DA01      		movw r26,r20
 799 00de 5A96      		adiw r26,26
 800 00e0 2D91      		ld r18,X+
 801 00e2 3C91      		ld r19,X
 802 00e4 5B97      		sbiw r26,26+1
 803 00e6 ADB7      		in r26,__SP_L__
 804 00e8 BEB7      		in r27,__SP_H__
 805 00ea 1196      		adiw r26,1
 806 00ec 2D93      		st X+,r18
 807 00ee 3C93      		st X,r19
 808 00f0 1297      		sbiw r26,1+1
 809 00f2 20E0      		ldi r18,lo8(.LC5)
 810 00f4 30E0      		ldi r19,hi8(.LC5)
 811 00f6 2283      		std Z+2,r18
 812 00f8 3383      		std Z+3,r19
 813 00fa 8483      		std Z+4,r24
 814 00fc 1582      		std Z+5,__zero_reg__
 815 00fe 6683      		std Z+6,r22
 816 0100 1782      		std Z+7,__zero_reg__
 817 0102 0E94 0000 		call fprintf_P
 818 0106 2DB7      		in r18,__SP_L__
 819 0108 3EB7      		in r19,__SP_H__
 820 010a 285F      		subi r18,lo8(-(8))
 821 010c 3F4F      		sbci r19,hi8(-(8))
 822 010e 2DBF      		out __SP_L__,r18
 823 0110 3EBF      		out __SP_H__,r19
 824               	/* epilogue start */
  71:../../freeRtos/Lib/vt100.c **** }
 826               	.LM15:
 827 0112 0895      		ret
 829               	.Lscope5:
 831               		.stabd	78,0,0
 832               		.comm klastry,128,1
 833               		.comm wwwport,1,1
 834               		.comm rollers,2,1
 835               		.comm xSemaphoreSpiSS,2,1
 836               		.comm portA,1,1
 837               		.comm portB,1,1
 838               		.comm lockSensors,2,1
 839               		.comm xSemaphoreRs485,2,1
 840               		.comm nicState,14,1
 841               		.comm plen,2,1
 842               		.comm IpMyConfig,15,1
 843               		.comm arpDebug,2,1
 844               		.comm arpDebugLevel,1,1
 845               		.comm icmpDebug,2,1
 846               		.comm icmpDebugLevel,1,1
 847               		.comm udpSocket,2,1
 848               		.comm udpDbgStream,2,1
 849               		.comm udpDbgLevel,1,1
 850               		.comm tcpDebugStream,2,1
 851               		.comm tcpDebugLevel,1,1
 852               		.comm sockets,2,1
 853               		.comm czasRtc,7,1
 877               	.Letext0:
 878               	.global __do_copy_data
 879               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:00000000 vt100.c
     /tmp/cczPcBLs.s:2      *ABS*:0000003f __SREG__
     /tmp/cczPcBLs.s:3      *ABS*:0000003e __SP_H__
     /tmp/cczPcBLs.s:4      *ABS*:0000003d __SP_L__
     /tmp/cczPcBLs.s:5      *ABS*:00000034 __CCP__
     /tmp/cczPcBLs.s:6      *ABS*:00000000 __tmp_reg__
     /tmp/cczPcBLs.s:7      *ABS*:00000001 __zero_reg__
     /tmp/cczPcBLs.s:568    .text:00000000 vt100Init
     /tmp/cczPcBLs.s:613    .text:00000028 vt100ClearScreen
     /tmp/cczPcBLs.s:659    .text:00000050 vt100SetAttr
     /tmp/cczPcBLs.s:717    .text:0000008c vt100SetCursorMode
     /tmp/cczPcBLs.s:778    .text:000000ca vt100SetCursorPos
                            *COM*:00000080 klastry
                            *COM*:00000001 wwwport
                            *COM*:00000002 rollers
                            *COM*:00000002 xSemaphoreSpiSS
                            *COM*:00000001 portA
                            *COM*:00000001 portB
                            *COM*:00000002 lockSensors
                            *COM*:00000002 xSemaphoreRs485
                            *COM*:0000000e nicState
                            *COM*:00000002 plen
                            *COM*:0000000f IpMyConfig
                            *COM*:00000002 arpDebug
                            *COM*:00000001 arpDebugLevel
                            *COM*:00000002 icmpDebug
                            *COM*:00000001 icmpDebugLevel
                            *COM*:00000002 udpSocket
                            *COM*:00000002 udpDbgStream
                            *COM*:00000001 udpDbgLevel
                            *COM*:00000002 tcpDebugStream
                            *COM*:00000001 tcpDebugLevel
                            *COM*:00000002 sockets
                            *COM*:00000007 czasRtc

UNDEFINED SYMBOLS
fprintf_P
__do_copy_data
__do_clear_bss
