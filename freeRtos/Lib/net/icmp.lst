   1               		.file	"icmp.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__ = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
  10               		.text
  11               	.Ltext0:
 477               	.global	icmpInit
 479               	icmpInit:
 480               		.stabd	46,0,0
   1:../../freeRtos/Lib/net/icmp.c **** /*! \file icmp.c \brief ICMP Protocol Library. */
   2:../../freeRtos/Lib/net/icmp.c **** //*****************************************************************************
   3:../../freeRtos/Lib/net/icmp.c **** //
   4:../../freeRtos/Lib/net/icmp.c **** // File Name	: 'icmp.c'
   5:../../freeRtos/Lib/net/icmp.c **** // Title		: ICMP (Internet Control Message Protocol) Protocol Library
   6:../../freeRtos/Lib/net/icmp.c **** // Author		: Pascal Stang
   7:../../freeRtos/Lib/net/icmp.c **** // Created		: 9/10/2004
   8:../../freeRtos/Lib/net/icmp.c **** // Revised		: 7/3/2005
   9:../../freeRtos/Lib/net/icmp.c **** // Version		: 0.1
  10:../../freeRtos/Lib/net/icmp.c **** // Target MCU	: Atmel AVR series
  11:../../freeRtos/Lib/net/icmp.c **** // Editor Tabs	: 4
  12:../../freeRtos/Lib/net/icmp.c **** //
  13:../../freeRtos/Lib/net/icmp.c **** //*****************************************************************************
  14:../../freeRtos/Lib/net/icmp.c **** 
  15:../../freeRtos/Lib/net/icmp.c **** 
  16:../../freeRtos/Lib/net/icmp.c **** #include "icmp.h"
  17:../../freeRtos/Lib/net/icmp.c **** 
  18:../../freeRtos/Lib/net/icmp.c **** 
  19:../../freeRtos/Lib/net/icmp.c **** //extern void nicSend(unsigned int len, unsigned char* packet);
  20:../../freeRtos/Lib/net/icmp.c **** 
  21:../../freeRtos/Lib/net/icmp.c **** // global variables
  22:../../freeRtos/Lib/net/icmp.c **** 
  23:../../freeRtos/Lib/net/icmp.c **** 
  24:../../freeRtos/Lib/net/icmp.c **** // functions
  25:../../freeRtos/Lib/net/icmp.c **** void icmpInit(void)
  26:../../freeRtos/Lib/net/icmp.c **** {
 482               	.LM0:
 483               	.LFBB1:
 484               	/* prologue: function */
 485               	/* frame size = 0 */
 486               	/* stack size = 0 */
 487               	.L__stack_usage = 0
  27:../../freeRtos/Lib/net/icmp.c ****   icmpDebug = NULL;
 489               	.LM1:
 490 0000 1092 0000 		sts icmpDebug,__zero_reg__
 491 0004 1092 0000 		sts icmpDebug+1,__zero_reg__
  28:../../freeRtos/Lib/net/icmp.c ****   icmpDebugLevel = 0;
 493               	.LM2:
 494 0008 1092 0000 		sts icmpDebugLevel,__zero_reg__
 495               	/* epilogue start */
  29:../../freeRtos/Lib/net/icmp.c **** }
 497               	.LM3:
 498 000c 0895      		ret
 500               	.Lscope1:
 502               		.stabd	78,0,0
 506               	.global	setIcmpDebug
 508               	setIcmpDebug:
 509               		.stabd	46,0,0
  30:../../freeRtos/Lib/net/icmp.c **** 
  31:../../freeRtos/Lib/net/icmp.c **** void icmpIpIn(void)
  32:../../freeRtos/Lib/net/icmp.c **** {
  33:../../freeRtos/Lib/net/icmp.c ****   // check ICMP type
  34:../../freeRtos/Lib/net/icmp.c ****   switch(nicState.layer4.icmp->type)
  35:../../freeRtos/Lib/net/icmp.c ****   {
  36:../../freeRtos/Lib/net/icmp.c ****     case ICMP_TYPE_ECHOREQUEST:
  37:../../freeRtos/Lib/net/icmp.c ****       icmpEchoRequest();       // echo request
  38:../../freeRtos/Lib/net/icmp.c ****       break;
  39:../../freeRtos/Lib/net/icmp.c ****     default:
  40:../../freeRtos/Lib/net/icmp.c **** #if ICMP_DEBUG
  41:../../freeRtos/Lib/net/icmp.c ****       if (icmpDebug != NULL)
  42:../../freeRtos/Lib/net/icmp.c ****       {
  43:../../freeRtos/Lib/net/icmp.c ****         if (icmpDebugLevel > 0)
  44:../../freeRtos/Lib/net/icmp.c ****           fprintf_P(icmpDebug, PSTR("Unknown ICMP typeReceived ICMP request: "));
  45:../../freeRtos/Lib/net/icmp.c ****       }
  46:../../freeRtos/Lib/net/icmp.c **** #endif      
  47:../../freeRtos/Lib/net/icmp.c ****       break;
  48:../../freeRtos/Lib/net/icmp.c ****   }
  49:../../freeRtos/Lib/net/icmp.c **** }
  50:../../freeRtos/Lib/net/icmp.c **** 
  51:../../freeRtos/Lib/net/icmp.c **** void icmpEchoRequest(void)
  52:../../freeRtos/Lib/net/icmp.c **** {
  53:../../freeRtos/Lib/net/icmp.c **** #if ICMP_DEBUG
  54:../../freeRtos/Lib/net/icmp.c ****   if (icmpDebug != NULL)
  55:../../freeRtos/Lib/net/icmp.c ****   {
  56:../../freeRtos/Lib/net/icmp.c ****     if (icmpDebugLevel > 1)
  57:../../freeRtos/Lib/net/icmp.c ****       fprintf_P(icmpDebug, PSTR("Received ICMP request: "));
  58:../../freeRtos/Lib/net/icmp.c ****   }
  59:../../freeRtos/Lib/net/icmp.c **** #endif
  60:../../freeRtos/Lib/net/icmp.c ****   uint32_t tempIp;
  61:../../freeRtos/Lib/net/icmp.c **** 
  62:../../freeRtos/Lib/net/icmp.c ****   // change type to reply
  63:../../freeRtos/Lib/net/icmp.c ****   nicState.layer4.icmp->type = ICMP_TYPE_ECHOREPLY;
  64:../../freeRtos/Lib/net/icmp.c ****   // recalculate checksum
  65:../../freeRtos/Lib/net/icmp.c ****   nicState.layer4.icmp->icmpchksum = 0;
  66:../../freeRtos/Lib/net/icmp.c ****   nicState.layer4.icmp->icmpchksum = netChecksum((uint8_t*)(nicState.layer4.icmp), htons(nicState.l
  67:../../freeRtos/Lib/net/icmp.c ****   // return to sender
  68:../../freeRtos/Lib/net/icmp.c ****   tempIp = nicState.layer3.ip->destipaddr;
  69:../../freeRtos/Lib/net/icmp.c ****   nicState.layer3.ip->destipaddr = nicState.layer3.ip->srcipaddr;
  70:../../freeRtos/Lib/net/icmp.c ****   nicState.layer3.ip->srcipaddr = tempIp;
  71:../../freeRtos/Lib/net/icmp.c ****   // add ethernet routing
  72:../../freeRtos/Lib/net/icmp.c ****   arpIpOut(0);
  73:../../freeRtos/Lib/net/icmp.c **** 
  74:../../freeRtos/Lib/net/icmp.c ****   // debugging
  75:../../freeRtos/Lib/net/icmp.c ****   if (icmpDebug != NULL)
  76:../../freeRtos/Lib/net/icmp.c ****     icmpPrintHeader(icmpDebug, nicState.layer3.ip, nicState.layer4.icmp);
  77:../../freeRtos/Lib/net/icmp.c ****   //debugPrintHexTable(htons(packet->ip.len), (uint8_t*)packet);
  78:../../freeRtos/Lib/net/icmp.c **** 
  79:../../freeRtos/Lib/net/icmp.c ****   // send it (packet->ip.len+ETH_HEADER_LEN
  80:../../freeRtos/Lib/net/icmp.c ****   nicSend(htons(nicState.layer3.ip->len) + ETH_HEADER_LEN);
  81:../../freeRtos/Lib/net/icmp.c **** #if ICMP_DEBUG
  82:../../freeRtos/Lib/net/icmp.c ****   if (icmpDebug != NULL)
  83:../../freeRtos/Lib/net/icmp.c ****   {
  84:../../freeRtos/Lib/net/icmp.c ****     if (icmpDebugLevel > 1)
  85:../../freeRtos/Lib/net/icmp.c ****       fprintf_P(icmpDebug, PSTR("Sending ICMP PONG\r\n"));
  86:../../freeRtos/Lib/net/icmp.c ****   }
  87:../../freeRtos/Lib/net/icmp.c **** #endif
  88:../../freeRtos/Lib/net/icmp.c **** }
  89:../../freeRtos/Lib/net/icmp.c **** 
  90:../../freeRtos/Lib/net/icmp.c **** #if ICMP_DEBUG
  91:../../freeRtos/Lib/net/icmp.c **** void setIcmpDebug(FILE *stream, uint8_t level)
  92:../../freeRtos/Lib/net/icmp.c **** {
 511               	.LM4:
 512               	.LFBB2:
 513               	/* prologue: function */
 514               	/* frame size = 0 */
 515               	/* stack size = 0 */
 516               	.L__stack_usage = 0
  93:../../freeRtos/Lib/net/icmp.c ****   icmpDebug = stream;
 518               	.LM5:
 519 000e 8093 0000 		sts icmpDebug,r24
 520 0012 9093 0000 		sts icmpDebug+1,r25
  94:../../freeRtos/Lib/net/icmp.c ****   icmpDebugLevel = level;
 522               	.LM6:
 523 0016 6093 0000 		sts icmpDebugLevel,r22
 524               	/* epilogue start */
  95:../../freeRtos/Lib/net/icmp.c **** }
 526               	.LM7:
 527 001a 0895      		ret
 529               	.Lscope2:
 531               		.stabd	78,0,0
 532               		.data
 533               	.LC0:
 534 0000 554E 4B4E 		.string	"UNKNOWN"
 534      4F57 4E00 
 535               		.text
 540               	.global	icmpPrintHeader
 542               	icmpPrintHeader:
 543               		.stabd	46,0,0
  96:../../freeRtos/Lib/net/icmp.c **** #endif
  97:../../freeRtos/Lib/net/icmp.c **** 
  98:../../freeRtos/Lib/net/icmp.c **** void icmpPrintHeader(FILE *stream, struct netIpHeader *ipPacket, struct netIcmpHeader *icmpPacket)
  99:../../freeRtos/Lib/net/icmp.c **** {
 545               	.LM8:
 546               	.LFBB3:
 547 001c EF92      		push r14
 548 001e FF92      		push r15
 549 0020 0F93      		push r16
 550 0022 1F93      		push r17
 551 0024 CF93      		push r28
 552 0026 DF93      		push r29
 553               	/* prologue: function */
 554               	/* frame size = 0 */
 555               	/* stack size = 6 */
 556               	.L__stack_usage = 6
 557 0028 EC01      		movw r28,r24
 558 002a 8B01      		movw r16,r22
 559 002c 7A01      		movw r14,r20
 100:../../freeRtos/Lib/net/icmp.c ****   fprintf_P(stream, PSTR("ICMP Packet:\r\n"));
 561               	.LM9:
 562 002e 00D0      		rcall .
 563 0030 0F92      		push __tmp_reg__
 564 0032 ADB7      		in r26,__SP_L__
 565 0034 BEB7      		in r27,__SP_H__
 566 0036 1196      		adiw r26,1
 567 0038 8D93      		st X+,r24
 568 003a 9C93      		st X,r25
 569 003c 1297      		sbiw r26,1+1
 570 003e 80E0      		ldi r24,lo8(__c.4240)
 571 0040 90E0      		ldi r25,hi8(__c.4240)
 572 0042 1396      		adiw r26,3
 573 0044 8D93      		st X+,r24
 574 0046 9C93      		st X,r25
 575 0048 1497      		sbiw r26,3+1
 576 004a 0E94 0000 		call fprintf_P
 101:../../freeRtos/Lib/net/icmp.c **** // print source IP address
 102:../../freeRtos/Lib/net/icmp.c ****   fprintf_P(stream, PSTR("SrcIpAddr: "));  netPrintIPAddr(stream, ipPacket->srcipaddr);  fprintf_P(
 578               	.LM10:
 579 004e EDB7      		in r30,__SP_L__
 580 0050 FEB7      		in r31,__SP_H__
 581 0052 C183      		std Z+1,r28
 582 0054 D283      		std Z+2,r29
 583 0056 80E0      		ldi r24,lo8(__c.4242)
 584 0058 90E0      		ldi r25,hi8(__c.4242)
 585 005a 8383      		std Z+3,r24
 586 005c 9483      		std Z+4,r25
 587 005e 0E94 0000 		call fprintf_P
 588 0062 0F90      		pop __tmp_reg__
 589 0064 0F90      		pop __tmp_reg__
 590 0066 0F90      		pop __tmp_reg__
 591 0068 0F90      		pop __tmp_reg__
 592 006a D801      		movw r26,r16
 593 006c 1C96      		adiw r26,12
 594 006e 4D91      		ld r20,X+
 595 0070 5D91      		ld r21,X+
 596 0072 6D91      		ld r22,X+
 597 0074 7C91      		ld r23,X
 598 0076 1F97      		sbiw r26,12+3
 599 0078 CE01      		movw r24,r28
 600 007a 0E94 0000 		call netPrintIPAddr
 601 007e 00D0      		rcall .
 602 0080 0F92      		push __tmp_reg__
 603 0082 EDB7      		in r30,__SP_L__
 604 0084 FEB7      		in r31,__SP_H__
 605 0086 C183      		std Z+1,r28
 606 0088 D283      		std Z+2,r29
 607 008a 80E0      		ldi r24,lo8(__c.4244)
 608 008c 90E0      		ldi r25,hi8(__c.4244)
 609 008e 8383      		std Z+3,r24
 610 0090 9483      		std Z+4,r25
 611 0092 0E94 0000 		call fprintf_P
 103:../../freeRtos/Lib/net/icmp.c **** // print dest IP address
 104:../../freeRtos/Lib/net/icmp.c ****   fprintf_P(stream, PSTR("DstIpAddr: "));  netPrintIPAddr(stream, ipPacket->destipaddr); fprintf_P(
 613               	.LM11:
 614 0096 ADB7      		in r26,__SP_L__
 615 0098 BEB7      		in r27,__SP_H__
 616 009a 1196      		adiw r26,1
 617 009c CD93      		st X+,r28
 618 009e DC93      		st X,r29
 619 00a0 1297      		sbiw r26,1+1
 620 00a2 80E0      		ldi r24,lo8(__c.4246)
 621 00a4 90E0      		ldi r25,hi8(__c.4246)
 622 00a6 1396      		adiw r26,3
 623 00a8 8D93      		st X+,r24
 624 00aa 9C93      		st X,r25
 625 00ac 1497      		sbiw r26,3+1
 626 00ae 0E94 0000 		call fprintf_P
 627 00b2 0F90      		pop __tmp_reg__
 628 00b4 0F90      		pop __tmp_reg__
 629 00b6 0F90      		pop __tmp_reg__
 630 00b8 0F90      		pop __tmp_reg__
 631 00ba F801      		movw r30,r16
 632 00bc 4089      		ldd r20,Z+16
 633 00be 5189      		ldd r21,Z+17
 634 00c0 6289      		ldd r22,Z+18
 635 00c2 7389      		ldd r23,Z+19
 636 00c4 CE01      		movw r24,r28
 637 00c6 0E94 0000 		call netPrintIPAddr
 638 00ca 00D0      		rcall .
 639 00cc 0F92      		push __tmp_reg__
 640 00ce ADB7      		in r26,__SP_L__
 641 00d0 BEB7      		in r27,__SP_H__
 642 00d2 1196      		adiw r26,1
 643 00d4 CD93      		st X+,r28
 644 00d6 DC93      		st X,r29
 645 00d8 1297      		sbiw r26,1+1
 646 00da 80E0      		ldi r24,lo8(__c.4248)
 647 00dc 90E0      		ldi r25,hi8(__c.4248)
 648 00de 1396      		adiw r26,3
 649 00e0 8D93      		st X+,r24
 650 00e2 9C93      		st X,r25
 651 00e4 1497      		sbiw r26,3+1
 652 00e6 0E94 0000 		call fprintf_P
 105:../../freeRtos/Lib/net/icmp.c **** // print type
 106:../../freeRtos/Lib/net/icmp.c ****   fprintf_P(stream, PSTR("Type   : "));
 654               	.LM12:
 655 00ea EDB7      		in r30,__SP_L__
 656 00ec FEB7      		in r31,__SP_H__
 657 00ee C183      		std Z+1,r28
 658 00f0 D283      		std Z+2,r29
 659 00f2 80E0      		ldi r24,lo8(__c.4250)
 660 00f4 90E0      		ldi r25,hi8(__c.4250)
 661 00f6 8383      		std Z+3,r24
 662 00f8 9483      		std Z+4,r25
 663 00fa 0E94 0000 		call fprintf_P
 107:../../freeRtos/Lib/net/icmp.c ****   switch(icmpPacket->type)
 665               	.LM13:
 666 00fe 0F90      		pop __tmp_reg__
 667 0100 0F90      		pop __tmp_reg__
 668 0102 0F90      		pop __tmp_reg__
 669 0104 0F90      		pop __tmp_reg__
 670 0106 D701      		movw r26,r14
 671 0108 8C91      		ld r24,X
 672 010a 8823      		tst r24
 673 010c 01F0      		breq .L5
 674 010e 8830      		cpi r24,lo8(8)
 675 0110 01F4      		brne .L8
 108:../../freeRtos/Lib/net/icmp.c ****   {
 109:../../freeRtos/Lib/net/icmp.c ****     case ICMP_TYPE_ECHOREQUEST:
 110:../../freeRtos/Lib/net/icmp.c ****       fprintf_P(stream, PSTR("ECHO REQUEST"));
 677               	.LM14:
 678 0112 00D0      		rcall .
 679 0114 0F92      		push __tmp_reg__
 680 0116 EDB7      		in r30,__SP_L__
 681 0118 FEB7      		in r31,__SP_H__
 682 011a C183      		std Z+1,r28
 683 011c D283      		std Z+2,r29
 684 011e 80E0      		ldi r24,lo8(__c.4253)
 685 0120 90E0      		ldi r25,hi8(__c.4253)
 686 0122 00C0      		rjmp .L9
 687               	.L5:
 111:../../freeRtos/Lib/net/icmp.c ****       break;
 112:../../freeRtos/Lib/net/icmp.c ****     case ICMP_TYPE_ECHOREPLY:
 113:../../freeRtos/Lib/net/icmp.c ****       fprintf_P(stream, PSTR("ECHO REPLY"));
 689               	.LM15:
 690 0124 00D0      		rcall .
 691 0126 0F92      		push __tmp_reg__
 692 0128 ADB7      		in r26,__SP_L__
 693 012a BEB7      		in r27,__SP_H__
 694 012c 1196      		adiw r26,1
 695 012e CD93      		st X+,r28
 696 0130 DC93      		st X,r29
 697 0132 1297      		sbiw r26,1+1
 698 0134 80E0      		ldi r24,lo8(__c.4257)
 699 0136 90E0      		ldi r25,hi8(__c.4257)
 700 0138 1396      		adiw r26,3
 701 013a 8D93      		st X+,r24
 702 013c 9C93      		st X,r25
 703 013e 1497      		sbiw r26,3+1
 704 0140 00C0      		rjmp .L10
 705               	.L8:
 114:../../freeRtos/Lib/net/icmp.c ****       break;
 115:../../freeRtos/Lib/net/icmp.c ****     default:
 116:../../freeRtos/Lib/net/icmp.c ****       fprintf_P(stream, ("UNKNOWN"));
 707               	.LM16:
 708 0142 00D0      		rcall .
 709 0144 0F92      		push __tmp_reg__
 710 0146 EDB7      		in r30,__SP_L__
 711 0148 FEB7      		in r31,__SP_H__
 712 014a C183      		std Z+1,r28
 713 014c D283      		std Z+2,r29
 714 014e 80E0      		ldi r24,lo8(.LC0)
 715 0150 90E0      		ldi r25,hi8(.LC0)
 716               	.L9:
 717 0152 8383      		std Z+3,r24
 718 0154 9483      		std Z+4,r25
 719               	.L10:
 720 0156 0E94 0000 		call fprintf_P
 117:../../freeRtos/Lib/net/icmp.c ****       break;
 118:../../freeRtos/Lib/net/icmp.c ****   }
 119:../../freeRtos/Lib/net/icmp.c ****   fprintf_P(stream, PSTR("\r\n"));
 722               	.LM17:
 723 015a ADB7      		in r26,__SP_L__
 724 015c BEB7      		in r27,__SP_H__
 725 015e 1196      		adiw r26,1
 726 0160 CD93      		st X+,r28
 727 0162 DC93      		st X,r29
 728 0164 1297      		sbiw r26,1+1
 729 0166 80E0      		ldi r24,lo8(__c.4260)
 730 0168 90E0      		ldi r25,hi8(__c.4260)
 731 016a 1396      		adiw r26,3
 732 016c 8D93      		st X+,r24
 733 016e 9C93      		st X,r25
 734 0170 1497      		sbiw r26,3+1
 735 0172 0E94 0000 		call fprintf_P
 120:../../freeRtos/Lib/net/icmp.c **** // print code
 121:../../freeRtos/Lib/net/icmp.c ****   fprintf_P(stream, PSTR("Code   : 0x%x\r\n"), icmpPacket->icode);
 737               	.LM18:
 738 0176 0F92      		push __tmp_reg__
 739 0178 0F92      		push __tmp_reg__
 740 017a EDB7      		in r30,__SP_L__
 741 017c FEB7      		in r31,__SP_H__
 742 017e 3196      		adiw r30,1
 743 0180 ADB7      		in r26,__SP_L__
 744 0182 BEB7      		in r27,__SP_H__
 745 0184 1196      		adiw r26,1
 746 0186 CD93      		st X+,r28
 747 0188 DC93      		st X,r29
 748 018a 1297      		sbiw r26,1+1
 749 018c 80E0      		ldi r24,lo8(__c.4262)
 750 018e 90E0      		ldi r25,hi8(__c.4262)
 751 0190 8283      		std Z+2,r24
 752 0192 9383      		std Z+3,r25
 753 0194 D701      		movw r26,r14
 754 0196 1196      		adiw r26,1
 755 0198 8C91      		ld r24,X
 756 019a 8483      		std Z+4,r24
 757 019c 1582      		std Z+5,__zero_reg__
 758 019e 0E94 0000 		call fprintf_P
 759 01a2 EDB7      		in r30,__SP_L__
 760 01a4 FEB7      		in r31,__SP_H__
 761 01a6 3696      		adiw r30,6
 762 01a8 EDBF      		out __SP_L__,r30
 763 01aa FEBF      		out __SP_H__,r31
 764               	/* epilogue start */
 122:../../freeRtos/Lib/net/icmp.c **** }
 766               	.LM19:
 767 01ac DF91      		pop r29
 768 01ae CF91      		pop r28
 769 01b0 1F91      		pop r17
 770 01b2 0F91      		pop r16
 771 01b4 FF90      		pop r15
 772 01b6 EF90      		pop r14
 773 01b8 0895      		ret
 775               	.Lscope3:
 777               		.stabd	78,0,0
 779               	.global	icmpEchoRequest
 781               	icmpEchoRequest:
 782               		.stabd	46,0,0
  52:../../freeRtos/Lib/net/icmp.c **** {
 784               	.LM20:
 785               	.LFBB4:
 786 01ba CF93      		push r28
 787 01bc DF93      		push r29
 788               	/* prologue: function */
 789               	/* frame size = 0 */
 790               	/* stack size = 2 */
 791               	.L__stack_usage = 2
  54:../../freeRtos/Lib/net/icmp.c ****   if (icmpDebug != NULL)
 793               	.LM21:
 794 01be 8091 0000 		lds r24,icmpDebug
 795 01c2 9091 0000 		lds r25,icmpDebug+1
 796 01c6 0097      		sbiw r24,0
 797 01c8 01F0      		breq .L12
  56:../../freeRtos/Lib/net/icmp.c ****     if (icmpDebugLevel > 1)
 799               	.LM22:
 800 01ca 2091 0000 		lds r18,icmpDebugLevel
 801 01ce 2230      		cpi r18,lo8(2)
 802 01d0 00F0      		brlo .L12
  57:../../freeRtos/Lib/net/icmp.c ****       fprintf_P(icmpDebug, PSTR("Received ICMP request: "));
 804               	.LM23:
 805 01d2 00D0      		rcall .
 806 01d4 0F92      		push __tmp_reg__
 807 01d6 EDB7      		in r30,__SP_L__
 808 01d8 FEB7      		in r31,__SP_H__
 809 01da 8183      		std Z+1,r24
 810 01dc 9283      		std Z+2,r25
 811 01de 80E0      		ldi r24,lo8(__c.4226)
 812 01e0 90E0      		ldi r25,hi8(__c.4226)
 813 01e2 8383      		std Z+3,r24
 814 01e4 9483      		std Z+4,r25
 815 01e6 0E94 0000 		call fprintf_P
 816 01ea 0F90      		pop __tmp_reg__
 817 01ec 0F90      		pop __tmp_reg__
 818 01ee 0F90      		pop __tmp_reg__
 819 01f0 0F90      		pop __tmp_reg__
 820               	.L12:
  63:../../freeRtos/Lib/net/icmp.c ****   nicState.layer4.icmp->type = ICMP_TYPE_ECHOREPLY;
 822               	.LM24:
 823 01f2 E091 0000 		lds r30,nicState+12
 824 01f6 F091 0000 		lds r31,nicState+12+1
 825 01fa 1082      		st Z,__zero_reg__
  65:../../freeRtos/Lib/net/icmp.c ****   nicState.layer4.icmp->icmpchksum = 0;
 827               	.LM25:
 828 01fc E091 0000 		lds r30,nicState+12
 829 0200 F091 0000 		lds r31,nicState+12+1
 830 0204 1282      		std Z+2,__zero_reg__
 831 0206 1382      		std Z+3,__zero_reg__
  66:../../freeRtos/Lib/net/icmp.c ****   nicState.layer4.icmp->icmpchksum = netChecksum((uint8_t*)(nicState.layer4.icmp), htons(nicState.l
 833               	.LM26:
 834 0208 C091 0000 		lds r28,nicState+12
 835 020c D091 0000 		lds r29,nicState+12+1
 836 0210 E091 0000 		lds r30,nicState+10
 837 0214 F091 0000 		lds r31,nicState+10+1
 838 0218 8281      		ldd r24,Z+2
 839 021a 9381      		ldd r25,Z+3
 840 021c 0E94 0000 		call htons
 841 0220 BC01      		movw r22,r24
 842 0222 6451      		subi r22,lo8(-(-20))
 843 0224 7040      		sbci r23,hi8(-(-20))
 844 0226 CE01      		movw r24,r28
 845 0228 0E94 0000 		call netChecksum
 846 022c 8A83      		std Y+2,r24
 847 022e 9B83      		std Y+3,r25
  68:../../freeRtos/Lib/net/icmp.c ****   tempIp = nicState.layer3.ip->destipaddr;
 849               	.LM27:
 850 0230 E091 0000 		lds r30,nicState+10
 851 0234 F091 0000 		lds r31,nicState+10+1
 852 0238 8089      		ldd r24,Z+16
 853 023a 9189      		ldd r25,Z+17
 854 023c A289      		ldd r26,Z+18
 855 023e B389      		ldd r27,Z+19
  69:../../freeRtos/Lib/net/icmp.c ****   nicState.layer3.ip->destipaddr = nicState.layer3.ip->srcipaddr;
 857               	.LM28:
 858 0240 2485      		ldd r18,Z+12
 859 0242 3585      		ldd r19,Z+13
 860 0244 4685      		ldd r20,Z+14
 861 0246 5785      		ldd r21,Z+15
 862 0248 208B      		std Z+16,r18
 863 024a 318B      		std Z+17,r19
 864 024c 428B      		std Z+18,r20
 865 024e 538B      		std Z+19,r21
  70:../../freeRtos/Lib/net/icmp.c ****   nicState.layer3.ip->srcipaddr = tempIp;
 867               	.LM29:
 868 0250 8487      		std Z+12,r24
 869 0252 9587      		std Z+13,r25
 870 0254 A687      		std Z+14,r26
 871 0256 B787      		std Z+15,r27
  72:../../freeRtos/Lib/net/icmp.c ****   arpIpOut(0);
 873               	.LM30:
 874 0258 60E0      		ldi r22,lo8(0)
 875 025a 70E0      		ldi r23,hi8(0)
 876 025c CB01      		movw r24,r22
 877 025e 0E94 0000 		call arpIpOut
  75:../../freeRtos/Lib/net/icmp.c ****   if (icmpDebug != NULL)
 879               	.LM31:
 880 0262 8091 0000 		lds r24,icmpDebug
 881 0266 9091 0000 		lds r25,icmpDebug+1
 882 026a 0097      		sbiw r24,0
 883 026c 01F0      		breq .L13
  76:../../freeRtos/Lib/net/icmp.c ****     icmpPrintHeader(icmpDebug, nicState.layer3.ip, nicState.layer4.icmp);
 885               	.LM32:
 886 026e 6091 0000 		lds r22,nicState+10
 887 0272 7091 0000 		lds r23,nicState+10+1
 888 0276 4091 0000 		lds r20,nicState+12
 889 027a 5091 0000 		lds r21,nicState+12+1
 890 027e 0E94 0000 		call icmpPrintHeader
 891               	.L13:
  80:../../freeRtos/Lib/net/icmp.c ****   nicSend(htons(nicState.layer3.ip->len) + ETH_HEADER_LEN);
 893               	.LM33:
 894 0282 E091 0000 		lds r30,nicState+10
 895 0286 F091 0000 		lds r31,nicState+10+1
 896 028a 8281      		ldd r24,Z+2
 897 028c 9381      		ldd r25,Z+3
 898 028e 0E94 0000 		call htons
 899 0292 0E96      		adiw r24,14
 900 0294 0E94 0000 		call nicSend
  82:../../freeRtos/Lib/net/icmp.c ****   if (icmpDebug != NULL)
 902               	.LM34:
 903 0298 8091 0000 		lds r24,icmpDebug
 904 029c 9091 0000 		lds r25,icmpDebug+1
 905 02a0 0097      		sbiw r24,0
 906 02a2 01F0      		breq .L11
  84:../../freeRtos/Lib/net/icmp.c ****     if (icmpDebugLevel > 1)
 908               	.LM35:
 909 02a4 2091 0000 		lds r18,icmpDebugLevel
 910 02a8 2230      		cpi r18,lo8(2)
 911 02aa 00F0      		brlo .L11
  85:../../freeRtos/Lib/net/icmp.c ****       fprintf_P(icmpDebug, PSTR("Sending ICMP PONG\r\n"));
 913               	.LM36:
 914 02ac 00D0      		rcall .
 915 02ae 0F92      		push __tmp_reg__
 916 02b0 EDB7      		in r30,__SP_L__
 917 02b2 FEB7      		in r31,__SP_H__
 918 02b4 8183      		std Z+1,r24
 919 02b6 9283      		std Z+2,r25
 920 02b8 80E0      		ldi r24,lo8(__c.4229)
 921 02ba 90E0      		ldi r25,hi8(__c.4229)
 922 02bc 8383      		std Z+3,r24
 923 02be 9483      		std Z+4,r25
 924 02c0 0E94 0000 		call fprintf_P
 925 02c4 0F90      		pop __tmp_reg__
 926 02c6 0F90      		pop __tmp_reg__
 927 02c8 0F90      		pop __tmp_reg__
 928 02ca 0F90      		pop __tmp_reg__
 929               	.L11:
 930               	/* epilogue start */
  88:../../freeRtos/Lib/net/icmp.c **** }
 932               	.LM37:
 933 02cc DF91      		pop r29
 934 02ce CF91      		pop r28
 935 02d0 0895      		ret
 940               	.Lscope4:
 942               		.stabd	78,0,0
 944               	.global	icmpIpIn
 946               	icmpIpIn:
 947               		.stabd	46,0,0
  32:../../freeRtos/Lib/net/icmp.c **** {
 949               	.LM38:
 950               	.LFBB5:
 951               	/* prologue: function */
 952               	/* frame size = 0 */
 953               	/* stack size = 0 */
 954               	.L__stack_usage = 0
  34:../../freeRtos/Lib/net/icmp.c ****   switch(nicState.layer4.icmp->type)
 956               	.LM39:
 957 02d2 E091 0000 		lds r30,nicState+12
 958 02d6 F091 0000 		lds r31,nicState+12+1
 959 02da 8081      		ld r24,Z
 960 02dc 8830      		cpi r24,lo8(8)
 961 02de 01F4      		brne .L19
  37:../../freeRtos/Lib/net/icmp.c ****       icmpEchoRequest();       // echo request
 963               	.LM40:
 964 02e0 0E94 0000 		call icmpEchoRequest
  38:../../freeRtos/Lib/net/icmp.c ****       break;
 966               	.LM41:
 967 02e4 0895      		ret
 968               	.L19:
  41:../../freeRtos/Lib/net/icmp.c ****       if (icmpDebug != NULL)
 970               	.LM42:
 971 02e6 8091 0000 		lds r24,icmpDebug
 972 02ea 9091 0000 		lds r25,icmpDebug+1
 973 02ee 0097      		sbiw r24,0
 974 02f0 01F0      		breq .L15
  43:../../freeRtos/Lib/net/icmp.c ****         if (icmpDebugLevel > 0)
 976               	.LM43:
 977 02f2 2091 0000 		lds r18,icmpDebugLevel
 978 02f6 2223      		tst r18
 979 02f8 01F0      		breq .L15
  44:../../freeRtos/Lib/net/icmp.c ****           fprintf_P(icmpDebug, PSTR("Unknown ICMP typeReceived ICMP request: "));
 981               	.LM44:
 982 02fa 00D0      		rcall .
 983 02fc 0F92      		push __tmp_reg__
 984 02fe EDB7      		in r30,__SP_L__
 985 0300 FEB7      		in r31,__SP_H__
 986 0302 8183      		std Z+1,r24
 987 0304 9283      		std Z+2,r25
 988 0306 80E0      		ldi r24,lo8(__c.4221)
 989 0308 90E0      		ldi r25,hi8(__c.4221)
 990 030a 8383      		std Z+3,r24
 991 030c 9483      		std Z+4,r25
 992 030e 0E94 0000 		call fprintf_P
 993 0312 0F90      		pop __tmp_reg__
 994 0314 0F90      		pop __tmp_reg__
 995 0316 0F90      		pop __tmp_reg__
 996 0318 0F90      		pop __tmp_reg__
 997               	.L15:
 998 031a 0895      		ret
 1000               	.Lscope5:
 1002               		.stabd	78,0,0
 1003               		.comm wwwport,1,1
 1004               		.comm nicState,14,1
 1005               		.comm plen,2,1
 1006               		.comm IpMyConfig,15,1
 1007               		.comm udpSocket,2,1
 1008               		.comm udpDbgStream,2,1
 1009               		.comm udpDbgLevel,1,1
 1010               		.comm tcpDebugStream,2,1
 1011               		.comm tcpDebugLevel,1,1
 1012               		.comm sockets,2,1
 1013               		.comm arpDebug,2,1
 1014               		.comm arpDebugLevel,1,1
 1015               		.comm icmpDebug,2,1
 1016               		.comm icmpDebugLevel,1,1
 1017               		.section	.progmem.data,"a",@progbits
 1020               	__c.4262:
 1021 0000 436F 6465 		.string	"Code   : 0x%x\r\n"
 1021      2020 203A 
 1021      2030 7825 
 1021      780D 0A00 
 1024               	__c.4260:
 1025 0010 0D0A 00   		.string	"\r\n"
 1028               	__c.4257:
 1029 0013 4543 484F 		.string	"ECHO REPLY"
 1029      2052 4550 
 1029      4C59 00
 1032               	__c.4253:
 1033 001e 4543 484F 		.string	"ECHO REQUEST"
 1033      2052 4551 
 1033      5545 5354 
 1033      00
 1036               	__c.4250:
 1037 002b 5479 7065 		.string	"Type   : "
 1037      2020 203A 
 1037      2000 
 1040               	__c.4248:
 1041 0035 0D0A 00   		.string	"\r\n"
 1044               	__c.4246:
 1045 0038 4473 7449 		.string	"DstIpAddr: "
 1045      7041 6464 
 1045      723A 2000 
 1048               	__c.4244:
 1049 0044 0D0A 00   		.string	"\r\n"
 1052               	__c.4242:
 1053 0047 5372 6349 		.string	"SrcIpAddr: "
 1053      7041 6464 
 1053      723A 2000 
 1056               	__c.4240:
 1057 0053 4943 4D50 		.string	"ICMP Packet:\r\n"
 1057      2050 6163 
 1057      6B65 743A 
 1057      0D0A 00
 1060               	__c.4229:
 1061 0062 5365 6E64 		.string	"Sending ICMP PONG\r\n"
 1061      696E 6720 
 1061      4943 4D50 
 1061      2050 4F4E 
 1061      470D 0A00 
 1064               	__c.4226:
 1065 0076 5265 6365 		.string	"Received ICMP request: "
 1065      6976 6564 
 1065      2049 434D 
 1065      5020 7265 
 1065      7175 6573 
 1068               	__c.4221:
 1069 008e 556E 6B6E 		.string	"Unknown ICMP typeReceived ICMP request: "
 1069      6F77 6E20 
 1069      4943 4D50 
 1069      2074 7970 
 1069      6552 6563 
 1084               		.weak	nicSend
 1085               		.text
 1087               	.Letext0:
 1088               	.global __do_copy_data
 1089               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:00000000 icmp.c
     /tmp/ccYWfYSX.s:2      *ABS*:0000003f __SREG__
     /tmp/ccYWfYSX.s:3      *ABS*:0000003e __SP_H__
     /tmp/ccYWfYSX.s:4      *ABS*:0000003d __SP_L__
     /tmp/ccYWfYSX.s:5      *ABS*:00000034 __CCP__
     /tmp/ccYWfYSX.s:6      *ABS*:00000000 __tmp_reg__
     /tmp/ccYWfYSX.s:7      *ABS*:00000001 __zero_reg__
     /tmp/ccYWfYSX.s:479    .text:00000000 icmpInit
                            *COM*:00000002 icmpDebug
                            *COM*:00000001 icmpDebugLevel
     /tmp/ccYWfYSX.s:508    .text:0000000e setIcmpDebug
     /tmp/ccYWfYSX.s:542    .text:0000001c icmpPrintHeader
     /tmp/ccYWfYSX.s:1056   .progmem.data:00000053 __c.4240
     /tmp/ccYWfYSX.s:1052   .progmem.data:00000047 __c.4242
     /tmp/ccYWfYSX.s:1048   .progmem.data:00000044 __c.4244
     /tmp/ccYWfYSX.s:1044   .progmem.data:00000038 __c.4246
     /tmp/ccYWfYSX.s:1040   .progmem.data:00000035 __c.4248
     /tmp/ccYWfYSX.s:1036   .progmem.data:0000002b __c.4250
     /tmp/ccYWfYSX.s:1032   .progmem.data:0000001e __c.4253
     /tmp/ccYWfYSX.s:1028   .progmem.data:00000013 __c.4257
     /tmp/ccYWfYSX.s:1024   .progmem.data:00000010 __c.4260
     /tmp/ccYWfYSX.s:1020   .progmem.data:00000000 __c.4262
     /tmp/ccYWfYSX.s:781    .text:000001ba icmpEchoRequest
     /tmp/ccYWfYSX.s:1064   .progmem.data:00000076 __c.4226
                            *COM*:0000000e nicState
     /tmp/ccYWfYSX.s:1060   .progmem.data:00000062 __c.4229
     /tmp/ccYWfYSX.s:946    .text:000002d2 icmpIpIn
     /tmp/ccYWfYSX.s:1068   .progmem.data:0000008e __c.4221
                            *COM*:00000001 wwwport
                            *COM*:00000002 plen
                            *COM*:0000000f IpMyConfig
                            *COM*:00000002 udpSocket
                            *COM*:00000002 udpDbgStream
                            *COM*:00000001 udpDbgLevel
                            *COM*:00000002 tcpDebugStream
                            *COM*:00000001 tcpDebugLevel
                            *COM*:00000002 sockets
                            *COM*:00000002 arpDebug
                            *COM*:00000001 arpDebugLevel

UNDEFINED SYMBOLS
fprintf_P
netPrintIPAddr
htons
netChecksum
arpIpOut
nicSend
__do_copy_data
__do_clear_bss
