   1               		.file	"mcp3008.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__ = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
  10               		.text
  11               	.Ltext0:
 563               		.weak	enableSpiMCP3008
 565               	enableSpiMCP3008:
 566               		.stabd	46,0,0
   1:../../freeRtos/Lib/mcp3008.c **** /*****************************************************************************
   2:../../freeRtos/Lib/mcp3008.c **** * vim:sw=2:ts=2:si:et
   3:../../freeRtos/Lib/mcp3008.c **** *
   4:../../freeRtos/Lib/mcp3008.c **** * Title      : MPC23s17 parrarel I/O 16 bit port driver
   5:../../freeRtos/Lib/mcp3008.c **** * Author     : Adam Kaliszan adam.kaliszan@gmail.com
   6:../../freeRtos/Lib/mcp3008.c **** * Copyright  : GPL V2
   7:../../freeRtos/Lib/mcp3008.c **** *
   8:../../freeRtos/Lib/mcp3008.c **** *This driver provides:
   9:../../freeRtos/Lib/mcp3008.c **** * - read/set operation
  10:../../freeRtos/Lib/mcp3008.c **** *Driver uses mutexes and is condition race free. Function can be invoken by any thread.
  11:../../freeRtos/Lib/mcp3008.c **** *****************************************************************************/
  12:../../freeRtos/Lib/mcp3008.c **** //@{
  13:../../freeRtos/Lib/mcp3008.c **** #include <avr/io.h>
  14:../../freeRtos/Lib/mcp3008.c **** #include <util/delay.h>
  15:../../freeRtos/Lib/mcp3008.c **** #include "mcp3008.h"
  16:../../freeRtos/Lib/mcp3008.c **** #include "spi.h"
  17:../../freeRtos/Lib/mcp3008.c **** 
  18:../../freeRtos/Lib/mcp3008.c **** void enableSpiMCP3008(void)   {};
 568               	.LM0:
 569               	.LFBB1:
 570               	/* prologue: function */
 571               	/* frame size = 0 */
 572               	/* stack size = 0 */
 573               	.L__stack_usage = 0
 574               	/* epilogue start */
 576               	.LM1:
 577 0000 0895      		ret
 579               	.Lscope1:
 581               		.stabd	78,0,0
 583               		.weak	disableSpiMCP3008
 585               	disableSpiMCP3008:
 586               		.stabd	46,0,0
  19:../../freeRtos/Lib/mcp3008.c **** void disableSpiMCP3008(void)  {};
 588               	.LM2:
 589               	.LFBB2:
 590               	/* prologue: function */
 591               	/* frame size = 0 */
 592               	/* stack size = 0 */
 593               	.L__stack_usage = 0
 594               	/* epilogue start */
 596               	.LM3:
 597 0002 0895      		ret
 599               	.Lscope2:
 601               		.stabd	78,0,0
 604               	.global	MCP3008_getSampleDiff
 606               	MCP3008_getSampleDiff:
 607               		.stabd	46,0,0
  20:../../freeRtos/Lib/mcp3008.c **** 
  21:../../freeRtos/Lib/mcp3008.c **** 
  22:../../freeRtos/Lib/mcp3008.c **** uint16_t MCP3008_getSampleDiff(uint8_t inputNo)
  23:../../freeRtos/Lib/mcp3008.c **** {
 609               	.LM4:
 610               	.LFBB3:
 611 0004 1F93      		push r17
 612 0006 DF93      		push r29
 613 0008 CF93      		push r28
 614 000a 0F92      		push __tmp_reg__
 615 000c CDB7      		in r28,__SP_L__
 616 000e DEB7      		in r29,__SP_H__
 617               	/* prologue: function */
 618               	/* frame size = 1 */
 619               	/* stack size = 4 */
 620               	.L__stack_usage = 4
  24:../../freeRtos/Lib/mcp3008.c ****   uint8_t resultLo;
  25:../../freeRtos/Lib/mcp3008.c ****   uint8_t resultHi;
  26:../../freeRtos/Lib/mcp3008.c ****   inputNo = inputNo << 4;
 622               	.LM5:
 623 0010 182F      		mov r17,r24
 624 0012 1295      		swap r17
 625 0014 107F      		andi r17,lo8(-16)
  27:../../freeRtos/Lib/mcp3008.c ****   inputNo &= 0x70;
  28:../../freeRtos/Lib/mcp3008.c ****   
  29:../../freeRtos/Lib/mcp3008.c ****   spiTake();
 627               	.LM6:
 628 0016 0E94 0000 		call spiTake
  30:../../freeRtos/Lib/mcp3008.c ****   enableSpiMCP3008();
 630               	.LM7:
 631 001a 0E94 0000 		call enableSpiMCP3008
  31:../../freeRtos/Lib/mcp3008.c ****   
  32:../../freeRtos/Lib/mcp3008.c ****   spiSend(0x01);                               //Start
 633               	.LM8:
 634 001e 81E0      		ldi r24,lo8(1)
 635 0020 0E94 0000 		call spiSend
  33:../../freeRtos/Lib/mcp3008.c ****   resultHi = spiSend(inputNo);  //DIFF/!SGL A2 A1 A0 X X X X
 637               	.LM9:
 638 0024 812F      		mov r24,r17
 639 0026 8077      		andi r24,lo8(112)
 640 0028 0E94 0000 		call spiSend
 641 002c 182F      		mov r17,r24
  34:../../freeRtos/Lib/mcp3008.c ****   resultLo = spiSend(0);        //X X X X X X X X
 643               	.LM10:
 644 002e 80E0      		ldi r24,lo8(0)
 645 0030 0E94 0000 		call spiSend
  35:../../freeRtos/Lib/mcp3008.c ****   
  36:../../freeRtos/Lib/mcp3008.c ****   disableSpiMCP3008(); 
 647               	.LM11:
 648 0034 8983      		std Y+1,r24
 649 0036 0E94 0000 		call disableSpiMCP3008
  37:../../freeRtos/Lib/mcp3008.c ****   spiGive();
 651               	.LM12:
 652 003a 0E94 0000 		call spiGive
  38:../../freeRtos/Lib/mcp3008.c ****   
  39:../../freeRtos/Lib/mcp3008.c ****   resultHi &= 0x03;
  40:../../freeRtos/Lib/mcp3008.c ****   return resultHi << 8 | resultLo;
 654               	.LM13:
 655 003e 512F      		mov r21,r17
 656 0040 5370      		andi r21,lo8(3)
 657 0042 40E0      		ldi r20,lo8(0)
 658 0044 8981      		ldd r24,Y+1
 659 0046 282F      		mov r18,r24
 660 0048 30E0      		ldi r19,lo8(0)
 661 004a 242B      		or r18,r20
 662 004c 352B      		or r19,r21
  41:../../freeRtos/Lib/mcp3008.c **** }
 664               	.LM14:
 665 004e C901      		movw r24,r18
 666               	/* epilogue start */
 667 0050 0F90      		pop __tmp_reg__
 668 0052 CF91      		pop r28
 669 0054 DF91      		pop r29
 670 0056 1F91      		pop r17
 671 0058 0895      		ret
 676               	.Lscope3:
 678               		.stabd	78,0,0
 681               	.global	MCP3008_getSampleSingle
 683               	MCP3008_getSampleSingle:
 684               		.stabd	46,0,0
  42:../../freeRtos/Lib/mcp3008.c **** 
  43:../../freeRtos/Lib/mcp3008.c **** uint16_t MCP3008_getSampleSingle(uint8_t inputNo)
  44:../../freeRtos/Lib/mcp3008.c **** {
 686               	.LM15:
 687               	.LFBB4:
 688 005a 1F93      		push r17
 689 005c DF93      		push r29
 690 005e CF93      		push r28
 691 0060 0F92      		push __tmp_reg__
 692 0062 CDB7      		in r28,__SP_L__
 693 0064 DEB7      		in r29,__SP_H__
 694               	/* prologue: function */
 695               	/* frame size = 1 */
 696               	/* stack size = 4 */
 697               	.L__stack_usage = 4
  45:../../freeRtos/Lib/mcp3008.c ****   uint8_t resultLo;
  46:../../freeRtos/Lib/mcp3008.c ****   uint8_t resultHi;
  47:../../freeRtos/Lib/mcp3008.c ****   inputNo = inputNo << 4;
 699               	.LM16:
 700 0066 182F      		mov r17,r24
 701 0068 1295      		swap r17
  48:../../freeRtos/Lib/mcp3008.c ****   inputNo &= 0x70;
 703               	.LM17:
 704 006a 1077      		andi r17,lo8(112)
  49:../../freeRtos/Lib/mcp3008.c ****   inputNo |= 0x80;
  50:../../freeRtos/Lib/mcp3008.c ****   
  51:../../freeRtos/Lib/mcp3008.c ****   spiTake();
 706               	.LM18:
 707 006c 0E94 0000 		call spiTake
  52:../../freeRtos/Lib/mcp3008.c ****   enableSpiMCP3008();
 709               	.LM19:
 710 0070 0E94 0000 		call enableSpiMCP3008
  53:../../freeRtos/Lib/mcp3008.c ****   
  54:../../freeRtos/Lib/mcp3008.c ****   spiSend(0x01);                //Start
 712               	.LM20:
 713 0074 81E0      		ldi r24,lo8(1)
 714 0076 0E94 0000 		call spiSend
  55:../../freeRtos/Lib/mcp3008.c ****   resultHi = spiSend(inputNo);  //DIFF/!SGL A2 A1 A0 X X X X
 716               	.LM21:
 717 007a 812F      		mov r24,r17
 718 007c 8068      		ori r24,lo8(-128)
 719 007e 0E94 0000 		call spiSend
 720 0082 182F      		mov r17,r24
  56:../../freeRtos/Lib/mcp3008.c ****   resultLo = spiSend(0);        //X X X X X X X X
 722               	.LM22:
 723 0084 80E0      		ldi r24,lo8(0)
 724 0086 0E94 0000 		call spiSend
  57:../../freeRtos/Lib/mcp3008.c ****   
  58:../../freeRtos/Lib/mcp3008.c ****   disableSpiMCP3008(); 
 726               	.LM23:
 727 008a 8983      		std Y+1,r24
 728 008c 0E94 0000 		call disableSpiMCP3008
  59:../../freeRtos/Lib/mcp3008.c ****   spiGive();
 730               	.LM24:
 731 0090 0E94 0000 		call spiGive
  60:../../freeRtos/Lib/mcp3008.c ****   
  61:../../freeRtos/Lib/mcp3008.c ****   resultHi &= 0x03;
  62:../../freeRtos/Lib/mcp3008.c ****   return resultHi << 8 | resultLo;
 733               	.LM25:
 734 0094 512F      		mov r21,r17
 735 0096 5370      		andi r21,lo8(3)
 736 0098 40E0      		ldi r20,lo8(0)
 737 009a 8981      		ldd r24,Y+1
 738 009c 282F      		mov r18,r24
 739 009e 30E0      		ldi r19,lo8(0)
 740 00a0 242B      		or r18,r20
 741 00a2 352B      		or r19,r21
  63:../../freeRtos/Lib/mcp3008.c **** }
 743               	.LM26:
 744 00a4 C901      		movw r24,r18
 745               	/* epilogue start */
 746 00a6 0F90      		pop __tmp_reg__
 747 00a8 CF91      		pop r28
 748 00aa DF91      		pop r29
 749 00ac 1F91      		pop r17
 750 00ae 0895      		ret
 755               	.Lscope4:
 757               		.stabd	78,0,0
 758               		.comm klastry,128,1
 759               		.comm wwwport,1,1
 760               		.comm rollers,2,1
 761               		.comm xSemaphoreSpiSS,2,1
 762               		.comm portA,1,1
 763               		.comm portB,1,1
 764               		.comm lockSensors,2,1
 765               		.comm xSemaphoreRs485,2,1
 766               		.comm nicState,14,1
 767               		.comm plen,2,1
 768               		.comm IpMyConfig,15,1
 769               		.comm arpDebug,2,1
 770               		.comm arpDebugLevel,1,1
 771               		.comm icmpDebug,2,1
 772               		.comm icmpDebugLevel,1,1
 773               		.comm udpSocket,2,1
 774               		.comm udpDbgStream,2,1
 775               		.comm udpDbgLevel,1,1
 776               		.comm tcpDebugStream,2,1
 777               		.comm tcpDebugLevel,1,1
 778               		.comm sockets,2,1
 779               		.comm czasRtc,7,1
 802               		.weak	spiSend
 804               	.Letext0:
 805               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:00000000 mcp3008.c
     /tmp/cc2mPY6t.s:2      *ABS*:0000003f __SREG__
     /tmp/cc2mPY6t.s:3      *ABS*:0000003e __SP_H__
     /tmp/cc2mPY6t.s:4      *ABS*:0000003d __SP_L__
     /tmp/cc2mPY6t.s:5      *ABS*:00000034 __CCP__
     /tmp/cc2mPY6t.s:6      *ABS*:00000000 __tmp_reg__
     /tmp/cc2mPY6t.s:7      *ABS*:00000001 __zero_reg__
     /tmp/cc2mPY6t.s:565    .text:00000000 enableSpiMCP3008
     /tmp/cc2mPY6t.s:585    .text:00000002 disableSpiMCP3008
     /tmp/cc2mPY6t.s:606    .text:00000004 MCP3008_getSampleDiff
     /tmp/cc2mPY6t.s:683    .text:0000005a MCP3008_getSampleSingle
                            *COM*:00000080 klastry
                            *COM*:00000001 wwwport
                            *COM*:00000002 rollers
                            *COM*:00000002 xSemaphoreSpiSS
                            *COM*:00000001 portA
                            *COM*:00000001 portB
                            *COM*:00000002 lockSensors
                            *COM*:00000002 xSemaphoreRs485
                            *COM*:0000000e nicState
                            *COM*:00000002 plen
                            *COM*:0000000f IpMyConfig
                            *COM*:00000002 arpDebug
                            *COM*:00000001 arpDebugLevel
                            *COM*:00000002 icmpDebug
                            *COM*:00000001 icmpDebugLevel
                            *COM*:00000002 udpSocket
                            *COM*:00000002 udpDbgStream
                            *COM*:00000001 udpDbgLevel
                            *COM*:00000002 tcpDebugStream
                            *COM*:00000001 tcpDebugLevel
                            *COM*:00000002 sockets
                            *COM*:00000007 czasRtc

UNDEFINED SYMBOLS
spiTake
spiSend
spiGive
__do_clear_bss
