   1               		.file	"cli_task.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__ = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
  10               		.text
  11               	.Ltext0:
 454               	.global	vTaskVTYusb
 456               	vTaskVTYusb:
 457               		.stabd	46,0,0
   1:cli_task.c    **** #include "cli_task.h"
   2:cli_task.c    **** 
   3:cli_task.c    **** void vTaskVTYusb(void *cliStatePtr)
   4:cli_task.c    **** {
 459               	.LM0:
 460               	.LFBB1:
 461 0000 EF92      		push r14
 462 0002 FF92      		push r15
 463 0004 0F93      		push r16
 464 0006 1F93      		push r17
 465 0008 DF93      		push r29
 466 000a CF93      		push r28
 467 000c 0F92      		push __tmp_reg__
 468 000e CDB7      		in r28,__SP_L__
 469 0010 DEB7      		in r29,__SP_H__
 470               	/* prologue: function */
 471               	/* frame size = 1 */
 472               	/* stack size = 7 */
 473               	.L__stack_usage = 7
   5:cli_task.c    ****   cmdState_t *state = (cmdState_t *)(cliStatePtr);
 475               	.LM1:
 476 0012 8C01      		movw r16,r24
   6:cli_task.c    ****   fprintf_P(state->myStdInOut, PSTR("Restart\r\n"));
 478               	.LM2:
 479 0014 00D0      		rcall .
 480 0016 0F92      		push __tmp_reg__
 481 0018 FC01      		movw r30,r24
 482 001a 828D      		ldd r24,Z+26
 483 001c 938D      		ldd r25,Z+27
 484 001e EDB7      		in r30,__SP_L__
 485 0020 FEB7      		in r31,__SP_H__
 486 0022 8183      		std Z+1,r24
 487 0024 9283      		std Z+2,r25
 488 0026 80E0      		ldi r24,lo8(__c.3756)
 489 0028 90E0      		ldi r25,hi8(__c.3756)
 490 002a 8383      		std Z+3,r24
 491 002c 9483      		std Z+4,r25
 492 002e 0E94 0000 		call fprintf_P
   7:cli_task.c    ****   cmdlineInputFunc('\r', state);
 494               	.LM3:
 495 0032 0F90      		pop __tmp_reg__
 496 0034 0F90      		pop __tmp_reg__
 497 0036 0F90      		pop __tmp_reg__
 498 0038 0F90      		pop __tmp_reg__
 499 003a 8DE0      		ldi r24,lo8(13)
 500 003c B801      		movw r22,r16
 501 003e 0E94 0000 		call cmdlineInputFunc
   8:cli_task.c    ****   
   9:cli_task.c    ****   char znak;
  10:cli_task.c    ****   for( ;; )
  11:cli_task.c    ****   {
  12:cli_task.c    ****     if( xQueueReceive(xVtyRec, &znak, portMAX_DELAY))
 503               	.LM4:
 504 0042 7E01      		movw r14,r28
 505 0044 0894      		sec
 506 0046 E11C      		adc r14,__zero_reg__
 507 0048 F11C      		adc r15,__zero_reg__
 508               	.L6:
 509 004a 8091 0000 		lds r24,xVtyRec
 510 004e 9091 0000 		lds r25,xVtyRec+1
 511 0052 B701      		movw r22,r14
 512 0054 4FEF      		ldi r20,lo8(-1)
 513 0056 5FEF      		ldi r21,hi8(-1)
 514 0058 20E0      		ldi r18,lo8(0)
 515 005a 0E94 0000 		call xQueueGenericReceive
 516 005e 8823      		tst r24
 517 0060 01F0      		breq .L6
  13:cli_task.c    ****     {
  14:cli_task.c    ****       cmdlineInputFunc((char)znak, state);
 519               	.LM5:
 520 0062 8981      		ldd r24,Y+1
 521 0064 B801      		movw r22,r16
 522 0066 0E94 0000 		call cmdlineInputFunc
  15:cli_task.c    ****       cmdlineMainLoop(state);
 524               	.LM6:
 525 006a C801      		movw r24,r16
 526 006c 0E94 0000 		call cmdlineMainLoop
 527 0070 00C0      		rjmp .L6
 532               	.Lscope1:
 534               		.stabd	78,0,0
 537               	.global	vTaskUSB
 539               	vTaskUSB:
 540               		.stabd	46,0,0
  16:cli_task.c    ****     }  
  17:cli_task.c    ****   }
  18:cli_task.c    **** }
  19:cli_task.c    **** void vTaskUSB(void *cliStatePtr)
  20:cli_task.c    **** {
 542               	.LM7:
 543               	.LFBB2:
 544 0072 1F93      		push r17
 545               	/* prologue: function */
 546               	/* frame size = 0 */
 547               	/* stack size = 1 */
 548               	.L__stack_usage = 1
  21:cli_task.c    **** (void) cliStatePtr;; 
  22:cli_task.c    ****  for(;;)
  23:cli_task.c    ****  {
  24:cli_task.c    ****   vTaskDelay(200);
  25:cli_task.c    ****   USARTD0.DATA='a';
 550               	.LM8:
 551 0074 11E6      		ldi r17,lo8(97)
 552               	.L8:
  24:cli_task.c    ****   vTaskDelay(200);
 554               	.LM9:
 555 0076 88EC      		ldi r24,lo8(200)
 556 0078 90E0      		ldi r25,hi8(200)
 557 007a 0E94 0000 		call vTaskDelay
 559               	.LM10:
 560 007e 1093 A009 		sts 2464,r17
 561 0082 00C0      		rjmp .L8
 563               	.Lscope2:
 565               		.stabd	78,0,0
 567               	.global	vTaskVTYsocket
 569               	vTaskVTYsocket:
 570               		.stabd	46,0,0
  26:cli_task.c    ****  }
  27:cli_task.c    **** }
  28:cli_task.c    **** 
  29:cli_task.c    **** void vTaskVTYsocket(void *cliStatePtr)
  30:cli_task.c    **** {
 572               	.LM11:
 573               	.LFBB3:
 574 0084 EF92      		push r14
 575 0086 FF92      		push r15
 576 0088 CF93      		push r28
 577 008a DF93      		push r29
 578               	/* prologue: function */
 579               	/* frame size = 0 */
 580               	/* stack size = 4 */
 581               	.L__stack_usage = 4
  31:cli_task.c    ****   cmdState_t *state = (cmdState_t *)(cliStatePtr);
 583               	.LM12:
 584 008c E82E      		mov r14,r24
 585 008e E701      		movw r28,r14
 586 0090 7E01      		movw r14,r28
 587 0092 F92E      		mov r15,r25
 588 0094 E701      		movw r28,r14
 589               	.L10:
  32:cli_task.c    ****   
  33:cli_task.c    ****   char znak;
  34:cli_task.c    ****   for( ;; )
  35:cli_task.c    ****   {
  36:cli_task.c    ****     znak = 0;
  37:cli_task.c    ****     znak = fgetc(state->myStdInOut);
 591               	.LM13:
 592 0096 8A8D      		ldd r24,Y+26
 593 0098 9B8D      		ldd r25,Y+27
 594 009a 0E94 0000 		call fgetc
  38:cli_task.c    ****     cmdlineInputFunc((char)znak, state);
 596               	.LM14:
 597 009e BE01      		movw r22,r28
 598 00a0 0E94 0000 		call cmdlineInputFunc
  39:cli_task.c    ****     cmdlineMainLoop(state);
 600               	.LM15:
 601 00a4 CE01      		movw r24,r28
 602 00a6 0E94 0000 		call cmdlineMainLoop
 603 00aa 00C0      		rjmp .L10
 605               	.Lscope3:
 607               		.stabd	78,0,0
 608               		.comm wwwport,1,1
 609               		.section	.progmem.data,"a",@progbits
 612               	__c.3756:
 613 0000 5265 7374 		.string	"Restart\r\n"
 613      6172 740D 
 613      0A00 
 615               		.text
 617               	.Letext0:
 618               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:00000000 cli_task.c
     /tmp/ccuZMguv.s:2      *ABS*:0000003f __SREG__
     /tmp/ccuZMguv.s:3      *ABS*:0000003e __SP_H__
     /tmp/ccuZMguv.s:4      *ABS*:0000003d __SP_L__
     /tmp/ccuZMguv.s:5      *ABS*:00000034 __CCP__
     /tmp/ccuZMguv.s:6      *ABS*:00000000 __tmp_reg__
     /tmp/ccuZMguv.s:7      *ABS*:00000001 __zero_reg__
     /tmp/ccuZMguv.s:456    .text:00000000 vTaskVTYusb
     /tmp/ccuZMguv.s:612    .progmem.data:00000000 __c.3756
     /tmp/ccuZMguv.s:539    .text:00000072 vTaskUSB
     /tmp/ccuZMguv.s:569    .text:00000084 vTaskVTYsocket
                            *COM*:00000001 wwwport

UNDEFINED SYMBOLS
fprintf_P
cmdlineInputFunc
xVtyRec
xQueueGenericReceive
cmdlineMainLoop
vTaskDelay
fgetc
__do_clear_bss
