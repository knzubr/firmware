   1               		.file	"tcp.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__ = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
  10               		.text
  11               	.Ltext0:
 475               	.global	socketInit
 477               	socketInit:
 478               		.stabd	46,0,0
   1:../../freeRtos/Lib/net/tcp.c **** /**
   2:../../freeRtos/Lib/net/tcp.c ****  * @file        tcp.c
   3:../../freeRtos/Lib/net/tcp.c ****  * @author      Adam Kaliszan
   4:../../freeRtos/Lib/net/tcp.c ****  * @brief       TCP socket
   5:../../freeRtos/Lib/net/tcp.c ****  * @ingroup     network
   6:../../freeRtos/Lib/net/tcp.c ****  * @defgroup    netstack Network Stack
   7:../../freeRtos/Lib/net/tcp.c ****  * @version     0.2
   8:../../freeRtos/Lib/net/tcp.c ****  * Created:     13.10.2010
   9:../../freeRtos/Lib/net/tcp.c ****  * Revised:     05.10.2010
  10:../../freeRtos/Lib/net/tcp.c ****  * Editor Tabs: 2
  11:../../freeRtos/Lib/net/tcp.c ****  *
  12:../../freeRtos/Lib/net/tcp.c ****  */
  13:../../freeRtos/Lib/net/tcp.c **** 
  14:../../freeRtos/Lib/net/tcp.c **** #include "tcp.h"
  15:../../freeRtos/Lib/net/tcp.c **** 
  16:../../freeRtos/Lib/net/tcp.c **** 
  17:../../freeRtos/Lib/net/tcp.c **** static struct TcpIpSocket* findConnectedSocket(void);
  18:../../freeRtos/Lib/net/tcp.c **** 
  19:../../freeRtos/Lib/net/tcp.c **** /**
  20:../../freeRtos/Lib/net/tcp.c ****  * @param *sck socket
  21:../../freeRtos/Lib/net/tcp.c ****  */
  22:../../freeRtos/Lib/net/tcp.c **** static inline void tcpAcceptConn(struct TcpIpSocket *sck);
  23:../../freeRtos/Lib/net/tcp.c **** 
  24:../../freeRtos/Lib/net/tcp.c **** inline void socketInit(void)
  25:../../freeRtos/Lib/net/tcp.c **** {
 480               	.LM0:
 481               	.LFBB1:
 482 0000 BF92      		push r11
 483 0002 CF92      		push r12
 484 0004 DF92      		push r13
 485 0006 EF92      		push r14
 486 0008 FF92      		push r15
 487 000a 0F93      		push r16
 488 000c 1F93      		push r17
 489 000e CF93      		push r28
 490 0010 DF93      		push r29
 491               	/* prologue: function */
 492               	/* frame size = 0 */
 493               	/* stack size = 9 */
 494               	.L__stack_usage = 9
  26:../../freeRtos/Lib/net/tcp.c ****   sockets = xmalloc(NUMBER_OF_SOCKETS * sizeof(struct TcpIpSocket));
 496               	.LM1:
 497 0012 80E3      		ldi r24,lo8(560)
 498 0014 92E0      		ldi r25,hi8(560)
 499 0016 0E94 0000 		call xmalloc
 500 001a 8093 0000 		sts sockets,r24
 501 001e 9093 0000 		sts sockets+1,r25
  27:../../freeRtos/Lib/net/tcp.c ****   memset(sockets, 0, NUMBER_OF_SOCKETS * sizeof(struct TcpIpSocket));
 503               	.LM2:
 504 0022 FC01      		movw r30,r24
 505 0024 80E3      		ldi r24,lo8(560)
 506 0026 92E0      		ldi r25,hi8(560)
 507 0028 DF01      		movw r26,r30
 508 002a 9C01      		movw r18,r24
 509 002c 1D92      		st X+,__zero_reg__
 510 002e 2150      		subi r18,1
 511 0030 3040      		sbci r19,0
 512 0032 01F4      		brne .-8
  28:../../freeRtos/Lib/net/tcp.c ****   
  29:../../freeRtos/Lib/net/tcp.c ****   uint8_t            i;
  30:../../freeRtos/Lib/net/tcp.c ****   uint8_t            *ptr = (uint8_t *)RTOS_TCP_BUF_BASE_ADDR;
  31:../../freeRtos/Lib/net/tcp.c **** 
  32:../../freeRtos/Lib/net/tcp.c ****   struct TcpIpSocket *sck = sockets;
 514               	.LM3:
 515 0034 0091 0000 		lds r16,sockets
 516 0038 1091 0000 		lds r17,sockets+1
 517 003c C8EA      		ldi r28,lo8(25000)
 518 003e D1E6      		ldi r29,hi8(25000)
  33:../../freeRtos/Lib/net/tcp.c ****   for (i=0; i < NUMBER_OF_SOCKETS; i++)
  34:../../freeRtos/Lib/net/tcp.c ****   {
  35:../../freeRtos/Lib/net/tcp.c **** //    sck->Rx = xQueueCreateExternal(255, 1, (void *)(ptr));
  36:../../freeRtos/Lib/net/tcp.c ****     ptr+=256;
  37:../../freeRtos/Lib/net/tcp.c **** //    sck->Tx = xQueueCreateExternal(255, 1, (void *)(ptr));
  38:../../freeRtos/Lib/net/tcp.c ****     ptr+=256;
  39:../../freeRtos/Lib/net/tcp.c **** 
  40:../../freeRtos/Lib/net/tcp.c ****     sck->localPort     = (i<16) ? htons(MYTELNETPOERT + i) : (MYTELNETPOERT + 16);
  41:../../freeRtos/Lib/net/tcp.c ****     sck->seqNoLastSent = HTONL(0xFF112233); 
 520               	.LM4:
 521 0040 8FEF      		ldi r24,lo8(857870847)
 522 0042 C82E      		mov r12,r24
 523 0044 81E1      		ldi r24,hi8(857870847)
 524 0046 D82E      		mov r13,r24
 525 0048 82E2      		ldi r24,hlo8(857870847)
 526 004a E82E      		mov r14,r24
 527 004c 83E3      		ldi r24,hhi8(857870847)
 528 004e F82E      		mov r15,r24
  42:../../freeRtos/Lib/net/tcp.c ****     sck->state         = LISTEN;   
 530               	.LM5:
 531 0050 BB24      		clr r11
 532 0052 B394      		inc r11
 533               	.L4:
  40:../../freeRtos/Lib/net/tcp.c ****     sck->localPort     = (i<16) ? htons(MYTELNETPOERT + i) : (MYTELNETPOERT + 16);
 535               	.LM6:
 536 0054 DE01      		movw r26,r28
 537 0056 A85A      		subi r26,lo8(-(88))
 538 0058 A031      		cpi r26,lo8(16)
 539 005a 00F4      		brsh .L5
  40:../../freeRtos/Lib/net/tcp.c ****     sck->localPort     = (i<16) ? htons(MYTELNETPOERT + i) : (MYTELNETPOERT + 16);
 541               	.LM7:
 542 005c CE01      		movw r24,r28
 543 005e 0E94 0000 		call htons
 544 0062 00C0      		rjmp .L2
 545               	.L5:
  40:../../freeRtos/Lib/net/tcp.c ****     sck->localPort     = (i<16) ? htons(MYTELNETPOERT + i) : (MYTELNETPOERT + 16);
 547               	.LM8:
 548 0064 88EB      		ldi r24,lo8(25016)
 549 0066 91E6      		ldi r25,hi8(25016)
 550               	.L2:
  40:../../freeRtos/Lib/net/tcp.c ****     sck->localPort     = (i<16) ? htons(MYTELNETPOERT + i) : (MYTELNETPOERT + 16);
 552               	.LM9:
 553 0068 F801      		movw r30,r16
 554 006a 8583      		std Z+5,r24
 555 006c 9683      		std Z+6,r25
  41:../../freeRtos/Lib/net/tcp.c ****     sck->seqNoLastSent = HTONL(0xFF112233); 
 557               	.LM10:
 558 006e D801      		movw r26,r16
 559 0070 1D96      		adiw r26,13
 560 0072 CD92      		st X+,r12
 561 0074 DD92      		st X+,r13
 562 0076 ED92      		st X+,r14
 563 0078 FC92      		st X,r15
 564 007a 5097      		sbiw r26,13+3
 566               	.LM11:
 567 007c BC92      		st X,r11
 568 007e 2196      		adiw r28,1
  33:../../freeRtos/Lib/net/tcp.c ****   for (i=0; i < NUMBER_OF_SOCKETS; i++)
 570               	.LM12:
 571 0080 B1E6      		ldi r27,hi8(25020)
 572 0082 CC3B      		cpi r28,lo8(25020)
 573 0084 DB07      		cpc r29,r27
 574 0086 01F0      		breq .L1
  43:../../freeRtos/Lib/net/tcp.c ****     sck++;
 576               	.LM13:
 577 0088 045E      		subi r16,lo8(-(28))
 578 008a 1F4F      		sbci r17,hi8(-(28))
 579 008c 00C0      		rjmp .L4
 580               	.L1:
 581               	/* epilogue start */
  44:../../freeRtos/Lib/net/tcp.c ****   }
  45:../../freeRtos/Lib/net/tcp.c **** }
 583               	.LM14:
 584 008e DF91      		pop r29
 585 0090 CF91      		pop r28
 586 0092 1F91      		pop r17
 587 0094 0F91      		pop r16
 588 0096 FF90      		pop r15
 589 0098 EF90      		pop r14
 590 009a DF90      		pop r13
 591 009c CF90      		pop r12
 592 009e BF90      		pop r11
 593 00a0 0895      		ret
 598               	.Lscope1:
 600               		.stabd	78,0,0
 603               	.global	calculateTcpChecksun
 605               	calculateTcpChecksun:
 606               		.stabd	46,0,0
  46:../../freeRtos/Lib/net/tcp.c **** 
  47:../../freeRtos/Lib/net/tcp.c **** struct TcpIpSocket* findConnectedSocket(void)
  48:../../freeRtos/Lib/net/tcp.c **** {
  49:../../freeRtos/Lib/net/tcp.c ****   struct TcpIpSocket *result = sockets;
  50:../../freeRtos/Lib/net/tcp.c ****   uint8_t i;
  51:../../freeRtos/Lib/net/tcp.c ****   for (i=0; i<NUMBER_OF_SOCKETS; i++)
  52:../../freeRtos/Lib/net/tcp.c ****   {
  53:../../freeRtos/Lib/net/tcp.c ****     if ( ((result->state != LISTEN) && (result->state != CLOSED)) 
  54:../../freeRtos/Lib/net/tcp.c ****       && (result->RemoteIpAddr == nicState.layer3.ip->srcipaddr) && (result->localPort == nicState.
  55:../../freeRtos/Lib/net/tcp.c ****     {
  56:../../freeRtos/Lib/net/tcp.c **** #if TCP_DEBUG
  57:../../freeRtos/Lib/net/tcp.c ****       if (tcpDebugStream != NULL)
  58:../../freeRtos/Lib/net/tcp.c ****         if (tcpDebugLevel > 2)
  59:../../freeRtos/Lib/net/tcp.c ****           fprintf_P(tcpDebugStream, PSTR("Found TCP socket state %d\r\n"), result->state);
  60:../../freeRtos/Lib/net/tcp.c **** #endif      
  61:../../freeRtos/Lib/net/tcp.c ****       return result;
  62:../../freeRtos/Lib/net/tcp.c ****     }
  63:../../freeRtos/Lib/net/tcp.c ****     result++;
  64:../../freeRtos/Lib/net/tcp.c ****   }
  65:../../freeRtos/Lib/net/tcp.c ****   
  66:../../freeRtos/Lib/net/tcp.c ****   result = sockets;
  67:../../freeRtos/Lib/net/tcp.c ****   for (i=0; i<NUMBER_OF_SOCKETS; i++)
  68:../../freeRtos/Lib/net/tcp.c ****   {
  69:../../freeRtos/Lib/net/tcp.c ****     if ((result->state == LISTEN) && (result->localPort == nicState.layer4.tcp->destport))
  70:../../freeRtos/Lib/net/tcp.c ****     {
  71:../../freeRtos/Lib/net/tcp.c **** #if TCP_DEBUG
  72:../../freeRtos/Lib/net/tcp.c ****       if (tcpDebugStream != NULL)
  73:../../freeRtos/Lib/net/tcp.c ****         if (tcpDebugLevel > 2)
  74:../../freeRtos/Lib/net/tcp.c ****           fprintf_P(tcpDebugStream, PSTR("Found TCP socket no %d state LISTEN\r\n"), i);
  75:../../freeRtos/Lib/net/tcp.c **** #endif      
  76:../../freeRtos/Lib/net/tcp.c ****       return &sockets[i];
  77:../../freeRtos/Lib/net/tcp.c ****     }
  78:../../freeRtos/Lib/net/tcp.c ****     result++;
  79:../../freeRtos/Lib/net/tcp.c ****   }
  80:../../freeRtos/Lib/net/tcp.c **** #if TCP_DEBUG
  81:../../freeRtos/Lib/net/tcp.c ****   if (tcpDebugStream != NULL)
  82:../../freeRtos/Lib/net/tcp.c ****     if (tcpDebugLevel > 2)
  83:../../freeRtos/Lib/net/tcp.c ****       fprintf_P(tcpDebugStream, PSTR("Can't find TCP socket with localPort %d\r\n"), htons(nicState
  84:../../freeRtos/Lib/net/tcp.c **** #endif
  85:../../freeRtos/Lib/net/tcp.c ****   return NULL;
  86:../../freeRtos/Lib/net/tcp.c **** }
  87:../../freeRtos/Lib/net/tcp.c **** 
  88:../../freeRtos/Lib/net/tcp.c **** static inline void tcpAcceptConn(struct TcpIpSocket *sck)
  89:../../freeRtos/Lib/net/tcp.c **** {
  90:../../freeRtos/Lib/net/tcp.c ****   sck->state        = SYN_RECEIVED;
  91:../../freeRtos/Lib/net/tcp.c ****   sck->remotePort   = nicState.layer4.tcp->srcport;
  92:../../freeRtos/Lib/net/tcp.c ****   sck->RemoteIpAddr = nicState.layer3.ip->srcipaddr;
  93:../../freeRtos/Lib/net/tcp.c **** }
  94:../../freeRtos/Lib/net/tcp.c **** 
  95:../../freeRtos/Lib/net/tcp.c **** inline uint8_t processTcpPacket(void)
  96:../../freeRtos/Lib/net/tcp.c **** {
  97:../../freeRtos/Lib/net/tcp.c ****   struct TcpIpSocket *socket = findConnectedSocket();
  98:../../freeRtos/Lib/net/tcp.c ****   
  99:../../freeRtos/Lib/net/tcp.c ****   if (socket == NULL)
 100:../../freeRtos/Lib/net/tcp.c ****     return 1;
 101:../../freeRtos/Lib/net/tcp.c ****   
 102:../../freeRtos/Lib/net/tcp.c ****   
 103:../../freeRtos/Lib/net/tcp.c ****   socket->seqNoLastReceived = htonl(nicState.layer4.tcp->seqno);
 104:../../freeRtos/Lib/net/tcp.c ****   
 105:../../freeRtos/Lib/net/tcp.c ****   if (socket->state == LISTEN)
 106:../../freeRtos/Lib/net/tcp.c ****   {
 107:../../freeRtos/Lib/net/tcp.c ****     if (nicState.layer4.tcp->flags & TCP_FLAGS_SYN)
 108:../../freeRtos/Lib/net/tcp.c ****     {
 109:../../freeRtos/Lib/net/tcp.c **** //      uint16_t len = nicState.layer4.tcp->tcpoffset>>4;
 110:../../freeRtos/Lib/net/tcp.c **** //      len *=4;
 111:../../freeRtos/Lib/net/tcp.c **** #if TCP_DEBUG
 112:../../freeRtos/Lib/net/tcp.c ****       if (tcpDebugStream != NULL)
 113:../../freeRtos/Lib/net/tcp.c ****         if (tcpDebugLevel > 2)
 114:../../freeRtos/Lib/net/tcp.c ****           fprintf_P(tcpDebugStream, PSTR("Opening TCP connection socket state change LISTEN->SYN_RE
 115:../../freeRtos/Lib/net/tcp.c **** #endif
 116:../../freeRtos/Lib/net/tcp.c ****       tcpAcceptConn(socket);
 117:../../freeRtos/Lib/net/tcp.c ****       //Preparing response
 118:../../freeRtos/Lib/net/tcp.c ****       nicState.layer4.tcp->srcport   = socket->localPort;
 119:../../freeRtos/Lib/net/tcp.c ****       nicState.layer4.tcp->destport  = socket->remotePort;
 120:../../freeRtos/Lib/net/tcp.c ****       nicState.layer4.tcp->seqno     = htonl(socket->seqNoLastSent);
 121:../../freeRtos/Lib/net/tcp.c ****       nicState.layer4.tcp->ackno     = htonl(socket->seqNoLastReceived+1);
 122:../../freeRtos/Lib/net/tcp.c ****       nicState.layer4.tcp->tcpoffset = 5<<4;
 123:../../freeRtos/Lib/net/tcp.c ****       nicState.layer4.tcp->flags     = TCP_FLAGS_ACK+TCP_FLAGS_SYN;
 124:../../freeRtos/Lib/net/tcp.c ****       nicState.layer4.tcp->wnd       = htons(100);
 125:../../freeRtos/Lib/net/tcp.c ****       nicState.layer4.tcp->tcpchksum = 0;
 126:../../freeRtos/Lib/net/tcp.c ****       nicState.layer4.tcp->urgp      = 0;
 127:../../freeRtos/Lib/net/tcp.c ****       calculateTcpChecksun(TCP_HEADER_LEN);
 128:../../freeRtos/Lib/net/tcp.c **** 
 129:../../freeRtos/Lib/net/tcp.c ****       socket->seqNoLastSent++;
 130:../../freeRtos/Lib/net/tcp.c ****       ipSend(socket->RemoteIpAddr, IP_PROTO_TCP, TCP_HEADER_LEN);
 131:../../freeRtos/Lib/net/tcp.c ****     }
 132:../../freeRtos/Lib/net/tcp.c **** #if TCP_DEBUG
 133:../../freeRtos/Lib/net/tcp.c ****     else
 134:../../freeRtos/Lib/net/tcp.c ****     {
 135:../../freeRtos/Lib/net/tcp.c ****       if (tcpDebugStream != NULL)
 136:../../freeRtos/Lib/net/tcp.c ****         if (tcpDebugLevel > 1)
 137:../../freeRtos/Lib/net/tcp.c ****           fprintf_P(tcpDebugStream, PSTR("Opening TCP connection ERROR: syn flag wasn't set\r\n"));
 138:../../freeRtos/Lib/net/tcp.c ****     }
 139:../../freeRtos/Lib/net/tcp.c **** #endif    
 140:../../freeRtos/Lib/net/tcp.c ****     return 0;
 141:../../freeRtos/Lib/net/tcp.c ****   }
 142:../../freeRtos/Lib/net/tcp.c ****   
 143:../../freeRtos/Lib/net/tcp.c ****   if (socket->state == SYN_RECEIVED)
 144:../../freeRtos/Lib/net/tcp.c ****   {
 145:../../freeRtos/Lib/net/tcp.c ****     if (nicState.layer4.tcp->flags & TCP_FLAGS_ACK)
 146:../../freeRtos/Lib/net/tcp.c ****     {
 147:../../freeRtos/Lib/net/tcp.c ****       socket->state    = ESTABILISHED;
 148:../../freeRtos/Lib/net/tcp.c **** #if TCP_DEBUG
 149:../../freeRtos/Lib/net/tcp.c ****     if (tcpDebugStream != NULL)
 150:../../freeRtos/Lib/net/tcp.c ****       if (tcpDebugLevel > 2)
 151:../../freeRtos/Lib/net/tcp.c ****         fprintf_P(tcpDebugStream, PSTR("Opening TCP connection socket state change SYN_RECEIVED->ES
 152:../../freeRtos/Lib/net/tcp.c **** #endif        
 153:../../freeRtos/Lib/net/tcp.c **** 
 154:../../freeRtos/Lib/net/tcp.c ****     }
 155:../../freeRtos/Lib/net/tcp.c ****     else
 156:../../freeRtos/Lib/net/tcp.c ****     {
 157:../../freeRtos/Lib/net/tcp.c ****       socket->state = LISTEN;
 158:../../freeRtos/Lib/net/tcp.c **** #if TCP_DEBUG
 159:../../freeRtos/Lib/net/tcp.c ****       if (tcpDebugStream != NULL)
 160:../../freeRtos/Lib/net/tcp.c ****         if (tcpDebugLevel > 1)
 161:../../freeRtos/Lib/net/tcp.c ****           fprintf_P(tcpDebugStream, PSTR("Opening TCP connection ERROR: ack flag wasn't set\r\n"));
 162:../../freeRtos/Lib/net/tcp.c **** #endif    
 163:../../freeRtos/Lib/net/tcp.c ****     }
 164:../../freeRtos/Lib/net/tcp.c ****     return 0;
 165:../../freeRtos/Lib/net/tcp.c ****   }
 166:../../freeRtos/Lib/net/tcp.c ****   
 167:../../freeRtos/Lib/net/tcp.c ****   
 168:../../freeRtos/Lib/net/tcp.c ****   if (socket->state == ESTABILISHED)
 169:../../freeRtos/Lib/net/tcp.c ****   {
 170:../../freeRtos/Lib/net/tcp.c ****     if (nicState.layer4.tcp->flags & TCP_FLAGS_FIN)  //ESTABILISHED -> CLOSE_WAIT -> closed
 171:../../freeRtos/Lib/net/tcp.c ****     {
 172:../../freeRtos/Lib/net/tcp.c ****       socket->timer              = timer100Hz;
 173:../../freeRtos/Lib/net/tcp.c ****       nicState.layer4.tcp->flags = TCP_FLAGS_ACK;
 174:../../freeRtos/Lib/net/tcp.c ****       
 175:../../freeRtos/Lib/net/tcp.c ****       uint8_t dataFromBufLen;
 176:../../freeRtos/Lib/net/tcp.c ****       uint8_t *dataPtr = (uint8_t *)(nicState.layer4.tcp+1);
 177:../../freeRtos/Lib/net/tcp.c **** //      while (xQueueReceive(socket->Tx, dataPtr, 0) == pdTRUE)
 178:../../freeRtos/Lib/net/tcp.c **** //      {
 179:../../freeRtos/Lib/net/tcp.c **** //        dataFromBufLen++;
 180:../../freeRtos/Lib/net/tcp.c **** //        dataPtr++;
 181:../../freeRtos/Lib/net/tcp.c **** //      }
 182:../../freeRtos/Lib/net/tcp.c ****       ipSend(socket->RemoteIpAddr, IP_PROTO_TCP, TCP_HEADER_LEN + dataFromBufLen);
 183:../../freeRtos/Lib/net/tcp.c ****       socket->state    = CLOSE_WAIT;
 184:../../freeRtos/Lib/net/tcp.c ****       
 185:../../freeRtos/Lib/net/tcp.c ****       
 186:../../freeRtos/Lib/net/tcp.c ****       nicState.layer4.tcp->flags = TCP_FLAGS_FIN;
 187:../../freeRtos/Lib/net/tcp.c ****       ipSend(socket->RemoteIpAddr, IP_PROTO_TCP, TCP_HEADER_LEN);
 188:../../freeRtos/Lib/net/tcp.c ****       socket->state    = LAST_ACK;
 189:../../freeRtos/Lib/net/tcp.c ****     }
 190:../../freeRtos/Lib/net/tcp.c ****     return 0;
 191:../../freeRtos/Lib/net/tcp.c ****   }
 192:../../freeRtos/Lib/net/tcp.c **** 
 193:../../freeRtos/Lib/net/tcp.c ****   //Read data and put into the queue
 194:../../freeRtos/Lib/net/tcp.c ****   
 195:../../freeRtos/Lib/net/tcp.c ****   return 0;
 196:../../freeRtos/Lib/net/tcp.c **** }
 197:../../freeRtos/Lib/net/tcp.c **** 
 198:../../freeRtos/Lib/net/tcp.c **** void calculateTcpChecksun(uint16_t tcpLen)
 199:../../freeRtos/Lib/net/tcp.c **** {
 608               	.LM15:
 609               	.LFBB2:
 610 00a2 CF93      		push r28
 611 00a4 DF93      		push r29
 612               	/* prologue: function */
 613               	/* frame size = 0 */
 614               	/* stack size = 2 */
 615               	.L__stack_usage = 2
 616 00a6 BC01      		movw r22,r24
 200:../../freeRtos/Lib/net/tcp.c ****   nicState.layer4.tcp->tcpchksum = 0;
 618               	.LM16:
 619 00a8 C091 0000 		lds r28,nicState+12
 620 00ac D091 0000 		lds r29,nicState+12+1
 621 00b0 188A      		std Y+16,__zero_reg__
 622 00b2 198A      		std Y+17,__zero_reg__
 201:../../freeRtos/Lib/net/tcp.c ****   nicState.layer4.tcp->tcpchksum = netChecksum(nicState.layer4.tcp, tcpLen); //TODO finish it
 624               	.LM17:
 625 00b4 CE01      		movw r24,r28
 626 00b6 0E94 0000 		call netChecksum
 627 00ba 888B      		std Y+16,r24
 628 00bc 998B      		std Y+17,r25
 629               	/* epilogue start */
 202:../../freeRtos/Lib/net/tcp.c **** }
 631               	.LM18:
 632 00be DF91      		pop r29
 633 00c0 CF91      		pop r28
 634 00c2 0895      		ret
 636               	.Lscope2:
 638               		.stabd	78,0,0
 640               	.global	processTcpPacket
 642               	processTcpPacket:
 643               		.stabd	46,0,0
  96:../../freeRtos/Lib/net/tcp.c **** {
 645               	.LM19:
 646               	.LFBB3:
 647 00c4 AF92      		push r10
 648 00c6 BF92      		push r11
 649 00c8 CF92      		push r12
 650 00ca DF92      		push r13
 651 00cc EF92      		push r14
 652 00ce FF92      		push r15
 653 00d0 0F93      		push r16
 654 00d2 1F93      		push r17
 655 00d4 CF93      		push r28
 656 00d6 DF93      		push r29
 657               	/* prologue: function */
 658               	/* frame size = 0 */
 659               	/* stack size = 10 */
 660               	.L__stack_usage = 10
 661               	.LBB21:
 662               	.LBB22:
  49:../../freeRtos/Lib/net/tcp.c ****   struct TcpIpSocket *result = sockets;
 664               	.LM20:
 665 00d8 E091 0000 		lds r30,sockets
 666 00dc F091 0000 		lds r31,sockets+1
  54:../../freeRtos/Lib/net/tcp.c ****       && (result->RemoteIpAddr == nicState.layer3.ip->srcipaddr) && (result->localPort == nicState.
 668               	.LM21:
 669 00e0 0091 0000 		lds r16,nicState+10
 670 00e4 1091 0000 		lds r17,nicState+10+1
 671 00e8 6091 0000 		lds r22,nicState+12
 672 00ec 7091 0000 		lds r23,nicState+12+1
  49:../../freeRtos/Lib/net/tcp.c ****   struct TcpIpSocket *result = sockets;
 674               	.LM22:
 675 00f0 EF01      		movw r28,r30
  51:../../freeRtos/Lib/net/tcp.c ****   for (i=0; i<NUMBER_OF_SOCKETS; i++)
 677               	.LM23:
 678 00f2 EE24      		clr r14
 679               	.L11:
  53:../../freeRtos/Lib/net/tcp.c ****     if ( ((result->state != LISTEN) && (result->state != CLOSED)) 
 681               	.LM24:
 682 00f4 F880      		ld r15,Y
 683 00f6 8F2D      		mov r24,r15
 684 00f8 8230      		cpi r24,lo8(2)
 685 00fa 00F4      		brsh .+2
 686 00fc 00C0      		rjmp .L8
  54:../../freeRtos/Lib/net/tcp.c ****       && (result->RemoteIpAddr == nicState.layer3.ip->srcipaddr) && (result->localPort == nicState.
 688               	.LM25:
 689 00fe 2981      		ldd r18,Y+1
 690 0100 3A81      		ldd r19,Y+2
 691 0102 4B81      		ldd r20,Y+3
 692 0104 5C81      		ldd r21,Y+4
 693 0106 D801      		movw r26,r16
 694 0108 1C96      		adiw r26,12
 695 010a AD90      		ld r10,X+
 696 010c BD90      		ld r11,X+
 697 010e CD90      		ld r12,X+
 698 0110 DC90      		ld r13,X
 699 0112 1F97      		sbiw r26,12+3
 700 0114 2A15      		cp r18,r10
 701 0116 3B05      		cpc r19,r11
 702 0118 4C05      		cpc r20,r12
 703 011a 5D05      		cpc r21,r13
 704 011c 01F4      		brne .L8
 705 011e 2D81      		ldd r18,Y+5
 706 0120 3E81      		ldd r19,Y+6
 707 0122 DB01      		movw r26,r22
 708 0124 1296      		adiw r26,2
 709 0126 8D91      		ld r24,X+
 710 0128 9C91      		ld r25,X
 711 012a 1397      		sbiw r26,2+1
 712 012c 2817      		cp r18,r24
 713 012e 3907      		cpc r19,r25
 714 0130 01F4      		brne .L8
 715 0132 2F81      		ldd r18,Y+7
 716 0134 3885      		ldd r19,Y+8
 717 0136 8D91      		ld r24,X+
 718 0138 9C91      		ld r25,X
 719 013a 1197      		sbiw r26,1
 720 013c 2817      		cp r18,r24
 721 013e 3907      		cpc r19,r25
 722 0140 01F4      		brne .L8
  57:../../freeRtos/Lib/net/tcp.c ****       if (tcpDebugStream != NULL)
 724               	.LM26:
 725 0142 8091 0000 		lds r24,tcpDebugStream
 726 0146 9091 0000 		lds r25,tcpDebugStream+1
 727 014a 0097      		sbiw r24,0
 728 014c 01F4      		brne .+2
 729 014e 00C0      		rjmp .L9
  58:../../freeRtos/Lib/net/tcp.c ****         if (tcpDebugLevel > 2)
 731               	.LM27:
 732 0150 2091 0000 		lds r18,tcpDebugLevel
 733 0154 2330      		cpi r18,lo8(3)
 734 0156 00F4      		brsh .+2
 735 0158 00C0      		rjmp .L9
  59:../../freeRtos/Lib/net/tcp.c ****           fprintf_P(tcpDebugStream, PSTR("Found TCP socket state %d\r\n"), result->state);
 737               	.LM28:
 738 015a 00D0      		rcall .
 739 015c 00D0      		rcall .
 740 015e EDB7      		in r30,__SP_L__
 741 0160 FEB7      		in r31,__SP_H__
 742 0162 3196      		adiw r30,1
 743 0164 ADB7      		in r26,__SP_L__
 744 0166 BEB7      		in r27,__SP_H__
 745 0168 1196      		adiw r26,1
 746 016a 8D93      		st X+,r24
 747 016c 9C93      		st X,r25
 748 016e 1297      		sbiw r26,1+1
 749 0170 80E0      		ldi r24,lo8(__c.4230)
 750 0172 90E0      		ldi r25,hi8(__c.4230)
 751 0174 8283      		std Z+2,r24
 752 0176 9383      		std Z+3,r25
 753 0178 F482      		std Z+4,r15
 754 017a 1582      		std Z+5,__zero_reg__
 755 017c 0E94 0000 		call fprintf_P
 756 0180 EDB7      		in r30,__SP_L__
 757 0182 FEB7      		in r31,__SP_H__
 758 0184 3696      		adiw r30,6
 759 0186 EDBF      		out __SP_L__,r30
 760 0188 FEBF      		out __SP_H__,r31
 761 018a 00C0      		rjmp .L9
 762               	.L8:
  51:../../freeRtos/Lib/net/tcp.c ****   for (i=0; i<NUMBER_OF_SOCKETS; i++)
 764               	.LM29:
 765 018c E394      		inc r14
 766 018e 8E2D      		mov r24,r14
 767 0190 8431      		cpi r24,lo8(20)
 768 0192 01F0      		breq .L21
  63:../../freeRtos/Lib/net/tcp.c ****     result++;
 770               	.LM30:
 771 0194 6C96      		adiw r28,28
 772 0196 00C0      		rjmp .L11
 773               	.L21:
  67:../../freeRtos/Lib/net/tcp.c ****   for (i=0; i<NUMBER_OF_SOCKETS; i++)
 775               	.LM31:
 776 0198 00E0      		ldi r16,lo8(0)
 777               	.L10:
  69:../../freeRtos/Lib/net/tcp.c ****     if ((result->state == LISTEN) && (result->localPort == nicState.layer4.tcp->destport))
 779               	.LM32:
 780 019a 8081      		ld r24,Z
 781 019c 8130      		cpi r24,lo8(1)
 782 019e 01F4      		brne .L12
 783 01a0 4581      		ldd r20,Z+5
 784 01a2 5681      		ldd r21,Z+6
 785 01a4 DB01      		movw r26,r22
 786 01a6 1296      		adiw r26,2
 787 01a8 2D91      		ld r18,X+
 788 01aa 3C91      		ld r19,X
 789 01ac 1397      		sbiw r26,2+1
 790 01ae 4217      		cp r20,r18
 791 01b0 5307      		cpc r21,r19
 792 01b2 01F4      		brne .L12
  72:../../freeRtos/Lib/net/tcp.c ****       if (tcpDebugStream != NULL)
 794               	.LM33:
 795 01b4 8091 0000 		lds r24,tcpDebugStream
 796 01b8 9091 0000 		lds r25,tcpDebugStream+1
 797 01bc 0097      		sbiw r24,0
 798 01be 01F0      		breq .L13
  73:../../freeRtos/Lib/net/tcp.c ****         if (tcpDebugLevel > 2)
 800               	.LM34:
 801 01c0 2091 0000 		lds r18,tcpDebugLevel
 802 01c4 2330      		cpi r18,lo8(3)
 803 01c6 00F0      		brlo .L13
  74:../../freeRtos/Lib/net/tcp.c ****           fprintf_P(tcpDebugStream, PSTR("Found TCP socket no %d state LISTEN\r\n"), i);
 805               	.LM35:
 806 01c8 00D0      		rcall .
 807 01ca 00D0      		rcall .
 808 01cc EDB7      		in r30,__SP_L__
 809 01ce FEB7      		in r31,__SP_H__
 810 01d0 3196      		adiw r30,1
 811 01d2 ADB7      		in r26,__SP_L__
 812 01d4 BEB7      		in r27,__SP_H__
 813 01d6 1196      		adiw r26,1
 814 01d8 8D93      		st X+,r24
 815 01da 9C93      		st X,r25
 816 01dc 1297      		sbiw r26,1+1
 817 01de 20E0      		ldi r18,lo8(__c.4235)
 818 01e0 30E0      		ldi r19,hi8(__c.4235)
 819 01e2 2283      		std Z+2,r18
 820 01e4 3383      		std Z+3,r19
 821 01e6 0483      		std Z+4,r16
 822 01e8 1582      		std Z+5,__zero_reg__
 823 01ea 0E94 0000 		call fprintf_P
 824 01ee EDB7      		in r30,__SP_L__
 825 01f0 FEB7      		in r31,__SP_H__
 826 01f2 3696      		adiw r30,6
 827 01f4 EDBF      		out __SP_L__,r30
 828 01f6 FEBF      		out __SP_H__,r31
 829               	.L13:
  76:../../freeRtos/Lib/net/tcp.c ****       return &sockets[i];
 831               	.LM36:
 832 01f8 8CE1      		ldi r24,lo8(28)
 833 01fa 089F      		mul r16,r24
 834 01fc C001      		movw r24,r0
 835 01fe 1124      		clr r1
 836 0200 C091 0000 		lds r28,sockets
 837 0204 D091 0000 		lds r29,sockets+1
 838 0208 C80F      		add r28,r24
 839 020a D91F      		adc r29,r25
 840 020c 00C0      		rjmp .L9
 841               	.L12:
  67:../../freeRtos/Lib/net/tcp.c ****   for (i=0; i<NUMBER_OF_SOCKETS; i++)
 843               	.LM37:
 844 020e 0F5F      		subi r16,lo8(-(1))
 845 0210 0431      		cpi r16,lo8(20)
 846 0212 01F0      		breq .L14
  78:../../freeRtos/Lib/net/tcp.c ****     result++;
 848               	.LM38:
 849 0214 7C96      		adiw r30,28
 850 0216 00C0      		rjmp .L10
 851               	.L14:
  81:../../freeRtos/Lib/net/tcp.c ****   if (tcpDebugStream != NULL)
 853               	.LM39:
 854 0218 C091 0000 		lds r28,tcpDebugStream
 855 021c D091 0000 		lds r29,tcpDebugStream+1
 856 0220 2097      		sbiw r28,0
 857 0222 01F4      		brne .+2
 858 0224 00C0      		rjmp .L24
  82:../../freeRtos/Lib/net/tcp.c ****     if (tcpDebugLevel > 2)
 860               	.LM40:
 861 0226 8091 0000 		lds r24,tcpDebugLevel
 862 022a 8330      		cpi r24,lo8(3)
 863 022c 00F4      		brsh .+2
 864 022e 00C0      		rjmp .L24
  83:../../freeRtos/Lib/net/tcp.c ****       fprintf_P(tcpDebugStream, PSTR("Can't find TCP socket with localPort %d\r\n"), htons(nicState
 866               	.LM41:
 867 0230 DB01      		movw r26,r22
 868 0232 1296      		adiw r26,2
 869 0234 8D91      		ld r24,X+
 870 0236 9C91      		ld r25,X
 871 0238 1397      		sbiw r26,2+1
 872 023a 0E94 0000 		call htons
 873 023e 00D0      		rcall .
 874 0240 00D0      		rcall .
 875 0242 EDB7      		in r30,__SP_L__
 876 0244 FEB7      		in r31,__SP_H__
 877 0246 3196      		adiw r30,1
 878 0248 ADB7      		in r26,__SP_L__
 879 024a BEB7      		in r27,__SP_H__
 880 024c 1196      		adiw r26,1
 881 024e CD93      		st X+,r28
 882 0250 DC93      		st X,r29
 883 0252 1297      		sbiw r26,1+1
 884 0254 20E0      		ldi r18,lo8(__c.4240)
 885 0256 30E0      		ldi r19,hi8(__c.4240)
 886 0258 2283      		std Z+2,r18
 887 025a 3383      		std Z+3,r19
 888 025c 8483      		std Z+4,r24
 889 025e 9583      		std Z+5,r25
 890 0260 0E94 0000 		call fprintf_P
 891 0264 EDB7      		in r30,__SP_L__
 892 0266 FEB7      		in r31,__SP_H__
 893 0268 3696      		adiw r30,6
 894 026a EDBF      		out __SP_L__,r30
 895 026c FEBF      		out __SP_H__,r31
 896 026e 00C0      		rjmp .L24
 897               	.L9:
 898               	.LBE22:
 899               	.LBE21:
  99:../../freeRtos/Lib/net/tcp.c ****   if (socket == NULL)
 901               	.LM42:
 902 0270 2097      		sbiw r28,0
 903 0272 01F4      		brne .+2
 904 0274 00C0      		rjmp .L24
 103:../../freeRtos/Lib/net/tcp.c ****   socket->seqNoLastReceived = htonl(nicState.layer4.tcp->seqno);
 906               	.LM43:
 907 0276 E091 0000 		lds r30,nicState+12
 908 027a F091 0000 		lds r31,nicState+12+1
 909 027e 6481      		ldd r22,Z+4
 910 0280 7581      		ldd r23,Z+5
 911 0282 8681      		ldd r24,Z+6
 912 0284 9781      		ldd r25,Z+7
 913 0286 0E94 0000 		call htonl
 914 028a 6987      		std Y+9,r22
 915 028c 7A87      		std Y+10,r23
 916 028e 8B87      		std Y+11,r24
 917 0290 9C87      		std Y+12,r25
 105:../../freeRtos/Lib/net/tcp.c ****   if (socket->state == LISTEN)
 919               	.LM44:
 920 0292 8881      		ld r24,Y
 921 0294 8130      		cpi r24,lo8(1)
 922 0296 01F0      		breq .+2
 923 0298 00C0      		rjmp .L16
 107:../../freeRtos/Lib/net/tcp.c ****     if (nicState.layer4.tcp->flags & TCP_FLAGS_SYN)
 925               	.LM45:
 926 029a E091 0000 		lds r30,nicState+12
 927 029e F091 0000 		lds r31,nicState+12+1
 928 02a2 2585      		ldd r18,Z+13
 929 02a4 8091 0000 		lds r24,tcpDebugStream
 930 02a8 9091 0000 		lds r25,tcpDebugStream+1
 931 02ac 21FF      		sbrs r18,1
 932 02ae 00C0      		rjmp .L17
 112:../../freeRtos/Lib/net/tcp.c ****       if (tcpDebugStream != NULL)
 934               	.LM46:
 935 02b0 0097      		sbiw r24,0
 936 02b2 01F0      		breq .L18
 113:../../freeRtos/Lib/net/tcp.c ****         if (tcpDebugLevel > 2)
 938               	.LM47:
 939 02b4 2091 0000 		lds r18,tcpDebugLevel
 940 02b8 2330      		cpi r18,lo8(3)
 941 02ba 00F0      		brlo .L18
 114:../../freeRtos/Lib/net/tcp.c ****           fprintf_P(tcpDebugStream, PSTR("Opening TCP connection socket state change LISTEN->SYN_RE
 943               	.LM48:
 944 02bc 00D0      		rcall .
 945 02be 0F92      		push __tmp_reg__
 946 02c0 ADB7      		in r26,__SP_L__
 947 02c2 BEB7      		in r27,__SP_H__
 948 02c4 1196      		adiw r26,1
 949 02c6 8D93      		st X+,r24
 950 02c8 9C93      		st X,r25
 951 02ca 1297      		sbiw r26,1+1
 952 02cc 80E0      		ldi r24,lo8(__c.4249)
 953 02ce 90E0      		ldi r25,hi8(__c.4249)
 954 02d0 1396      		adiw r26,3
 955 02d2 8D93      		st X+,r24
 956 02d4 9C93      		st X,r25
 957 02d6 1497      		sbiw r26,3+1
 958 02d8 0E94 0000 		call fprintf_P
 959 02dc 0F90      		pop __tmp_reg__
 960 02de 0F90      		pop __tmp_reg__
 961 02e0 0F90      		pop __tmp_reg__
 962 02e2 0F90      		pop __tmp_reg__
 963               	.L18:
 964               	.LBB23:
 965               	.LBB24:
  90:../../freeRtos/Lib/net/tcp.c ****   sck->state        = SYN_RECEIVED;
 967               	.LM49:
 968 02e4 82E0      		ldi r24,lo8(2)
 969 02e6 8883      		st Y,r24
  91:../../freeRtos/Lib/net/tcp.c ****   sck->remotePort   = nicState.layer4.tcp->srcport;
 971               	.LM50:
 972 02e8 E091 0000 		lds r30,nicState+12
 973 02ec F091 0000 		lds r31,nicState+12+1
 974 02f0 2081      		ld r18,Z
 975 02f2 3181      		ldd r19,Z+1
 976 02f4 2F83      		std Y+7,r18
 977 02f6 3887      		std Y+8,r19
  92:../../freeRtos/Lib/net/tcp.c ****   sck->RemoteIpAddr = nicState.layer3.ip->srcipaddr;
 979               	.LM51:
 980 02f8 E091 0000 		lds r30,nicState+10
 981 02fc F091 0000 		lds r31,nicState+10+1
 982 0300 8485      		ldd r24,Z+12
 983 0302 9585      		ldd r25,Z+13
 984 0304 A685      		ldd r26,Z+14
 985 0306 B785      		ldd r27,Z+15
 986 0308 8983      		std Y+1,r24
 987 030a 9A83      		std Y+2,r25
 988 030c AB83      		std Y+3,r26
 989 030e BC83      		std Y+4,r27
 990               	.LBE24:
 991               	.LBE23:
 118:../../freeRtos/Lib/net/tcp.c ****       nicState.layer4.tcp->srcport   = socket->localPort;
 993               	.LM52:
 994 0310 E091 0000 		lds r30,nicState+12
 995 0314 F091 0000 		lds r31,nicState+12+1
 996 0318 8D81      		ldd r24,Y+5
 997 031a 9E81      		ldd r25,Y+6
 998 031c 8083      		st Z,r24
 999 031e 9183      		std Z+1,r25
 119:../../freeRtos/Lib/net/tcp.c ****       nicState.layer4.tcp->destport  = socket->remotePort;
 1001               	.LM53:
 1002 0320 E091 0000 		lds r30,nicState+12
 1003 0324 F091 0000 		lds r31,nicState+12+1
 1004 0328 2283      		std Z+2,r18
 1005 032a 3383      		std Z+3,r19
 120:../../freeRtos/Lib/net/tcp.c ****       nicState.layer4.tcp->seqno     = htonl(socket->seqNoLastSent);
 1007               	.LM54:
 1008 032c 0091 0000 		lds r16,nicState+12
 1009 0330 1091 0000 		lds r17,nicState+12+1
 1010 0334 6D85      		ldd r22,Y+13
 1011 0336 7E85      		ldd r23,Y+14
 1012 0338 8F85      		ldd r24,Y+15
 1013 033a 9889      		ldd r25,Y+16
 1014 033c 0E94 0000 		call htonl
 1015 0340 F801      		movw r30,r16
 1016 0342 6483      		std Z+4,r22
 1017 0344 7583      		std Z+5,r23
 1018 0346 8683      		std Z+6,r24
 1019 0348 9783      		std Z+7,r25
 121:../../freeRtos/Lib/net/tcp.c ****       nicState.layer4.tcp->ackno     = htonl(socket->seqNoLastReceived+1);
 1021               	.LM55:
 1022 034a 0091 0000 		lds r16,nicState+12
 1023 034e 1091 0000 		lds r17,nicState+12+1
 1024 0352 6985      		ldd r22,Y+9
 1025 0354 7A85      		ldd r23,Y+10
 1026 0356 8B85      		ldd r24,Y+11
 1027 0358 9C85      		ldd r25,Y+12
 1028 035a 6F5F      		subi r22,lo8(-(1))
 1029 035c 7F4F      		sbci r23,hi8(-(1))
 1030 035e 8F4F      		sbci r24,hlo8(-(1))
 1031 0360 9F4F      		sbci r25,hhi8(-(1))
 1032 0362 0E94 0000 		call htonl
 1033 0366 D801      		movw r26,r16
 1034 0368 1896      		adiw r26,8
 1035 036a 6D93      		st X+,r22
 1036 036c 7D93      		st X+,r23
 1037 036e 8D93      		st X+,r24
 1038 0370 9C93      		st X,r25
 1039 0372 1B97      		sbiw r26,8+3
 122:../../freeRtos/Lib/net/tcp.c ****       nicState.layer4.tcp->tcpoffset = 5<<4;
 1041               	.LM56:
 1042 0374 E091 0000 		lds r30,nicState+12
 1043 0378 F091 0000 		lds r31,nicState+12+1
 1044 037c 80E5      		ldi r24,lo8(80)
 1045 037e 8487      		std Z+12,r24
 123:../../freeRtos/Lib/net/tcp.c ****       nicState.layer4.tcp->flags     = TCP_FLAGS_ACK+TCP_FLAGS_SYN;
 1047               	.LM57:
 1048 0380 E091 0000 		lds r30,nicState+12
 1049 0384 F091 0000 		lds r31,nicState+12+1
 1050 0388 82E1      		ldi r24,lo8(18)
 1051 038a 8587      		std Z+13,r24
 124:../../freeRtos/Lib/net/tcp.c ****       nicState.layer4.tcp->wnd       = htons(100);
 1053               	.LM58:
 1054 038c 0091 0000 		lds r16,nicState+12
 1055 0390 1091 0000 		lds r17,nicState+12+1
 1056 0394 84E6      		ldi r24,lo8(100)
 1057 0396 90E0      		ldi r25,hi8(100)
 1058 0398 0E94 0000 		call htons
 1059 039c F801      		movw r30,r16
 1060 039e 8687      		std Z+14,r24
 1061 03a0 9787      		std Z+15,r25
 125:../../freeRtos/Lib/net/tcp.c ****       nicState.layer4.tcp->tcpchksum = 0;
 1063               	.LM59:
 1064 03a2 E091 0000 		lds r30,nicState+12
 1065 03a6 F091 0000 		lds r31,nicState+12+1
 1066 03aa 108A      		std Z+16,__zero_reg__
 1067 03ac 118A      		std Z+17,__zero_reg__
 126:../../freeRtos/Lib/net/tcp.c ****       nicState.layer4.tcp->urgp      = 0;
 1069               	.LM60:
 1070 03ae 128A      		std Z+18,__zero_reg__
 1071 03b0 138A      		std Z+19,__zero_reg__
 127:../../freeRtos/Lib/net/tcp.c ****       calculateTcpChecksun(TCP_HEADER_LEN);
 1073               	.LM61:
 1074 03b2 84E1      		ldi r24,lo8(20)
 1075 03b4 90E0      		ldi r25,hi8(20)
 1076 03b6 0E94 0000 		call calculateTcpChecksun
 129:../../freeRtos/Lib/net/tcp.c ****       socket->seqNoLastSent++;
 1078               	.LM62:
 1079 03ba 8D85      		ldd r24,Y+13
 1080 03bc 9E85      		ldd r25,Y+14
 1081 03be AF85      		ldd r26,Y+15
 1082 03c0 B889      		ldd r27,Y+16
 1083 03c2 0196      		adiw r24,1
 1084 03c4 A11D      		adc r26,__zero_reg__
 1085 03c6 B11D      		adc r27,__zero_reg__
 1086 03c8 8D87      		std Y+13,r24
 1087 03ca 9E87      		std Y+14,r25
 1088 03cc AF87      		std Y+15,r26
 1089 03ce B88B      		std Y+16,r27
 130:../../freeRtos/Lib/net/tcp.c ****       ipSend(socket->RemoteIpAddr, IP_PROTO_TCP, TCP_HEADER_LEN);
 1091               	.LM63:
 1092 03d0 6981      		ldd r22,Y+1
 1093 03d2 7A81      		ldd r23,Y+2
 1094 03d4 8B81      		ldd r24,Y+3
 1095 03d6 9C81      		ldd r25,Y+4
 1096 03d8 46E0      		ldi r20,lo8(6)
 1097 03da 24E1      		ldi r18,lo8(20)
 1098 03dc 30E0      		ldi r19,hi8(20)
 1099 03de 0E94 0000 		call ipSend
 1100 03e2 00C0      		rjmp .L32
 1101               	.L17:
 135:../../freeRtos/Lib/net/tcp.c ****       if (tcpDebugStream != NULL)
 1103               	.LM64:
 1104 03e4 0097      		sbiw r24,0
 1105 03e6 01F4      		brne .+2
 1106 03e8 00C0      		rjmp .L32
 136:../../freeRtos/Lib/net/tcp.c ****         if (tcpDebugLevel > 1)
 1108               	.LM65:
 1109 03ea 2091 0000 		lds r18,tcpDebugLevel
 1110 03ee 2230      		cpi r18,lo8(2)
 1111 03f0 00F4      		brsh .+2
 1112 03f2 00C0      		rjmp .L32
 137:../../freeRtos/Lib/net/tcp.c ****           fprintf_P(tcpDebugStream, PSTR("Opening TCP connection ERROR: syn flag wasn't set\r\n"));
 1114               	.LM66:
 1115 03f4 00D0      		rcall .
 1116 03f6 0F92      		push __tmp_reg__
 1117 03f8 ADB7      		in r26,__SP_L__
 1118 03fa BEB7      		in r27,__SP_H__
 1119 03fc 1196      		adiw r26,1
 1120 03fe 8D93      		st X+,r24
 1121 0400 9C93      		st X,r25
 1122 0402 1297      		sbiw r26,1+1
 1123 0404 80E0      		ldi r24,lo8(__c.4251)
 1124 0406 90E0      		ldi r25,hi8(__c.4251)
 1125 0408 00C0      		rjmp .L34
 1126               	.L16:
 143:../../freeRtos/Lib/net/tcp.c ****   if (socket->state == SYN_RECEIVED)
 1128               	.LM67:
 1129 040a 8230      		cpi r24,lo8(2)
 1130 040c 01F0      		breq .+2
 1131 040e 00C0      		rjmp .L19
 145:../../freeRtos/Lib/net/tcp.c ****     if (nicState.layer4.tcp->flags & TCP_FLAGS_ACK)
 1133               	.LM68:
 1134 0410 E091 0000 		lds r30,nicState+12
 1135 0414 F091 0000 		lds r31,nicState+12+1
 1136 0418 2585      		ldd r18,Z+13
 1137 041a 8091 0000 		lds r24,tcpDebugStream
 1138 041e 9091 0000 		lds r25,tcpDebugStream+1
 1139 0422 24FF      		sbrs r18,4
 1140 0424 00C0      		rjmp .L20
 147:../../freeRtos/Lib/net/tcp.c ****       socket->state    = ESTABILISHED;
 1142               	.LM69:
 1143 0426 23E0      		ldi r18,lo8(3)
 1144 0428 2883      		st Y,r18
 149:../../freeRtos/Lib/net/tcp.c ****     if (tcpDebugStream != NULL)
 1146               	.LM70:
 1147 042a 0097      		sbiw r24,0
 1148 042c 01F4      		brne .+2
 1149 042e 00C0      		rjmp .L32
 150:../../freeRtos/Lib/net/tcp.c ****       if (tcpDebugLevel > 2)
 1151               	.LM71:
 1152 0430 2091 0000 		lds r18,tcpDebugLevel
 1153 0434 2330      		cpi r18,lo8(3)
 1154 0436 00F4      		brsh .+2
 1155 0438 00C0      		rjmp .L32
 151:../../freeRtos/Lib/net/tcp.c ****         fprintf_P(tcpDebugStream, PSTR("Opening TCP connection socket state change SYN_RECEIVED->ES
 1157               	.LM72:
 1158 043a 00D0      		rcall .
 1159 043c 0F92      		push __tmp_reg__
 1160 043e EDB7      		in r30,__SP_L__
 1161 0440 FEB7      		in r31,__SP_H__
 1162 0442 8183      		std Z+1,r24
 1163 0444 9283      		std Z+2,r25
 1164 0446 80E0      		ldi r24,lo8(__c.4253)
 1165 0448 90E0      		ldi r25,hi8(__c.4253)
 1166 044a 8383      		std Z+3,r24
 1167 044c 9483      		std Z+4,r25
 1168 044e 00C0      		rjmp .L33
 1169               	.L20:
 157:../../freeRtos/Lib/net/tcp.c ****       socket->state = LISTEN;
 1171               	.LM73:
 1172 0450 21E0      		ldi r18,lo8(1)
 1173 0452 2883      		st Y,r18
 159:../../freeRtos/Lib/net/tcp.c ****       if (tcpDebugStream != NULL)
 1175               	.LM74:
 1176 0454 0097      		sbiw r24,0
 1177 0456 01F4      		brne .+2
 1178 0458 00C0      		rjmp .L32
 160:../../freeRtos/Lib/net/tcp.c ****         if (tcpDebugLevel > 1)
 1180               	.LM75:
 1181 045a 2091 0000 		lds r18,tcpDebugLevel
 1182 045e 2230      		cpi r18,lo8(2)
 1183 0460 00F4      		brsh .+2
 1184 0462 00C0      		rjmp .L32
 161:../../freeRtos/Lib/net/tcp.c ****           fprintf_P(tcpDebugStream, PSTR("Opening TCP connection ERROR: ack flag wasn't set\r\n"));
 1186               	.LM76:
 1187 0464 00D0      		rcall .
 1188 0466 0F92      		push __tmp_reg__
 1189 0468 ADB7      		in r26,__SP_L__
 1190 046a BEB7      		in r27,__SP_H__
 1191 046c 1196      		adiw r26,1
 1192 046e 8D93      		st X+,r24
 1193 0470 9C93      		st X,r25
 1194 0472 1297      		sbiw r26,1+1
 1195 0474 80E0      		ldi r24,lo8(__c.4255)
 1196 0476 90E0      		ldi r25,hi8(__c.4255)
 1197               	.L34:
 1198 0478 1396      		adiw r26,3
 1199 047a 8D93      		st X+,r24
 1200 047c 9C93      		st X,r25
 1201 047e 1497      		sbiw r26,3+1
 1202               	.L33:
 1203 0480 0E94 0000 		call fprintf_P
 1204 0484 0F90      		pop __tmp_reg__
 1205 0486 0F90      		pop __tmp_reg__
 1206 0488 0F90      		pop __tmp_reg__
 1207 048a 0F90      		pop __tmp_reg__
 1208 048c 00C0      		rjmp .L32
 1209               	.L19:
 168:../../freeRtos/Lib/net/tcp.c ****   if (socket->state == ESTABILISHED)
 1211               	.LM77:
 1212 048e 8330      		cpi r24,lo8(3)
 1213 0490 01F4      		brne .L32
 170:../../freeRtos/Lib/net/tcp.c ****     if (nicState.layer4.tcp->flags & TCP_FLAGS_FIN)  //ESTABILISHED -> CLOSE_WAIT -> closed
 1215               	.LM78:
 1216 0492 E091 0000 		lds r30,nicState+12
 1217 0496 F091 0000 		lds r31,nicState+12+1
 1218 049a 8585      		ldd r24,Z+13
 1219 049c 80FF      		sbrs r24,0
 1220 049e 00C0      		rjmp .L32
 1221               	.LBB25:
 172:../../freeRtos/Lib/net/tcp.c ****       socket->timer              = timer100Hz;
 1223               	.LM79:
 1224 04a0 8091 0000 		lds r24,timer100Hz
 1225 04a4 8D8B      		std Y+21,r24
 173:../../freeRtos/Lib/net/tcp.c ****       nicState.layer4.tcp->flags = TCP_FLAGS_ACK;
 1227               	.LM80:
 1228 04a6 80E1      		ldi r24,lo8(16)
 1229 04a8 8587      		std Z+13,r24
 182:../../freeRtos/Lib/net/tcp.c ****       ipSend(socket->RemoteIpAddr, IP_PROTO_TCP, TCP_HEADER_LEN + dataFromBufLen);
 1231               	.LM81:
 1232 04aa 6981      		ldd r22,Y+1
 1233 04ac 7A81      		ldd r23,Y+2
 1234 04ae 8B81      		ldd r24,Y+3
 1235 04b0 9C81      		ldd r25,Y+4
 1236 04b2 46E0      		ldi r20,lo8(6)
 1237 04b4 24E1      		ldi r18,lo8(20)
 1238 04b6 30E0      		ldi r19,hi8(20)
 1239 04b8 0E94 0000 		call ipSend
 183:../../freeRtos/Lib/net/tcp.c ****       socket->state    = CLOSE_WAIT;
 1241               	.LM82:
 1242 04bc 84E0      		ldi r24,lo8(4)
 1243 04be 8883      		st Y,r24
 186:../../freeRtos/Lib/net/tcp.c ****       nicState.layer4.tcp->flags = TCP_FLAGS_FIN;
 1245               	.LM83:
 1246 04c0 E091 0000 		lds r30,nicState+12
 1247 04c4 F091 0000 		lds r31,nicState+12+1
 1248 04c8 81E0      		ldi r24,lo8(1)
 1249 04ca 8587      		std Z+13,r24
 187:../../freeRtos/Lib/net/tcp.c ****       ipSend(socket->RemoteIpAddr, IP_PROTO_TCP, TCP_HEADER_LEN);
 1251               	.LM84:
 1252 04cc 6981      		ldd r22,Y+1
 1253 04ce 7A81      		ldd r23,Y+2
 1254 04d0 8B81      		ldd r24,Y+3
 1255 04d2 9C81      		ldd r25,Y+4
 1256 04d4 46E0      		ldi r20,lo8(6)
 1257 04d6 24E1      		ldi r18,lo8(20)
 1258 04d8 30E0      		ldi r19,hi8(20)
 1259 04da 0E94 0000 		call ipSend
 188:../../freeRtos/Lib/net/tcp.c ****       socket->state    = LAST_ACK;
 1261               	.LM85:
 1262 04de 85E0      		ldi r24,lo8(5)
 1263 04e0 8883      		st Y,r24
 1264 04e2 00C0      		rjmp .L32
 1265               	.L24:
 1266               	.LBE25:
 100:../../freeRtos/Lib/net/tcp.c ****     return 1;
 1268               	.LM86:
 1269 04e4 81E0      		ldi r24,lo8(1)
 1270 04e6 00C0      		rjmp .L15
 1271               	.L32:
 190:../../freeRtos/Lib/net/tcp.c ****     return 0;
 1273               	.LM87:
 1274 04e8 80E0      		ldi r24,lo8(0)
 1275               	.L15:
 1276               	/* epilogue start */
 196:../../freeRtos/Lib/net/tcp.c **** }
 1278               	.LM88:
 1279 04ea DF91      		pop r29
 1280 04ec CF91      		pop r28
 1281 04ee 1F91      		pop r17
 1282 04f0 0F91      		pop r16
 1283 04f2 FF90      		pop r15
 1284 04f4 EF90      		pop r14
 1285 04f6 DF90      		pop r13
 1286 04f8 CF90      		pop r12
 1287 04fa BF90      		pop r11
 1288 04fc AF90      		pop r10
 1289 04fe 0895      		ret
 1291               	.Lscope3:
 1293               		.stabd	78,0,0
 1296               	.global	sendTcBuffer
 1298               	sendTcBuffer:
 1299               		.stabd	46,0,0
 203:../../freeRtos/Lib/net/tcp.c **** 
 204:../../freeRtos/Lib/net/tcp.c **** 
 205:../../freeRtos/Lib/net/tcp.c **** 
 206:../../freeRtos/Lib/net/tcp.c **** uint8_t sendTcBuffer(uint8_t socketNo)
 207:../../freeRtos/Lib/net/tcp.c **** {
 1301               	.LM89:
 1302               	.LFBB4:
 1303               	/* prologue: function */
 1304               	/* frame size = 0 */
 1305               	/* stack size = 0 */
 1306               	.L__stack_usage = 0
 208:../../freeRtos/Lib/net/tcp.c ****   struct TcpIpSocket *sck = &sockets[socketNo];
 209:../../freeRtos/Lib/net/tcp.c ****   return 0;
 210:../../freeRtos/Lib/net/tcp.c **** }
 1308               	.LM90:
 1309 0500 80E0      		ldi r24,lo8(0)
 1310               	/* epilogue start */
 1311 0502 0895      		ret
 1313               	.Lscope4:
 1315               		.stabd	78,0,0
 1317               	.global	netstackTCPIPProcess
 1319               	netstackTCPIPProcess:
 1320               		.stabd	46,0,0
 211:../../freeRtos/Lib/net/tcp.c **** 
 212:../../freeRtos/Lib/net/tcp.c **** void netstackTCPIPProcess(void)
 213:../../freeRtos/Lib/net/tcp.c **** {
 1322               	.LM91:
 1323               	.LFBB5:
 1324 0504 CF93      		push r28
 1325 0506 DF93      		push r29
 1326               	/* prologue: function */
 1327               	/* frame size = 0 */
 1328               	/* stack size = 2 */
 1329               	.L__stack_usage = 2
 214:../../freeRtos/Lib/net/tcp.c ****   if (nicState.layer4.tcp->destport == htons(80))
 1331               	.LM92:
 1332 0508 E091 0000 		lds r30,nicState+12
 1333 050c F091 0000 		lds r31,nicState+12+1
 1334 0510 C281      		ldd r28,Z+2
 1335 0512 D381      		ldd r29,Z+3
 1336 0514 80E5      		ldi r24,lo8(80)
 1337 0516 90E0      		ldi r25,hi8(80)
 1338 0518 0E94 0000 		call htons
 1339 051c C817      		cp r28,r24
 1340 051e D907      		cpc r29,r25
 1341 0520 01F4      		brne .L37
 215:../../freeRtos/Lib/net/tcp.c ****   {
 216:../../freeRtos/Lib/net/tcp.c **** #if TCP_DEBUG
 217:../../freeRtos/Lib/net/tcp.c ****     if (tcpDebugStream != NULL)
 1343               	.LM93:
 1344 0522 8091 0000 		lds r24,tcpDebugStream
 1345 0526 9091 0000 		lds r25,tcpDebugStream+1
 1346 052a 0097      		sbiw r24,0
 1347 052c 01F0      		breq .L36
 218:../../freeRtos/Lib/net/tcp.c ****       fprintf_P(tcpDebugStream, PSTR("HTTP not implemented\r\n"));
 1349               	.LM94:
 1350 052e 00D0      		rcall .
 1351 0530 0F92      		push __tmp_reg__
 1352 0532 EDB7      		in r30,__SP_L__
 1353 0534 FEB7      		in r31,__SP_H__
 1354 0536 8183      		std Z+1,r24
 1355 0538 9283      		std Z+2,r25
 1356 053a 80E0      		ldi r24,lo8(__c.4269)
 1357 053c 90E0      		ldi r25,hi8(__c.4269)
 1358 053e 8383      		std Z+3,r24
 1359 0540 9483      		std Z+4,r25
 1360 0542 0E94 0000 		call fprintf_P
 1361 0546 0F90      		pop __tmp_reg__
 1362 0548 0F90      		pop __tmp_reg__
 1363 054a 0F90      		pop __tmp_reg__
 1364 054c 0F90      		pop __tmp_reg__
 1365 054e 00C0      		rjmp .L36
 1366               	.L37:
 219:../../freeRtos/Lib/net/tcp.c **** #endif
 220:../../freeRtos/Lib/net/tcp.c ****     ;
 221:../../freeRtos/Lib/net/tcp.c ****   }
 222:../../freeRtos/Lib/net/tcp.c ****   else
 223:../../freeRtos/Lib/net/tcp.c ****   {
 224:../../freeRtos/Lib/net/tcp.c ****     processTcpPacket();
 1368               	.LM95:
 1369 0550 0E94 0000 		call processTcpPacket
 1370               	.L36:
 1371               	/* epilogue start */
 225:../../freeRtos/Lib/net/tcp.c ****   }
 226:../../freeRtos/Lib/net/tcp.c **** }
 1373               	.LM96:
 1374 0554 DF91      		pop r29
 1375 0556 CF91      		pop r28
 1376 0558 0895      		ret
 1378               	.Lscope5:
 1380               		.stabd	78,0,0
 1384               	.global	setTcpDebug
 1386               	setTcpDebug:
 1387               		.stabd	46,0,0
 227:../../freeRtos/Lib/net/tcp.c **** 
 228:../../freeRtos/Lib/net/tcp.c **** #if TCP_DEBUG
 229:../../freeRtos/Lib/net/tcp.c **** void setTcpDebug(FILE *stream, uint8_t level)
 230:../../freeRtos/Lib/net/tcp.c **** {
 1389               	.LM97:
 1390               	.LFBB6:
 1391               	/* prologue: function */
 1392               	/* frame size = 0 */
 1393               	/* stack size = 0 */
 1394               	.L__stack_usage = 0
 231:../../freeRtos/Lib/net/tcp.c ****   tcpDebugStream = stream;
 1396               	.LM98:
 1397 055a 8093 0000 		sts tcpDebugStream,r24
 1398 055e 9093 0000 		sts tcpDebugStream+1,r25
 232:../../freeRtos/Lib/net/tcp.c ****   tcpDebugLevel = level;
 1400               	.LM99:
 1401 0562 6093 0000 		sts tcpDebugLevel,r22
 1402               	/* epilogue start */
 233:../../freeRtos/Lib/net/tcp.c **** }
 1404               	.LM100:
 1405 0566 0895      		ret
 1407               	.Lscope6:
 1409               		.stabd	78,0,0
 1411               	.global	flushTcpQueues
 1413               	flushTcpQueues:
 1414               		.stabd	46,0,0
 234:../../freeRtos/Lib/net/tcp.c **** #endif /* TCP_DEBUG */
 235:../../freeRtos/Lib/net/tcp.c **** 
 236:../../freeRtos/Lib/net/tcp.c **** void flushTcpQueues()
 237:../../freeRtos/Lib/net/tcp.c **** {
 1416               	.LM101:
 1417               	.LFBB7:
 1418               	/* prologue: function */
 1419               	/* frame size = 0 */
 1420               	/* stack size = 0 */
 1421               	.L__stack_usage = 0
 1422               	/* epilogue start */
 238:../../freeRtos/Lib/net/tcp.c ****   uint8_t sckNo = 0;
 239:../../freeRtos/Lib/net/tcp.c ****   struct TcpIpSocket *sck = sockets;
 240:../../freeRtos/Lib/net/tcp.c ****   for (sckNo = 0; sckNo < NUMBER_OF_SOCKETS; sckNo++)
 241:../../freeRtos/Lib/net/tcp.c ****   {
 242:../../freeRtos/Lib/net/tcp.c ****     
 243:../../freeRtos/Lib/net/tcp.c ****     sck++;
 244:../../freeRtos/Lib/net/tcp.c ****   }
 245:../../freeRtos/Lib/net/tcp.c **** }
 1424               	.LM102:
 1425 0568 0895      		ret
 1427               	.Lscope7:
 1429               		.stabd	78,0,0
 1431               	.global	httpProcess
 1433               	httpProcess:
 1434               		.stabd	46,0,0
 246:../../freeRtos/Lib/net/tcp.c **** 
 247:../../freeRtos/Lib/net/tcp.c **** 
 248:../../freeRtos/Lib/net/tcp.c **** inline void httpProcess()
 249:../../freeRtos/Lib/net/tcp.c **** {
 1436               	.LM103:
 1437               	.LFBB8:
 1438               	/* prologue: function */
 1439               	/* frame size = 0 */
 1440               	/* stack size = 0 */
 1441               	.L__stack_usage = 0
 1442               	/* epilogue start */
 250:../../freeRtos/Lib/net/tcp.c **** #if 0
 251:../../freeRtos/Lib/net/tcp.c ****     // TCP WWW tcp port www start, compare only the lower byte
 252:../../freeRtos/Lib/net/tcp.c ****     if ( Enc28j60_global.buf[IP_PROTO_P]==IP_PROTO_TCP && Enc28j60_global.buf[TCP_DST_PORT_H_P]==0 
 253:../../freeRtos/Lib/net/tcp.c ****     {
 254:../../freeRtos/Lib/net/tcp.c ****       if ( Enc28j60_global.buf[TCP_FLAGS_P] & TCP_FLAGS_SYN_V )
 255:../../freeRtos/Lib/net/tcp.c ****       {
 256:../../freeRtos/Lib/net/tcp.c ****         make_tcp_synack_from_syn (Enc28j60_global.buf );
 257:../../freeRtos/Lib/net/tcp.c ****         // make_tcp_synack_from_syn does already send the syn,ack
 258:../../freeRtos/Lib/net/tcp.c ****         continue;
 259:../../freeRtos/Lib/net/tcp.c ****       }
 260:../../freeRtos/Lib/net/tcp.c ****       if (Enc28j60_global.buf[TCP_FLAGS_P] & TCP_FLAGS_ACK_V)
 261:../../freeRtos/Lib/net/tcp.c ****       {
 262:../../freeRtos/Lib/net/tcp.c ****         init_len_info (Enc28j60_global.buf ); // init some data structures
 263:../../freeRtos/Lib/net/tcp.c ****         // we can possibly have no data, just ack:
 264:../../freeRtos/Lib/net/tcp.c ****         dat_p=get_tcp_data_pointer();
 265:../../freeRtos/Lib/net/tcp.c ****         if ( dat_p==0 )
 266:../../freeRtos/Lib/net/tcp.c ****         {
 267:../../freeRtos/Lib/net/tcp.c ****           if (Enc28j60_global.buf[TCP_FLAGS_P] & TCP_FLAGS_FIN_V )
 268:../../freeRtos/Lib/net/tcp.c ****           {
 269:../../freeRtos/Lib/net/tcp.c ****             // finack, answer with ack
 270:../../freeRtos/Lib/net/tcp.c ****             make_tcp_ack_from_any (Enc28j60_global.buf );
 271:../../freeRtos/Lib/net/tcp.c ****           }
 272:../../freeRtos/Lib/net/tcp.c ****           // just an ack with no data, wait for next packet
 273:../../freeRtos/Lib/net/tcp.c ****           continue;
 274:../../freeRtos/Lib/net/tcp.c ****         }
 275:../../freeRtos/Lib/net/tcp.c ****         if ( strncmp ( "GET ", ( char * )(&Enc28j60_global.buf[dat_p]), 4) !=0 )
 276:../../freeRtos/Lib/net/tcp.c ****         {
 277:../../freeRtos/Lib/net/tcp.c ****           // head, post and other methods:
 278:../../freeRtos/Lib/net/tcp.c ****           //
 279:../../freeRtos/Lib/net/tcp.c ****           // for possible status codes see:
 280:../../freeRtos/Lib/net/tcp.c ****           // http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html
 281:../../freeRtos/Lib/net/tcp.c ****           plen=fill_tcp_data_p (Enc28j60_global.buf, 0, PSTR ( "HTTP/1.0 200 OK\r\nContent-Type: te
 282:../../freeRtos/Lib/net/tcp.c ****           make_tcp_ack_from_any(Enc28j60_global.buf);          // send ack for http get
 283:../../freeRtos/Lib/net/tcp.c ****           make_tcp_ack_with_data(Enc28j60_global.buf, plen);   // send data
 284:../../freeRtos/Lib/net/tcp.c ****           continue;
 285:../../freeRtos/Lib/net/tcp.c ****         }
 286:../../freeRtos/Lib/net/tcp.c ****         if ( strncmp ( "/ ", ( char * ) & (Enc28j60_global.buf[dat_p+4] ),2 ) ==0)
 287:../../freeRtos/Lib/net/tcp.c ****         {
 288:../../freeRtos/Lib/net/tcp.c ****           plen=fill_tcp_data_p(Enc28j60_global.buf, 0, PSTR ( "HTTP/1.0 200 OK\r\nContent-Type: tex
 289:../../freeRtos/Lib/net/tcp.c ****           plen=fill_tcp_data_p(Enc28j60_global.buf, plen, PSTR ( "<p>Usage: http://host_or_ip/filen
 290:../../freeRtos/Lib/net/tcp.c ****           make_tcp_ack_from_any(Enc28j60_global.buf);          // send ack for http get
 291:../../freeRtos/Lib/net/tcp.c ****           make_tcp_ack_with_data(Enc28j60_global.buf, plen);   // send data
 292:../../freeRtos/Lib/net/tcp.c ****           continue;
 293:../../freeRtos/Lib/net/tcp.c ****         }
 294:../../freeRtos/Lib/net/tcp.c **** 
 295:../../freeRtos/Lib/net/tcp.c ****         cmd = analyse_get_url (( char * )(&Enc28j60_global.buf[dat_p+5]), filename);
 296:../../freeRtos/Lib/net/tcp.c **** 
 297:../../freeRtos/Lib/net/tcp.c ****         if (cmd == URLramDysk)
 298:../../freeRtos/Lib/net/tcp.c ****         {
 299:../../freeRtos/Lib/net/tcp.c ****           plen=fill_tcp_data_p(Enc28j60_global.buf, 0, PSTR ( "HTTP/1.0 200 OK\r\nContent-Type: tex
 300:../../freeRtos/Lib/net/tcp.c ****   
 301:../../freeRtos/Lib/net/tcp.c ****           //Open the filen
 302:../../freeRtos/Lib/net/tcp.c ****           struct ramPlikFd fd;
 303:../../freeRtos/Lib/net/tcp.c ****           if (ramDyskOtworzPlik(filename, &fd) != 0)
 304:../../freeRtos/Lib/net/tcp.c ****           {
 305:../../freeRtos/Lib/net/tcp.c ****             plen=fill_tcp_data_p(Enc28j60_global.buf, plen, PSTR ( "<p>Nie mozna otworzyc pliku o n
 306:../../freeRtos/Lib/net/tcp.c ****             plen=fill_tcp_data(Enc28j60_global.buf, plen, filename);
 307:../../freeRtos/Lib/net/tcp.c ****             plen=fill_tcp_data_p(Enc28j60_global.buf, plen, PSTR ( " umieszczonego w ram dysku</p>\
 308:../../freeRtos/Lib/net/tcp.c ****             make_tcp_ack_from_any(Enc28j60_global.buf);          // send ack for http get
 309:../../freeRtos/Lib/net/tcp.c ****             make_tcp_ack_with_data(Enc28j60_global.buf, plen);   // send data
 310:../../freeRtos/Lib/net/tcp.c ****             continue;
 311:../../freeRtos/Lib/net/tcp.c ****           }
 312:../../freeRtos/Lib/net/tcp.c ****           plen=fill_tcp_data_p(Enc28j60_global.buf, plen, PSTR ( "<p>Zawartosc pliku " ) );
 313:../../freeRtos/Lib/net/tcp.c ****           plen=fill_tcp_data(Enc28j60_global.buf, plen, filename);
 314:../../freeRtos/Lib/net/tcp.c ****           plen=fill_tcp_data_p(Enc28j60_global.buf, plen, PSTR ( " zapisanego w ram dysku:<br>" ) )
 315:../../freeRtos/Lib/net/tcp.c **** 
 316:../../freeRtos/Lib/net/tcp.c ****           char c;
 317:../../freeRtos/Lib/net/tcp.c ****           while (plen < Enc28j60_global.bufferSize - 30)
 318:../../freeRtos/Lib/net/tcp.c ****           {
 319:../../freeRtos/Lib/net/tcp.c ****             if (ramDyskCzytajBajtZPliku(&fd , &c) != 0)
 320:../../freeRtos/Lib/net/tcp.c ****               break;
 321:../../freeRtos/Lib/net/tcp.c ****             plen = add_tcp_byte(Enc28j60_global.buf, plen, c);
 322:../../freeRtos/Lib/net/tcp.c ****           }
 323:../../freeRtos/Lib/net/tcp.c ****           plen=fill_tcp_data_p(Enc28j60_global.buf, plen, PSTR ( "</p>\n"));
 324:../../freeRtos/Lib/net/tcp.c ****           ramDyskZamknijPlik(&fd);
 325:../../freeRtos/Lib/net/tcp.c ****           make_tcp_ack_from_any(Enc28j60_global.buf);          // send ack for http get
 326:../../freeRtos/Lib/net/tcp.c ****           make_tcp_ack_with_data(Enc28j60_global.buf, plen);   // send data
 327:../../freeRtos/Lib/net/tcp.c **** 
 328:../../freeRtos/Lib/net/tcp.c ****           continue;
 329:../../freeRtos/Lib/net/tcp.c ****         }
 330:../../freeRtos/Lib/net/tcp.c **** 
 331:../../freeRtos/Lib/net/tcp.c ****         if (cmd == URLsdDysk)
 332:../../freeRtos/Lib/net/tcp.c ****         {
 333:../../freeRtos/Lib/net/tcp.c ****           plen=fill_tcp_data_p(Enc28j60_global.buf, 0, PSTR ( "HTTP/1.0 200 OK\r\nContent-Type: tex
 334:../../freeRtos/Lib/net/tcp.c ****           plen=fill_tcp_data_p(Enc28j60_global.buf, plen, PSTR ( "<p>Do zaimpelentowania wyswietlen
 335:../../freeRtos/Lib/net/tcp.c ****           plen=fill_tcp_data(Enc28j60_global.buf, plen, filename);
 336:../../freeRtos/Lib/net/tcp.c ****           plen=fill_tcp_data_p(Enc28j60_global.buf, plen, PSTR ( " z karty SD</p>\n" ) );
 337:../../freeRtos/Lib/net/tcp.c ****           make_tcp_ack_from_any(Enc28j60_global.buf);          // send ack for http get
 338:../../freeRtos/Lib/net/tcp.c ****           make_tcp_ack_with_data(Enc28j60_global.buf, plen);   // send data
 339:../../freeRtos/Lib/net/tcp.c ****           continue;
 340:../../freeRtos/Lib/net/tcp.c ****         }
 341:../../freeRtos/Lib/net/tcp.c ****         if (cmd == URLstatus)
 342:../../freeRtos/Lib/net/tcp.c ****         {
 343:../../freeRtos/Lib/net/tcp.c ****           plen=fill_tcp_data_p(Enc28j60_global.buf, 0, PSTR ( "HTTP/1.0 200 OK\r\nContent-Type: tex
 344:../../freeRtos/Lib/net/tcp.c ****           plen=printHTMLstatus(Enc28j60_global.buf, plen, Enc28j60_global.bufferSize);  
 345:../../freeRtos/Lib/net/tcp.c ****           make_tcp_ack_from_any(Enc28j60_global.buf);          // send ack for http get
 346:../../freeRtos/Lib/net/tcp.c ****           make_tcp_ack_with_data(Enc28j60_global.buf, plen);   // send data
 347:../../freeRtos/Lib/net/tcp.c ****           continue;  
 348:../../freeRtos/Lib/net/tcp.c ****         }
 349:../../freeRtos/Lib/net/tcp.c ****       }
 350:../../freeRtos/Lib/net/tcp.c **** 
 351:../../freeRtos/Lib/net/tcp.c **** #endif
 352:../../freeRtos/Lib/net/tcp.c **** }...
 1444               	.LM104:
 1445 056a 0895      		ret
 1447               	.Lscope8:
 1449               		.stabd	78,0,0
 1450               		.comm wwwport,1,1
 1451               		.comm nicState,14,1
 1452               		.comm plen,2,1
 1453               		.comm IpMyConfig,15,1
 1454               		.comm arpDebug,2,1
 1455               		.comm arpDebugLevel,1,1
 1456               		.comm icmpDebug,2,1
 1457               		.comm icmpDebugLevel,1,1
 1458               		.comm udpSocket,2,1
 1459               		.comm udpDbgStream,2,1
 1460               		.comm udpDbgLevel,1,1
 1461               		.comm tcpDebugStream,2,1
 1462               		.comm tcpDebugLevel,1,1
 1463               		.comm sockets,2,1
 1464               		.section	.progmem.data,"a",@progbits
 1467               	__c.4269:
 1468 0000 4854 5450 		.string	"HTTP not implemented\r\n"
 1468      206E 6F74 
 1468      2069 6D70 
 1468      6C65 6D65 
 1468      6E74 6564 
 1471               	__c.4255:
 1472 0017 4F70 656E 		.string	"Opening TCP connection ERROR: ack flag wasn't set\r\n"
 1472      696E 6720 
 1472      5443 5020 
 1472      636F 6E6E 
 1472      6563 7469 
 1475               	__c.4253:
 1476 004b 4F70 656E 		.ascii	"Opening"
 1476      696E 67
 1477 0052 2054 4350 		.string	" TCP connection socket state change SYN_RECEIVED->ESTABILISHED\r\n"
 1477      2063 6F6E 
 1477      6E65 6374 
 1477      696F 6E20 
 1477      736F 636B 
 1480               	__c.4251:
 1481 0093 4F70 656E 		.string	"Opening TCP connection ERROR: syn flag wasn't set\r\n"
 1481      696E 6720 
 1481      5443 5020 
 1481      636F 6E6E 
 1481      6563 7469 
 1484               	__c.4249:
 1485 00c7 4F        		.ascii	"O"
 1486 00c8 7065 6E69 		.string	"pening TCP connection socket state change LISTEN->SYN_RECEIVED\r\n"
 1486      6E67 2054 
 1486      4350 2063 
 1486      6F6E 6E65 
 1486      6374 696F 
 1489               	__c.4240:
 1490 0109 4361 6E27 		.string	"Can't find TCP socket with localPort %d\r\n"
 1490      7420 6669 
 1490      6E64 2054 
 1490      4350 2073 
 1490      6F63 6B65 
 1493               	__c.4235:
 1494 0133 466F 756E 		.string	"Found TCP socket no %d state LISTEN\r\n"
 1494      6420 5443 
 1494      5020 736F 
 1494      636B 6574 
 1494      206E 6F20 
 1497               	__c.4230:
 1498 0159 466F 756E 		.string	"Found TCP socket state %d\r\n"
 1498      6420 5443 
 1498      5020 736F 
 1498      636B 6574 
 1498      2073 7461 
 1513               		.text
 1515               	.Letext0:
 1516               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:00000000 tcp.c
     /tmp/cc9OpcQk.s:2      *ABS*:0000003f __SREG__
     /tmp/cc9OpcQk.s:3      *ABS*:0000003e __SP_H__
     /tmp/cc9OpcQk.s:4      *ABS*:0000003d __SP_L__
     /tmp/cc9OpcQk.s:5      *ABS*:00000034 __CCP__
     /tmp/cc9OpcQk.s:6      *ABS*:00000000 __tmp_reg__
     /tmp/cc9OpcQk.s:7      *ABS*:00000001 __zero_reg__
     /tmp/cc9OpcQk.s:477    .text:00000000 socketInit
                            *COM*:00000002 sockets
     /tmp/cc9OpcQk.s:605    .text:000000a2 calculateTcpChecksun
                            *COM*:0000000e nicState
     /tmp/cc9OpcQk.s:642    .text:000000c4 processTcpPacket
                            *COM*:00000002 tcpDebugStream
                            *COM*:00000001 tcpDebugLevel
     /tmp/cc9OpcQk.s:1497   .progmem.data:00000159 __c.4230
     /tmp/cc9OpcQk.s:1493   .progmem.data:00000133 __c.4235
     /tmp/cc9OpcQk.s:1489   .progmem.data:00000109 __c.4240
     /tmp/cc9OpcQk.s:1484   .progmem.data:000000c7 __c.4249
     /tmp/cc9OpcQk.s:1480   .progmem.data:00000093 __c.4251
     /tmp/cc9OpcQk.s:1475   .progmem.data:0000004b __c.4253
     /tmp/cc9OpcQk.s:1471   .progmem.data:00000017 __c.4255
     /tmp/cc9OpcQk.s:1298   .text:00000500 sendTcBuffer
     /tmp/cc9OpcQk.s:1319   .text:00000504 netstackTCPIPProcess
     /tmp/cc9OpcQk.s:1467   .progmem.data:00000000 __c.4269
     /tmp/cc9OpcQk.s:1386   .text:0000055a setTcpDebug
     /tmp/cc9OpcQk.s:1413   .text:00000568 flushTcpQueues
     /tmp/cc9OpcQk.s:1433   .text:0000056a httpProcess
                            *COM*:00000001 wwwport
                            *COM*:00000002 plen
                            *COM*:0000000f IpMyConfig
                            *COM*:00000002 arpDebug
                            *COM*:00000001 arpDebugLevel
                            *COM*:00000002 icmpDebug
                            *COM*:00000001 icmpDebugLevel
                            *COM*:00000002 udpSocket
                            *COM*:00000002 udpDbgStream
                            *COM*:00000001 udpDbgLevel

UNDEFINED SYMBOLS
xmalloc
htons
netChecksum
fprintf_P
htonl
ipSend
timer100Hz
__do_clear_bss
