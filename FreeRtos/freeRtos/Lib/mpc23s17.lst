   1               		.file	"mpc23s17.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__ = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
  10               		.text
  11               	.Ltext0:
 563               		.weak	enableSpiMPC23S17
 565               	enableSpiMPC23S17:
 566               		.stabd	46,0,0
   1:../../freeRtos/Lib/mpc23s17.c **** /*****************************************************************************
   2:../../freeRtos/Lib/mpc23s17.c **** * vim:sw=2:ts=2:si:et
   3:../../freeRtos/Lib/mpc23s17.c **** *
   4:../../freeRtos/Lib/mpc23s17.c **** * Title      : MPC23s17 parrarel I/O 16 bit port driver
   5:../../freeRtos/Lib/mpc23s17.c **** * Author     : Adam Kaliszan
   6:../../freeRtos/Lib/mpc23s17.c **** * Copyright: GPL V2
   7:../../freeRtos/Lib/mpc23s17.c **** *
   8:../../freeRtos/Lib/mpc23s17.c **** *This driver provides:
   9:../../freeRtos/Lib/mpc23s17.c **** * - read/set operation
  10:../../freeRtos/Lib/mpc23s17.c **** *Driver uses mutexex and is condition race free. Function can be invoken by any thread.
  11:../../freeRtos/Lib/mpc23s17.c **** *****************************************************************************/
  12:../../freeRtos/Lib/mpc23s17.c **** //@{
  13:../../freeRtos/Lib/mpc23s17.c **** #include <avr/io.h>
  14:../../freeRtos/Lib/mpc23s17.c **** #include <util/delay.h>
  15:../../freeRtos/Lib/mpc23s17.c **** #include "mpc23s17.h"
  16:../../freeRtos/Lib/mpc23s17.c **** #include "spiXmega.h"
  17:../../freeRtos/Lib/mpc23s17.c **** 
  18:../../freeRtos/Lib/mpc23s17.c **** void enableSpiMPC23S17(void)  {}
 568               	.LM0:
 569               	.LFBB1:
 570               	/* prologue: function */
 571               	/* frame size = 0 */
 572               	/* stack size = 0 */
 573               	.L__stack_usage = 0
 574               	/* epilogue start */
 576               	.LM1:
 577 0000 0895      		ret
 579               	.Lscope1:
 581               		.stabd	78,0,0
 583               		.weak	disableSpiMPC23S17
 585               	disableSpiMPC23S17:
 586               		.stabd	46,0,0
  19:../../freeRtos/Lib/mpc23s17.c **** void disableSpiMPC23S17(void) {}
 588               	.LM2:
 589               	.LFBB2:
 590               	/* prologue: function */
 591               	/* frame size = 0 */
 592               	/* stack size = 0 */
 593               	.L__stack_usage = 0
 594               	/* epilogue start */
 596               	.LM3:
 597 0002 0895      		ret
 599               	.Lscope2:
 601               		.stabd	78,0,0
 605               	.global	MPC23s17SetDirA
 607               	MPC23s17SetDirA:
 608               		.stabd	46,0,0
  20:../../freeRtos/Lib/mpc23s17.c **** 
  21:../../freeRtos/Lib/mpc23s17.c **** 
  22:../../freeRtos/Lib/mpc23s17.c **** void MPC23s17SetDirA(uint8_t portAdir, uint8_t addr)
  23:../../freeRtos/Lib/mpc23s17.c **** {
 610               	.LM4:
 611               	.LFBB3:
 612 0004 1F93      		push r17
 613 0006 DF93      		push r29
 614 0008 CF93      		push r28
 615 000a 0F92      		push __tmp_reg__
 616 000c CDB7      		in r28,__SP_L__
 617 000e DEB7      		in r29,__SP_H__
 618               	/* prologue: function */
 619               	/* frame size = 1 */
 620               	/* stack size = 4 */
 621               	.L__stack_usage = 4
 622 0010 182F      		mov r17,r24
  24:../../freeRtos/Lib/mpc23s17.c ****   addr = addr<<1;
 624               	.LM5:
 625 0012 660F      		lsl r22
  25:../../freeRtos/Lib/mpc23s17.c ****   addr &= 0x0E;
 627               	.LM6:
 628 0014 6E70      		andi r22,lo8(14)
  26:../../freeRtos/Lib/mpc23s17.c ****   addr |= 0x40;        //OPCODE 0100 AAA 0 bit0: 0 - zapis, 1 - odczyt 
  27:../../freeRtos/Lib/mpc23s17.c **** 
  28:../../freeRtos/Lib/mpc23s17.c ****   spiTake();
 630               	.LM7:
 631 0016 6983      		std Y+1,r22
 632 0018 0E94 0000 		call spiTake
  29:../../freeRtos/Lib/mpc23s17.c ****   enableSpiMPC23S17(); 
 634               	.LM8:
 635 001c 0E94 0000 		call enableSpiMPC23S17
  30:../../freeRtos/Lib/mpc23s17.c ****   spiSend(addr);
 637               	.LM9:
 638 0020 6981      		ldd r22,Y+1
 639 0022 862F      		mov r24,r22
 640 0024 8064      		ori r24,lo8(64)
 641 0026 0E94 0000 		call spiSend
  31:../../freeRtos/Lib/mpc23s17.c ****   spiSend(B0_IODIRA);
 643               	.LM10:
 644 002a 80E0      		ldi r24,lo8(0)
 645 002c 0E94 0000 		call spiSend
  32:../../freeRtos/Lib/mpc23s17.c ****   spiSend(portAdir);  
 647               	.LM11:
 648 0030 812F      		mov r24,r17
 649 0032 0E94 0000 		call spiSend
  33:../../freeRtos/Lib/mpc23s17.c ****   
  34:../../freeRtos/Lib/mpc23s17.c ****   disableSpiMPC23S17();
 651               	.LM12:
 652 0036 0E94 0000 		call disableSpiMPC23S17
  35:../../freeRtos/Lib/mpc23s17.c ****   spiGive();
 654               	.LM13:
 655 003a 0E94 0000 		call spiGive
 656               	/* epilogue start */
  36:../../freeRtos/Lib/mpc23s17.c **** }
 658               	.LM14:
 659 003e 0F90      		pop __tmp_reg__
 660 0040 CF91      		pop r28
 661 0042 DF91      		pop r29
 662 0044 1F91      		pop r17
 663 0046 0895      		ret
 665               	.Lscope3:
 667               		.stabd	78,0,0
 671               	.global	MPC23s17SetDirB
 673               	MPC23s17SetDirB:
 674               		.stabd	46,0,0
  37:../../freeRtos/Lib/mpc23s17.c **** 
  38:../../freeRtos/Lib/mpc23s17.c **** void MPC23s17SetDirB(uint8_t portBdir, uint8_t addr)
  39:../../freeRtos/Lib/mpc23s17.c **** {
 676               	.LM15:
 677               	.LFBB4:
 678 0048 1F93      		push r17
 679 004a DF93      		push r29
 680 004c CF93      		push r28
 681 004e 0F92      		push __tmp_reg__
 682 0050 CDB7      		in r28,__SP_L__
 683 0052 DEB7      		in r29,__SP_H__
 684               	/* prologue: function */
 685               	/* frame size = 1 */
 686               	/* stack size = 4 */
 687               	.L__stack_usage = 4
 688 0054 182F      		mov r17,r24
  40:../../freeRtos/Lib/mpc23s17.c ****   addr = addr<<1;
 690               	.LM16:
 691 0056 660F      		lsl r22
  41:../../freeRtos/Lib/mpc23s17.c ****   addr &= 0x0E;
 693               	.LM17:
 694 0058 6E70      		andi r22,lo8(14)
  42:../../freeRtos/Lib/mpc23s17.c ****   addr |= 0x40;        //OPCODE 0100 AAA 0 bit0: 0 - zapis, 1 - odczyt 
  43:../../freeRtos/Lib/mpc23s17.c **** 
  44:../../freeRtos/Lib/mpc23s17.c ****   spiTake();
 696               	.LM18:
 697 005a 6983      		std Y+1,r22
 698 005c 0E94 0000 		call spiTake
  45:../../freeRtos/Lib/mpc23s17.c ****   enableSpiMPC23S17();
 700               	.LM19:
 701 0060 0E94 0000 		call enableSpiMPC23S17
  46:../../freeRtos/Lib/mpc23s17.c ****   
  47:../../freeRtos/Lib/mpc23s17.c ****   spiSend(addr);
 703               	.LM20:
 704 0064 6981      		ldd r22,Y+1
 705 0066 862F      		mov r24,r22
 706 0068 8064      		ori r24,lo8(64)
 707 006a 0E94 0000 		call spiSend
  48:../../freeRtos/Lib/mpc23s17.c ****   spiSend(B0_IODIRB);
 709               	.LM21:
 710 006e 81E0      		ldi r24,lo8(1)
 711 0070 0E94 0000 		call spiSend
  49:../../freeRtos/Lib/mpc23s17.c ****   spiSend(portBdir);  
 713               	.LM22:
 714 0074 812F      		mov r24,r17
 715 0076 0E94 0000 		call spiSend
  50:../../freeRtos/Lib/mpc23s17.c ****   
  51:../../freeRtos/Lib/mpc23s17.c ****   disableSpiMPC23S17();
 717               	.LM23:
 718 007a 0E94 0000 		call disableSpiMPC23S17
  52:../../freeRtos/Lib/mpc23s17.c ****   spiGive();
 720               	.LM24:
 721 007e 0E94 0000 		call spiGive
 722               	/* epilogue start */
  53:../../freeRtos/Lib/mpc23s17.c **** }
 724               	.LM25:
 725 0082 0F90      		pop __tmp_reg__
 726 0084 CF91      		pop r28
 727 0086 DF91      		pop r29
 728 0088 1F91      		pop r17
 729 008a 0895      		ret
 731               	.Lscope4:
 733               		.stabd	78,0,0
 737               	.global	MPC23s17SetPortA
 739               	MPC23s17SetPortA:
 740               		.stabd	46,0,0
  54:../../freeRtos/Lib/mpc23s17.c **** 
  55:../../freeRtos/Lib/mpc23s17.c **** void MPC23s17SetPortA(uint8_t portAout, uint8_t addr)
  56:../../freeRtos/Lib/mpc23s17.c **** {
 742               	.LM26:
 743               	.LFBB5:
 744 008c 1F93      		push r17
 745 008e DF93      		push r29
 746 0090 CF93      		push r28
 747 0092 0F92      		push __tmp_reg__
 748 0094 CDB7      		in r28,__SP_L__
 749 0096 DEB7      		in r29,__SP_H__
 750               	/* prologue: function */
 751               	/* frame size = 1 */
 752               	/* stack size = 4 */
 753               	.L__stack_usage = 4
 754 0098 182F      		mov r17,r24
  57:../../freeRtos/Lib/mpc23s17.c ****   addr = addr<<1;
 756               	.LM27:
 757 009a 660F      		lsl r22
  58:../../freeRtos/Lib/mpc23s17.c ****   addr &= 0x0E;
 759               	.LM28:
 760 009c 6E70      		andi r22,lo8(14)
  59:../../freeRtos/Lib/mpc23s17.c ****   addr |= 0x40;        //OPCODE 0100 AAA 0 bit0: 0 - zapis, 1 - odczyt 
  60:../../freeRtos/Lib/mpc23s17.c **** 
  61:../../freeRtos/Lib/mpc23s17.c ****   spiTake();
 762               	.LM29:
 763 009e 6983      		std Y+1,r22
 764 00a0 0E94 0000 		call spiTake
  62:../../freeRtos/Lib/mpc23s17.c ****   enableSpiMPC23S17();
 766               	.LM30:
 767 00a4 0E94 0000 		call enableSpiMPC23S17
  63:../../freeRtos/Lib/mpc23s17.c ****   portA = portAout;  
 769               	.LM31:
 770 00a8 1093 0000 		sts portA,r17
  64:../../freeRtos/Lib/mpc23s17.c ****   spiSend(addr);
 772               	.LM32:
 773 00ac 6981      		ldd r22,Y+1
 774 00ae 862F      		mov r24,r22
 775 00b0 8064      		ori r24,lo8(64)
 776 00b2 0E94 0000 		call spiSend
  65:../../freeRtos/Lib/mpc23s17.c ****   spiSend(B0_OLATA);
 778               	.LM33:
 779 00b6 84E1      		ldi r24,lo8(20)
 780 00b8 0E94 0000 		call spiSend
  66:../../freeRtos/Lib/mpc23s17.c ****   spiSend(portA);  
 782               	.LM34:
 783 00bc 8091 0000 		lds r24,portA
 784 00c0 0E94 0000 		call spiSend
  67:../../freeRtos/Lib/mpc23s17.c **** 
  68:../../freeRtos/Lib/mpc23s17.c ****   disableSpiMPC23S17();
 786               	.LM35:
 787 00c4 0E94 0000 		call disableSpiMPC23S17
  69:../../freeRtos/Lib/mpc23s17.c ****   spiGive();
 789               	.LM36:
 790 00c8 0E94 0000 		call spiGive
 791               	/* epilogue start */
  70:../../freeRtos/Lib/mpc23s17.c **** }
 793               	.LM37:
 794 00cc 0F90      		pop __tmp_reg__
 795 00ce CF91      		pop r28
 796 00d0 DF91      		pop r29
 797 00d2 1F91      		pop r17
 798 00d4 0895      		ret
 800               	.Lscope5:
 802               		.stabd	78,0,0
 806               	.global	MPC23s17SetBitsOnPortA
 808               	MPC23s17SetBitsOnPortA:
 809               		.stabd	46,0,0
  71:../../freeRtos/Lib/mpc23s17.c **** 
  72:../../freeRtos/Lib/mpc23s17.c **** void MPC23s17SetBitsOnPortA(uint8_t portAout, uint8_t addr)
  73:../../freeRtos/Lib/mpc23s17.c **** {
 811               	.LM38:
 812               	.LFBB6:
 813 00d6 DF93      		push r29
 814 00d8 CF93      		push r28
 815 00da 0F92      		push __tmp_reg__
 816 00dc CDB7      		in r28,__SP_L__
 817 00de DEB7      		in r29,__SP_H__
 818               	/* prologue: function */
 819               	/* frame size = 1 */
 820               	/* stack size = 3 */
 821               	.L__stack_usage = 3
  74:../../freeRtos/Lib/mpc23s17.c ****   addr = addr<<1;
 823               	.LM39:
 824 00e0 660F      		lsl r22
  75:../../freeRtos/Lib/mpc23s17.c ****   addr &= 0x0E;
 826               	.LM40:
 827 00e2 6E70      		andi r22,lo8(14)
  76:../../freeRtos/Lib/mpc23s17.c ****   addr |= 0x40;        //OPCODE 0100 AAA 0 bit0: 0 - zapis, 1 - odczyt 
  77:../../freeRtos/Lib/mpc23s17.c **** 
  78:../../freeRtos/Lib/mpc23s17.c ****   portA |= portAout;  
 829               	.LM41:
 830 00e4 9091 0000 		lds r25,portA
 831 00e8 982B      		or r25,r24
 832 00ea 9093 0000 		sts portA,r25
  79:../../freeRtos/Lib/mpc23s17.c **** 
  80:../../freeRtos/Lib/mpc23s17.c ****   spiTake();
 834               	.LM42:
 835 00ee 6983      		std Y+1,r22
 836 00f0 0E94 0000 		call spiTake
  81:../../freeRtos/Lib/mpc23s17.c ****   enableSpiMPC23S17();
 838               	.LM43:
 839 00f4 0E94 0000 		call enableSpiMPC23S17
  82:../../freeRtos/Lib/mpc23s17.c ****   spiSend(addr);
 841               	.LM44:
 842 00f8 6981      		ldd r22,Y+1
 843 00fa 862F      		mov r24,r22
 844 00fc 8064      		ori r24,lo8(64)
 845 00fe 0E94 0000 		call spiSend
  83:../../freeRtos/Lib/mpc23s17.c ****   spiSend(B0_OLATA);
 847               	.LM45:
 848 0102 84E1      		ldi r24,lo8(20)
 849 0104 0E94 0000 		call spiSend
  84:../../freeRtos/Lib/mpc23s17.c ****   spiSend(portA);  
 851               	.LM46:
 852 0108 8091 0000 		lds r24,portA
 853 010c 0E94 0000 		call spiSend
  85:../../freeRtos/Lib/mpc23s17.c ****   disableSpiMPC23S17();
 855               	.LM47:
 856 0110 0E94 0000 		call disableSpiMPC23S17
  86:../../freeRtos/Lib/mpc23s17.c ****   spiGive();
 858               	.LM48:
 859 0114 0E94 0000 		call spiGive
 860               	/* epilogue start */
  87:../../freeRtos/Lib/mpc23s17.c **** }
 862               	.LM49:
 863 0118 0F90      		pop __tmp_reg__
 864 011a CF91      		pop r28
 865 011c DF91      		pop r29
 866 011e 0895      		ret
 868               	.Lscope6:
 870               		.stabd	78,0,0
 874               	.global	MPC23s17ClearBitsOnPortA
 876               	MPC23s17ClearBitsOnPortA:
 877               		.stabd	46,0,0
  88:../../freeRtos/Lib/mpc23s17.c **** 
  89:../../freeRtos/Lib/mpc23s17.c **** void MPC23s17ClearBitsOnPortA(uint8_t portAout, uint8_t addr)
  90:../../freeRtos/Lib/mpc23s17.c **** {
 879               	.LM50:
 880               	.LFBB7:
 881 0120 DF93      		push r29
 882 0122 CF93      		push r28
 883 0124 0F92      		push __tmp_reg__
 884 0126 CDB7      		in r28,__SP_L__
 885 0128 DEB7      		in r29,__SP_H__
 886               	/* prologue: function */
 887               	/* frame size = 1 */
 888               	/* stack size = 3 */
 889               	.L__stack_usage = 3
  91:../../freeRtos/Lib/mpc23s17.c ****   addr = addr<<1;
 891               	.LM51:
 892 012a 660F      		lsl r22
  92:../../freeRtos/Lib/mpc23s17.c ****   addr &= 0x0E;
 894               	.LM52:
 895 012c 6E70      		andi r22,lo8(14)
  93:../../freeRtos/Lib/mpc23s17.c ****   addr |= 0x40;        //OPCODE 0100 AAA 0 bit0: 0 - zapis, 1 - odczyt 
  94:../../freeRtos/Lib/mpc23s17.c **** 
  95:../../freeRtos/Lib/mpc23s17.c ****   portA &= (~portAout);
 897               	.LM53:
 898 012e 9091 0000 		lds r25,portA
 899 0132 8095      		com r24
 900 0134 8923      		and r24,r25
 901 0136 8093 0000 		sts portA,r24
  96:../../freeRtos/Lib/mpc23s17.c **** 
  97:../../freeRtos/Lib/mpc23s17.c ****   spiTake();
 903               	.LM54:
 904 013a 6983      		std Y+1,r22
 905 013c 0E94 0000 		call spiTake
  98:../../freeRtos/Lib/mpc23s17.c ****   enableSpiMPC23S17();
 907               	.LM55:
 908 0140 0E94 0000 		call enableSpiMPC23S17
  99:../../freeRtos/Lib/mpc23s17.c ****   spiSend(addr);
 910               	.LM56:
 911 0144 6981      		ldd r22,Y+1
 912 0146 862F      		mov r24,r22
 913 0148 8064      		ori r24,lo8(64)
 914 014a 0E94 0000 		call spiSend
 100:../../freeRtos/Lib/mpc23s17.c ****   spiSend(B0_OLATA);
 916               	.LM57:
 917 014e 84E1      		ldi r24,lo8(20)
 918 0150 0E94 0000 		call spiSend
 101:../../freeRtos/Lib/mpc23s17.c ****   spiSend(portA);  
 920               	.LM58:
 921 0154 8091 0000 		lds r24,portA
 922 0158 0E94 0000 		call spiSend
 102:../../freeRtos/Lib/mpc23s17.c ****   disableSpiMPC23S17();
 924               	.LM59:
 925 015c 0E94 0000 		call disableSpiMPC23S17
 103:../../freeRtos/Lib/mpc23s17.c ****   spiGive();
 927               	.LM60:
 928 0160 0E94 0000 		call spiGive
 929               	/* epilogue start */
 104:../../freeRtos/Lib/mpc23s17.c **** }
 931               	.LM61:
 932 0164 0F90      		pop __tmp_reg__
 933 0166 CF91      		pop r28
 934 0168 DF91      		pop r29
 935 016a 0895      		ret
 937               	.Lscope7:
 939               		.stabd	78,0,0
 943               	.global	MPC23s17SetPortB
 945               	MPC23s17SetPortB:
 946               		.stabd	46,0,0
 105:../../freeRtos/Lib/mpc23s17.c **** 
 106:../../freeRtos/Lib/mpc23s17.c **** void MPC23s17SetPortB(uint8_t portBout, uint8_t addr)
 107:../../freeRtos/Lib/mpc23s17.c **** {
 948               	.LM62:
 949               	.LFBB8:
 950 016c DF93      		push r29
 951 016e CF93      		push r28
 952 0170 0F92      		push __tmp_reg__
 953 0172 CDB7      		in r28,__SP_L__
 954 0174 DEB7      		in r29,__SP_H__
 955               	/* prologue: function */
 956               	/* frame size = 1 */
 957               	/* stack size = 3 */
 958               	.L__stack_usage = 3
 108:../../freeRtos/Lib/mpc23s17.c ****   addr = addr<<1;
 960               	.LM63:
 961 0176 660F      		lsl r22
 109:../../freeRtos/Lib/mpc23s17.c ****   addr &= 0x0E;
 963               	.LM64:
 964 0178 6E70      		andi r22,lo8(14)
 110:../../freeRtos/Lib/mpc23s17.c ****   addr |= 0x40;        //OPCODE 0100 AAA 0 bit0: 0 - zapis, 1 - odczyt 
 111:../../freeRtos/Lib/mpc23s17.c **** 
 112:../../freeRtos/Lib/mpc23s17.c ****   portB = portBout;
 966               	.LM65:
 967 017a 8093 0000 		sts portB,r24
 113:../../freeRtos/Lib/mpc23s17.c **** 
 114:../../freeRtos/Lib/mpc23s17.c ****   spiTake();
 969               	.LM66:
 970 017e 6983      		std Y+1,r22
 971 0180 0E94 0000 		call spiTake
 115:../../freeRtos/Lib/mpc23s17.c ****   enableSpiMPC23S17();
 973               	.LM67:
 974 0184 0E94 0000 		call enableSpiMPC23S17
 116:../../freeRtos/Lib/mpc23s17.c ****   spiSend(addr);
 976               	.LM68:
 977 0188 6981      		ldd r22,Y+1
 978 018a 862F      		mov r24,r22
 979 018c 8064      		ori r24,lo8(64)
 980 018e 0E94 0000 		call spiSend
 117:../../freeRtos/Lib/mpc23s17.c ****   spiSend(B0_OLATB);
 982               	.LM69:
 983 0192 85E1      		ldi r24,lo8(21)
 984 0194 0E94 0000 		call spiSend
 118:../../freeRtos/Lib/mpc23s17.c ****   spiSend(portB);  
 986               	.LM70:
 987 0198 8091 0000 		lds r24,portB
 988 019c 0E94 0000 		call spiSend
 119:../../freeRtos/Lib/mpc23s17.c ****   disableSpiMPC23S17();
 990               	.LM71:
 991 01a0 0E94 0000 		call disableSpiMPC23S17
 120:../../freeRtos/Lib/mpc23s17.c ****   spiGive();
 993               	.LM72:
 994 01a4 0E94 0000 		call spiGive
 995               	/* epilogue start */
 121:../../freeRtos/Lib/mpc23s17.c **** }
 997               	.LM73:
 998 01a8 0F90      		pop __tmp_reg__
 999 01aa CF91      		pop r28
 1000 01ac DF91      		pop r29
 1001 01ae 0895      		ret
 1003               	.Lscope8:
 1005               		.stabd	78,0,0
 1009               	.global	MPC23s17SetBitsOnPortB
 1011               	MPC23s17SetBitsOnPortB:
 1012               		.stabd	46,0,0
 122:../../freeRtos/Lib/mpc23s17.c **** 
 123:../../freeRtos/Lib/mpc23s17.c **** void MPC23s17SetBitsOnPortB(uint8_t portBout, uint8_t addr)
 124:../../freeRtos/Lib/mpc23s17.c **** {
 1014               	.LM74:
 1015               	.LFBB9:
 1016 01b0 DF93      		push r29
 1017 01b2 CF93      		push r28
 1018 01b4 0F92      		push __tmp_reg__
 1019 01b6 CDB7      		in r28,__SP_L__
 1020 01b8 DEB7      		in r29,__SP_H__
 1021               	/* prologue: function */
 1022               	/* frame size = 1 */
 1023               	/* stack size = 3 */
 1024               	.L__stack_usage = 3
 125:../../freeRtos/Lib/mpc23s17.c ****   addr = addr<<1;
 1026               	.LM75:
 1027 01ba 660F      		lsl r22
 126:../../freeRtos/Lib/mpc23s17.c ****   addr &= 0x0E;
 1029               	.LM76:
 1030 01bc 6E70      		andi r22,lo8(14)
 127:../../freeRtos/Lib/mpc23s17.c ****   addr |= 0x40;        //OPCODE 0100 AAA 0 bit0: 0 - zapis, 1 - odczyt 
 128:../../freeRtos/Lib/mpc23s17.c **** 
 129:../../freeRtos/Lib/mpc23s17.c ****   portB |= portBout;
 1032               	.LM77:
 1033 01be 9091 0000 		lds r25,portB
 1034 01c2 982B      		or r25,r24
 1035 01c4 9093 0000 		sts portB,r25
 130:../../freeRtos/Lib/mpc23s17.c **** 
 131:../../freeRtos/Lib/mpc23s17.c ****   spiTake();
 1037               	.LM78:
 1038 01c8 6983      		std Y+1,r22
 1039 01ca 0E94 0000 		call spiTake
 132:../../freeRtos/Lib/mpc23s17.c ****   enableSpiMPC23S17();
 1041               	.LM79:
 1042 01ce 0E94 0000 		call enableSpiMPC23S17
 133:../../freeRtos/Lib/mpc23s17.c ****   spiSend(addr);
 1044               	.LM80:
 1045 01d2 6981      		ldd r22,Y+1
 1046 01d4 862F      		mov r24,r22
 1047 01d6 8064      		ori r24,lo8(64)
 1048 01d8 0E94 0000 		call spiSend
 134:../../freeRtos/Lib/mpc23s17.c ****   spiSend(B0_OLATB);
 1050               	.LM81:
 1051 01dc 85E1      		ldi r24,lo8(21)
 1052 01de 0E94 0000 		call spiSend
 135:../../freeRtos/Lib/mpc23s17.c ****   spiSend(portB);  
 1054               	.LM82:
 1055 01e2 8091 0000 		lds r24,portB
 1056 01e6 0E94 0000 		call spiSend
 136:../../freeRtos/Lib/mpc23s17.c ****   disableSpiMPC23S17();
 1058               	.LM83:
 1059 01ea 0E94 0000 		call disableSpiMPC23S17
 137:../../freeRtos/Lib/mpc23s17.c ****   spiGive();
 1061               	.LM84:
 1062 01ee 0E94 0000 		call spiGive
 1063               	/* epilogue start */
 138:../../freeRtos/Lib/mpc23s17.c **** }
 1065               	.LM85:
 1066 01f2 0F90      		pop __tmp_reg__
 1067 01f4 CF91      		pop r28
 1068 01f6 DF91      		pop r29
 1069 01f8 0895      		ret
 1071               	.Lscope9:
 1073               		.stabd	78,0,0
 1077               	.global	MPC23s17ClearBitsOnPortB
 1079               	MPC23s17ClearBitsOnPortB:
 1080               		.stabd	46,0,0
 139:../../freeRtos/Lib/mpc23s17.c **** 
 140:../../freeRtos/Lib/mpc23s17.c **** void MPC23s17ClearBitsOnPortB(uint8_t portBout, uint8_t addr)
 141:../../freeRtos/Lib/mpc23s17.c **** {
 1082               	.LM86:
 1083               	.LFBB10:
 1084 01fa DF93      		push r29
 1085 01fc CF93      		push r28
 1086 01fe 0F92      		push __tmp_reg__
 1087 0200 CDB7      		in r28,__SP_L__
 1088 0202 DEB7      		in r29,__SP_H__
 1089               	/* prologue: function */
 1090               	/* frame size = 1 */
 1091               	/* stack size = 3 */
 1092               	.L__stack_usage = 3
 142:../../freeRtos/Lib/mpc23s17.c ****   addr = addr<<1;
 1094               	.LM87:
 1095 0204 660F      		lsl r22
 143:../../freeRtos/Lib/mpc23s17.c ****   addr &= 0x0E;
 1097               	.LM88:
 1098 0206 6E70      		andi r22,lo8(14)
 144:../../freeRtos/Lib/mpc23s17.c ****   addr |= 0x40;        //OPCODE 0100 AAA 0 bit0: 0 - zapis, 1 - odczyt 
 145:../../freeRtos/Lib/mpc23s17.c **** 
 146:../../freeRtos/Lib/mpc23s17.c ****   portB &= (~portBout);
 1100               	.LM89:
 1101 0208 9091 0000 		lds r25,portB
 1102 020c 8095      		com r24
 1103 020e 8923      		and r24,r25
 1104 0210 8093 0000 		sts portB,r24
 147:../../freeRtos/Lib/mpc23s17.c **** 
 148:../../freeRtos/Lib/mpc23s17.c ****   spiTake();
 1106               	.LM90:
 1107 0214 6983      		std Y+1,r22
 1108 0216 0E94 0000 		call spiTake
 149:../../freeRtos/Lib/mpc23s17.c ****   enableSpiMPC23S17();
 1110               	.LM91:
 1111 021a 0E94 0000 		call enableSpiMPC23S17
 150:../../freeRtos/Lib/mpc23s17.c ****   spiSend(addr);
 1113               	.LM92:
 1114 021e 6981      		ldd r22,Y+1
 1115 0220 862F      		mov r24,r22
 1116 0222 8064      		ori r24,lo8(64)
 1117 0224 0E94 0000 		call spiSend
 151:../../freeRtos/Lib/mpc23s17.c ****   spiSend(B0_OLATB);
 1119               	.LM93:
 1120 0228 85E1      		ldi r24,lo8(21)
 1121 022a 0E94 0000 		call spiSend
 152:../../freeRtos/Lib/mpc23s17.c ****   spiSend(portB);  
 1123               	.LM94:
 1124 022e 8091 0000 		lds r24,portB
 1125 0232 0E94 0000 		call spiSend
 153:../../freeRtos/Lib/mpc23s17.c **** 
 154:../../freeRtos/Lib/mpc23s17.c ****   disableSpiMPC23S17();
 1127               	.LM95:
 1128 0236 0E94 0000 		call disableSpiMPC23S17
 155:../../freeRtos/Lib/mpc23s17.c ****   spiGive();
 1130               	.LM96:
 1131 023a 0E94 0000 		call spiGive
 1132               	/* epilogue start */
 156:../../freeRtos/Lib/mpc23s17.c **** }
 1134               	.LM97:
 1135 023e 0F90      		pop __tmp_reg__
 1136 0240 CF91      		pop r28
 1137 0242 DF91      		pop r29
 1138 0244 0895      		ret
 1140               	.Lscope10:
 1142               		.stabd	78,0,0
 1145               	.global	MPC23s17ReadPortA
 1147               	MPC23s17ReadPortA:
 1148               		.stabd	46,0,0
 157:../../freeRtos/Lib/mpc23s17.c **** 
 158:../../freeRtos/Lib/mpc23s17.c **** uint8_t MPC23s17ReadPortA(uint8_t addr)
 159:../../freeRtos/Lib/mpc23s17.c **** {
 1150               	.LM98:
 1151               	.LFBB11:
 1152 0246 1F93      		push r17
 1153 0248 DF93      		push r29
 1154 024a CF93      		push r28
 1155 024c 0F92      		push __tmp_reg__
 1156 024e CDB7      		in r28,__SP_L__
 1157 0250 DEB7      		in r29,__SP_H__
 1158               	/* prologue: function */
 1159               	/* frame size = 1 */
 1160               	/* stack size = 4 */
 1161               	.L__stack_usage = 4
 160:../../freeRtos/Lib/mpc23s17.c ****   addr = addr<<1;
 1163               	.LM99:
 1164 0252 182F      		mov r17,r24
 1165 0254 110F      		lsl r17
 161:../../freeRtos/Lib/mpc23s17.c ****   addr &= 0x0E;
 1167               	.LM100:
 1168 0256 1E70      		andi r17,lo8(14)
 162:../../freeRtos/Lib/mpc23s17.c ****   addr |= 0x41;        //OPCODE 0100 AAA 0 bit0: 0 - zapis, 1 - odczyt 
 1170               	.LM101:
 1171 0258 1164      		ori r17,lo8(65)
 163:../../freeRtos/Lib/mpc23s17.c **** 
 164:../../freeRtos/Lib/mpc23s17.c ****   spiTake();
 1173               	.LM102:
 1174 025a 0E94 0000 		call spiTake
 165:../../freeRtos/Lib/mpc23s17.c ****   enableSpiMPC23S17();
 1176               	.LM103:
 1177 025e 0E94 0000 		call enableSpiMPC23S17
 166:../../freeRtos/Lib/mpc23s17.c **** 
 167:../../freeRtos/Lib/mpc23s17.c ****   spiSend(addr);
 1179               	.LM104:
 1180 0262 812F      		mov r24,r17
 1181 0264 0E94 0000 		call spiSend
 168:../../freeRtos/Lib/mpc23s17.c ****   spiSend(B0_GPIOA);
 1183               	.LM105:
 1184 0268 82E1      		ldi r24,lo8(18)
 1185 026a 0E94 0000 		call spiSend
 169:../../freeRtos/Lib/mpc23s17.c ****   uint8_t result = spiSend(addr);  
 1187               	.LM106:
 1188 026e 812F      		mov r24,r17
 1189 0270 0E94 0000 		call spiSend
 170:../../freeRtos/Lib/mpc23s17.c **** 
 171:../../freeRtos/Lib/mpc23s17.c ****   disableSpiMPC23S17();
 1191               	.LM107:
 1192 0274 8983      		std Y+1,r24
 1193 0276 0E94 0000 		call disableSpiMPC23S17
 172:../../freeRtos/Lib/mpc23s17.c ****   spiGive();
 1195               	.LM108:
 1196 027a 0E94 0000 		call spiGive
 173:../../freeRtos/Lib/mpc23s17.c **** 
 174:../../freeRtos/Lib/mpc23s17.c ****   return result; 
 175:../../freeRtos/Lib/mpc23s17.c **** }
 1198               	.LM109:
 1199 027e 8981      		ldd r24,Y+1
 1200               	/* epilogue start */
 1201 0280 0F90      		pop __tmp_reg__
 1202 0282 CF91      		pop r28
 1203 0284 DF91      		pop r29
 1204 0286 1F91      		pop r17
 1205 0288 0895      		ret
 1210               	.Lscope11:
 1212               		.stabd	78,0,0
 1215               	.global	MPC23s17ReadPortB
 1217               	MPC23s17ReadPortB:
 1218               		.stabd	46,0,0
 176:../../freeRtos/Lib/mpc23s17.c **** 
 177:../../freeRtos/Lib/mpc23s17.c **** uint8_t MPC23s17ReadPortB(uint8_t addr)
 178:../../freeRtos/Lib/mpc23s17.c **** {
 1220               	.LM110:
 1221               	.LFBB12:
 1222 028a 1F93      		push r17
 1223 028c DF93      		push r29
 1224 028e CF93      		push r28
 1225 0290 0F92      		push __tmp_reg__
 1226 0292 CDB7      		in r28,__SP_L__
 1227 0294 DEB7      		in r29,__SP_H__
 1228               	/* prologue: function */
 1229               	/* frame size = 1 */
 1230               	/* stack size = 4 */
 1231               	.L__stack_usage = 4
 179:../../freeRtos/Lib/mpc23s17.c ****   addr = addr<<1;
 1233               	.LM111:
 1234 0296 182F      		mov r17,r24
 1235 0298 110F      		lsl r17
 180:../../freeRtos/Lib/mpc23s17.c ****   addr &= 0x0E;
 1237               	.LM112:
 1238 029a 1E70      		andi r17,lo8(14)
 181:../../freeRtos/Lib/mpc23s17.c ****   addr |= 0x41;        //OPCODE 0100 AAA 0 bit0: 0 - zapis, 1 - odczyt 
 1240               	.LM113:
 1241 029c 1164      		ori r17,lo8(65)
 182:../../freeRtos/Lib/mpc23s17.c **** 
 183:../../freeRtos/Lib/mpc23s17.c ****   spiTake();
 1243               	.LM114:
 1244 029e 0E94 0000 		call spiTake
 184:../../freeRtos/Lib/mpc23s17.c ****   enableSpiMPC23S17();
 1246               	.LM115:
 1247 02a2 0E94 0000 		call enableSpiMPC23S17
 185:../../freeRtos/Lib/mpc23s17.c **** 
 186:../../freeRtos/Lib/mpc23s17.c ****   spiSend(addr);
 1249               	.LM116:
 1250 02a6 812F      		mov r24,r17
 1251 02a8 0E94 0000 		call spiSend
 187:../../freeRtos/Lib/mpc23s17.c ****   spiSend(B0_GPIOB);
 1253               	.LM117:
 1254 02ac 83E1      		ldi r24,lo8(19)
 1255 02ae 0E94 0000 		call spiSend
 188:../../freeRtos/Lib/mpc23s17.c ****   uint8_t result = spiSend(addr);  
 1257               	.LM118:
 1258 02b2 812F      		mov r24,r17
 1259 02b4 0E94 0000 		call spiSend
 189:../../freeRtos/Lib/mpc23s17.c **** 
 190:../../freeRtos/Lib/mpc23s17.c ****   disableSpiMPC23S17();
 1261               	.LM119:
 1262 02b8 8983      		std Y+1,r24
 1263 02ba 0E94 0000 		call disableSpiMPC23S17
 191:../../freeRtos/Lib/mpc23s17.c ****   spiGive();
 1265               	.LM120:
 1266 02be 0E94 0000 		call spiGive
 192:../../freeRtos/Lib/mpc23s17.c **** 
 193:../../freeRtos/Lib/mpc23s17.c ****   return result; 
 194:../../freeRtos/Lib/mpc23s17.c **** }
 1268               	.LM121:
 1269 02c2 8981      		ldd r24,Y+1
 1270               	/* epilogue start */
 1271 02c4 0F90      		pop __tmp_reg__
 1272 02c6 CF91      		pop r28
 1273 02c8 DF91      		pop r29
 1274 02ca 1F91      		pop r17
 1275 02cc 0895      		ret
 1280               	.Lscope12:
 1282               		.stabd	78,0,0
 1283               		.comm klastry,128,1
 1284               		.comm wwwport,1,1
 1285               		.comm rollers,2,1
 1286               		.comm xSemaphoreSpiSS,2,1
 1287               		.comm lockSensors,2,1
 1288               		.comm xSemaphoreRs485,2,1
 1289               		.comm nicState,14,1
 1290               		.comm plen,2,1
 1291               		.comm IpMyConfig,15,1
 1292               		.comm arpDebug,2,1
 1293               		.comm arpDebugLevel,1,1
 1294               		.comm icmpDebug,2,1
 1295               		.comm icmpDebugLevel,1,1
 1296               		.comm udpSocket,2,1
 1297               		.comm udpDbgStream,2,1
 1298               		.comm udpDbgLevel,1,1
 1299               		.comm tcpDebugStream,2,1
 1300               		.comm tcpDebugLevel,1,1
 1301               		.comm sockets,2,1
 1302               		.comm czasRtc,7,1
 1303               		.comm portA,1,1
 1304               		.comm portB,1,1
 1327               		.weak	spiSend
 1329               	.Letext0:
 1330               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:00000000 mpc23s17.c
     /tmp/ccDdSUSC.s:2      *ABS*:0000003f __SREG__
     /tmp/ccDdSUSC.s:3      *ABS*:0000003e __SP_H__
     /tmp/ccDdSUSC.s:4      *ABS*:0000003d __SP_L__
     /tmp/ccDdSUSC.s:5      *ABS*:00000034 __CCP__
     /tmp/ccDdSUSC.s:6      *ABS*:00000000 __tmp_reg__
     /tmp/ccDdSUSC.s:7      *ABS*:00000001 __zero_reg__
     /tmp/ccDdSUSC.s:565    .text:00000000 enableSpiMPC23S17
     /tmp/ccDdSUSC.s:585    .text:00000002 disableSpiMPC23S17
     /tmp/ccDdSUSC.s:607    .text:00000004 MPC23s17SetDirA
     /tmp/ccDdSUSC.s:673    .text:00000048 MPC23s17SetDirB
     /tmp/ccDdSUSC.s:739    .text:0000008c MPC23s17SetPortA
                            *COM*:00000001 portA
     /tmp/ccDdSUSC.s:808    .text:000000d6 MPC23s17SetBitsOnPortA
     /tmp/ccDdSUSC.s:876    .text:00000120 MPC23s17ClearBitsOnPortA
     /tmp/ccDdSUSC.s:945    .text:0000016c MPC23s17SetPortB
                            *COM*:00000001 portB
     /tmp/ccDdSUSC.s:1011   .text:000001b0 MPC23s17SetBitsOnPortB
     /tmp/ccDdSUSC.s:1079   .text:000001fa MPC23s17ClearBitsOnPortB
     /tmp/ccDdSUSC.s:1147   .text:00000246 MPC23s17ReadPortA
     /tmp/ccDdSUSC.s:1217   .text:0000028a MPC23s17ReadPortB
                            *COM*:00000080 klastry
                            *COM*:00000001 wwwport
                            *COM*:00000002 rollers
                            *COM*:00000002 xSemaphoreSpiSS
                            *COM*:00000002 lockSensors
                            *COM*:00000002 xSemaphoreRs485
                            *COM*:0000000e nicState
                            *COM*:00000002 plen
                            *COM*:0000000f IpMyConfig
                            *COM*:00000002 arpDebug
                            *COM*:00000001 arpDebugLevel
                            *COM*:00000002 icmpDebug
                            *COM*:00000001 icmpDebugLevel
                            *COM*:00000002 udpSocket
                            *COM*:00000002 udpDbgStream
                            *COM*:00000001 udpDbgLevel
                            *COM*:00000002 tcpDebugStream
                            *COM*:00000001 tcpDebugLevel
                            *COM*:00000002 sockets
                            *COM*:00000007 czasRtc

UNDEFINED SYMBOLS
spiTake
spiSend
spiGive
__do_clear_bss
