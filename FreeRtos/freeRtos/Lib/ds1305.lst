   1               		.file	"ds1305.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__ = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
  10               		.text
  11               	.Ltext0:
 444               		.weak	spiEnableDS1305
 446               	spiEnableDS1305:
 447               		.stabd	46,0,0
   1:../../freeRtos/Lib/ds1305.c **** /*********************************************
   2:../../freeRtos/Lib/ds1305.c ****  * vim:sw=8:ts=8:si:et
   3:../../freeRtos/Lib/ds1305.c ****  * To use the above modeline in vim you must have "set modeline" in your .vimrc
   4:../../freeRtos/Lib/ds1305.c ****  * Author: Guido Socher 
   5:../../freeRtos/Lib/ds1305.c ****  * Copyright: GPL V2
   6:../../freeRtos/Lib/ds1305.c ****  * http://www.gnu.org/licenses/gpl.html
   7:../../freeRtos/Lib/ds1305.c ****  *
   8:../../freeRtos/Lib/ds1305.c ****  * Based on the enc28j60.c file from the AVRlib library by Pascal Stang.
   9:../../freeRtos/Lib/ds1305.c ****  * For AVRlib See http://www.procyonengineering.com/
  10:../../freeRtos/Lib/ds1305.c ****  * Used with explicit permission of Pascal Stang.
  11:../../freeRtos/Lib/ds1305.c ****  *
  12:../../freeRtos/Lib/ds1305.c ****  * Title: Microchip ENC28J60 Ethernet Interface Driver
  13:../../freeRtos/Lib/ds1305.c ****  * Chip type           : ATMEGA88 with ENC28J60
  14:../../freeRtos/Lib/ds1305.c ****  *********************************************/
  15:../../freeRtos/Lib/ds1305.c **** #include <avr/io.h>
  16:../../freeRtos/Lib/ds1305.c **** #include <util/delay.h>
  17:../../freeRtos/Lib/ds1305.c **** #include "ds1305.h"
  18:../../freeRtos/Lib/ds1305.c **** #include "spiXmega.h"
  19:../../freeRtos/Lib/ds1305.c **** 
  20:../../freeRtos/Lib/ds1305.c **** void spiEnableDS1305(void)  {};
 449               	.LM0:
 450               	.LFBB1:
 451               	/* prologue: function */
 452               	/* frame size = 0 */
 453               	/* stack size = 0 */
 454               	.L__stack_usage = 0
 455               	/* epilogue start */
 457               	.LM1:
 458 0000 0895      		ret
 460               	.Lscope1:
 462               		.stabd	78,0,0
 464               		.weak	spiDisableDS1305
 466               	spiDisableDS1305:
 467               		.stabd	46,0,0
  21:../../freeRtos/Lib/ds1305.c **** void spiDisableDS1305(void) {};
 469               	.LM2:
 470               	.LFBB2:
 471               	/* prologue: function */
 472               	/* frame size = 0 */
 473               	/* stack size = 0 */
 474               	.L__stack_usage = 0
 475               	/* epilogue start */
 477               	.LM3:
 478 0002 0895      		ret
 480               	.Lscope2:
 482               		.stabd	78,0,0
 484               	.global	readTimeBCD
 486               	readTimeBCD:
 487               		.stabd	46,0,0
  22:../../freeRtos/Lib/ds1305.c **** 
  23:../../freeRtos/Lib/ds1305.c **** 
  24:../../freeRtos/Lib/ds1305.c **** void readTimeBCD(timeBCD_t *time)
  25:../../freeRtos/Lib/ds1305.c **** {
 489               	.LM4:
 490               	.LFBB3:
 491 0004 EF92      		push r14
 492 0006 FF92      		push r15
 493 0008 1F93      		push r17
 494 000a DF93      		push r29
 495 000c CF93      		push r28
 496 000e 0F92      		push __tmp_reg__
 497 0010 0F92      		push __tmp_reg__
 498 0012 CDB7      		in r28,__SP_L__
 499 0014 DEB7      		in r29,__SP_H__
 500               	/* prologue: function */
 501               	/* frame size = 2 */
 502               	/* stack size = 7 */
 503               	.L__stack_usage = 7
  26:../../freeRtos/Lib/ds1305.c ****   spiTake();
 505               	.LM5:
 506 0016 8983      		std Y+1,r24
 507 0018 9A83      		std Y+2,r25
 508 001a 0E94 0000 		call spiTake
  27:../../freeRtos/Lib/ds1305.c ****   spiEnableDS1305();
 510               	.LM6:
 511 001e 0E94 0000 		call spiEnableDS1305
  28:../../freeRtos/Lib/ds1305.c ****   
  29:../../freeRtos/Lib/ds1305.c ****   uint8_t *ptr = (uint8_t *)(time);
 513               	.LM7:
 514 0022 8981      		ldd r24,Y+1
 515 0024 9A81      		ldd r25,Y+2
 516 0026 482F      		mov r20,r24
 517 0028 592F      		mov r21,r25
 518 002a 7A01      		movw r14,r20
  30:../../freeRtos/Lib/ds1305.c ****   uint8_t i;
  31:../../freeRtos/Lib/ds1305.c ****   
  32:../../freeRtos/Lib/ds1305.c ****   spiSend(0x00);
 520               	.LM8:
 521 002c 80E0      		ldi r24,lo8(0)
 522 002e 0E94 0000 		call spiSend
  33:../../freeRtos/Lib/ds1305.c **** 
  34:../../freeRtos/Lib/ds1305.c ****   for (i=0; i<sizeof(timeBCD_t); i++)
 524               	.LM9:
 525 0032 10E0      		ldi r17,lo8(0)
 526               	.L4:
  35:../../freeRtos/Lib/ds1305.c ****   {
  36:../../freeRtos/Lib/ds1305.c ****     *ptr = spiSend(i);
 528               	.LM10:
 529 0034 812F      		mov r24,r17
 530 0036 0E94 0000 		call spiSend
 531 003a F701      		movw r30,r14
 532 003c 8193      		st Z+,r24
 533 003e 7F01      		movw r14,r30
  34:../../freeRtos/Lib/ds1305.c ****   for (i=0; i<sizeof(timeBCD_t); i++)
 535               	.LM11:
 536 0040 1F5F      		subi r17,lo8(-(1))
 537 0042 1730      		cpi r17,lo8(7)
 538 0044 01F4      		brne .L4
  37:../../freeRtos/Lib/ds1305.c ****     ptr++;
  38:../../freeRtos/Lib/ds1305.c ****   }  
  39:../../freeRtos/Lib/ds1305.c ****   spiDisableDS1305();  
 540               	.LM12:
 541 0046 0E94 0000 		call spiDisableDS1305
  40:../../freeRtos/Lib/ds1305.c ****   spiGive();
 543               	.LM13:
 544 004a 0E94 0000 		call spiGive
 545               	/* epilogue start */
  41:../../freeRtos/Lib/ds1305.c **** }
 547               	.LM14:
 548 004e 0F90      		pop __tmp_reg__
 549 0050 0F90      		pop __tmp_reg__
 550 0052 CF91      		pop r28
 551 0054 DF91      		pop r29
 552 0056 1F91      		pop r17
 553 0058 FF90      		pop r15
 554 005a EF90      		pop r14
 555 005c 0895      		ret
 561               	.Lscope3:
 563               		.stabd	78,0,0
 566               	.global	readTimeDecoded
 568               	readTimeDecoded:
 569               		.stabd	46,0,0
  42:../../freeRtos/Lib/ds1305.c **** 
  43:../../freeRtos/Lib/ds1305.c **** #if USE_DECODED_TIME_STRUCT
  44:../../freeRtos/Lib/ds1305.c **** void readTimeDecoded(timeDecoded_t *time)
  45:../../freeRtos/Lib/ds1305.c **** {
 571               	.LM15:
 572               	.LFBB4:
 573               	/* prologue: function */
 574               	/* frame size = 0 */
 575               	/* stack size = 0 */
 576               	.L__stack_usage = 0
  46:../../freeRtos/Lib/ds1305.c ****   readTimeBCD((timeBCD_t *)(time));
 578               	.LM16:
 579 005e 0E94 0000 		call readTimeBCD
 580               	/* epilogue start */
  47:../../freeRtos/Lib/ds1305.c **** }
 582               	.LM17:
 583 0062 0895      		ret
 585               	.Lscope4:
 587               		.stabd	78,0,0
 590               	.global	readTime
 592               	readTime:
 593               		.stabd	46,0,0
  48:../../freeRtos/Lib/ds1305.c **** void readTime (time_t *time)
  49:../../freeRtos/Lib/ds1305.c **** {
 595               	.LM18:
 596               	.LFBB5:
 597               	/* prologue: function */
 598               	/* frame size = 0 */
 599               	/* stack size = 0 */
 600               	.L__stack_usage = 0
  50:../../freeRtos/Lib/ds1305.c ****   readTimeBCD((timeBCD_t *)(time));
 602               	.LM19:
 603 0064 0E94 0000 		call readTimeBCD
 604               	/* epilogue start */
  51:../../freeRtos/Lib/ds1305.c **** }
 606               	.LM20:
 607 0068 0895      		ret
 609               	.Lscope5:
 611               		.stabd	78,0,0
 613               	.global	setTimeBCD
 615               	setTimeBCD:
 616               		.stabd	46,0,0
  52:../../freeRtos/Lib/ds1305.c **** #endif /* USE_DECODED_TIME_STRUCT */
  53:../../freeRtos/Lib/ds1305.c **** 
  54:../../freeRtos/Lib/ds1305.c **** 
  55:../../freeRtos/Lib/ds1305.c **** void setTimeBCD(timeBCD_t *time)
  56:../../freeRtos/Lib/ds1305.c **** {
 618               	.LM21:
 619               	.LFBB6:
 620 006a EF92      		push r14
 621 006c FF92      		push r15
 622 006e 0F93      		push r16
 623 0070 1F93      		push r17
 624 0072 DF93      		push r29
 625 0074 CF93      		push r28
 626 0076 0F92      		push __tmp_reg__
 627 0078 0F92      		push __tmp_reg__
 628 007a CDB7      		in r28,__SP_L__
 629 007c DEB7      		in r29,__SP_H__
 630               	/* prologue: function */
 631               	/* frame size = 2 */
 632               	/* stack size = 8 */
 633               	.L__stack_usage = 8
  57:../../freeRtos/Lib/ds1305.c ****   spiTake();
 635               	.LM22:
 636 007e 8983      		std Y+1,r24
 637 0080 9A83      		std Y+2,r25
 638 0082 0E94 0000 		call spiTake
  58:../../freeRtos/Lib/ds1305.c ****   spiEnableDS1305();
 640               	.LM23:
 641 0086 0E94 0000 		call spiEnableDS1305
  59:../../freeRtos/Lib/ds1305.c ****   
  60:../../freeRtos/Lib/ds1305.c ****   uint8_t *ptr = (uint8_t *)(time);
 643               	.LM24:
 644 008a 8981      		ldd r24,Y+1
 645 008c 482F      		mov r20,r24
 646 008e 9A81      		ldd r25,Y+2
 647 0090 592F      		mov r21,r25
 648 0092 7A01      		movw r14,r20
  61:../../freeRtos/Lib/ds1305.c ****   uint8_t i;
  62:../../freeRtos/Lib/ds1305.c ****   spiSend(0x80);
 650               	.LM25:
 651 0094 80E8      		ldi r24,lo8(-128)
 652 0096 0E94 0000 		call spiSend
  55:../../freeRtos/Lib/ds1305.c **** void setTimeBCD(timeBCD_t *time)
 654               	.LM26:
 655 009a 8701      		movw r16,r14
 656 009c 095F      		subi r16,lo8(-(7))
 657 009e 1F4F      		sbci r17,hi8(-(7))
 658               	.L9:
  63:../../freeRtos/Lib/ds1305.c ****   for (i=0; i<sizeof(timeBCD_t); i++)
  64:../../freeRtos/Lib/ds1305.c ****   {
  65:../../freeRtos/Lib/ds1305.c ****     spiSend(*ptr);
 660               	.LM27:
 661 00a0 F701      		movw r30,r14
 662 00a2 8191      		ld r24,Z+
 663 00a4 7F01      		movw r14,r30
 664 00a6 0E94 0000 		call spiSend
  63:../../freeRtos/Lib/ds1305.c ****   for (i=0; i<sizeof(timeBCD_t); i++)
 666               	.LM28:
 667 00aa E016      		cp r14,r16
 668 00ac F106      		cpc r15,r17
 669 00ae 01F4      		brne .L9
  66:../../freeRtos/Lib/ds1305.c ****     ptr++;
  67:../../freeRtos/Lib/ds1305.c ****   }  
  68:../../freeRtos/Lib/ds1305.c ****   
  69:../../freeRtos/Lib/ds1305.c ****   spiDisableDS1305();  
 671               	.LM29:
 672 00b0 0E94 0000 		call spiDisableDS1305
  70:../../freeRtos/Lib/ds1305.c ****   spiGive();
 674               	.LM30:
 675 00b4 0E94 0000 		call spiGive
 676               	/* epilogue start */
  71:../../freeRtos/Lib/ds1305.c **** }
 678               	.LM31:
 679 00b8 0F90      		pop __tmp_reg__
 680 00ba 0F90      		pop __tmp_reg__
 681 00bc CF91      		pop r28
 682 00be DF91      		pop r29
 683 00c0 1F91      		pop r17
 684 00c2 0F91      		pop r16
 685 00c4 FF90      		pop r15
 686 00c6 EF90      		pop r14
 687 00c8 0895      		ret
 692               	.Lscope6:
 694               		.stabd	78,0,0
 697               	.global	setTimeDecoded
 699               	setTimeDecoded:
 700               		.stabd	46,0,0
  72:../../freeRtos/Lib/ds1305.c **** 
  73:../../freeRtos/Lib/ds1305.c **** #if USE_DECODED_TIME_STRUCT
  74:../../freeRtos/Lib/ds1305.c **** void setTimeDecoded(timeDecoded_t *time)
  75:../../freeRtos/Lib/ds1305.c **** {
 702               	.LM32:
 703               	.LFBB7:
 704               	/* prologue: function */
 705               	/* frame size = 0 */
 706               	/* stack size = 0 */
 707               	.L__stack_usage = 0
  76:../../freeRtos/Lib/ds1305.c ****   setTimeBCD((timeBCD_t *)(time));
 709               	.LM33:
 710 00ca 0E94 0000 		call setTimeBCD
 711               	/* epilogue start */
  77:../../freeRtos/Lib/ds1305.c **** }
 713               	.LM34:
 714 00ce 0895      		ret
 716               	.Lscope7:
 718               		.stabd	78,0,0
 721               	.global	setTime
 723               	setTime:
 724               		.stabd	46,0,0
  78:../../freeRtos/Lib/ds1305.c **** void setTime(time_t *time)
  79:../../freeRtos/Lib/ds1305.c **** {
 726               	.LM35:
 727               	.LFBB8:
 728               	/* prologue: function */
 729               	/* frame size = 0 */
 730               	/* stack size = 0 */
 731               	.L__stack_usage = 0
  80:../../freeRtos/Lib/ds1305.c ****   setTimeBCD((timeBCD_t *)(time));
 733               	.LM36:
 734 00d0 0E94 0000 		call setTimeBCD
 735               	/* epilogue start */
  81:../../freeRtos/Lib/ds1305.c **** }
 737               	.LM37:
 738 00d4 0895      		ret
 740               	.Lscope8:
 742               		.stabd	78,0,0
 744               	.global	ds1305start
 746               	ds1305start:
 747               		.stabd	46,0,0
  82:../../freeRtos/Lib/ds1305.c **** #endif /* USE_DECODED_TIME_STRUCT */
  83:../../freeRtos/Lib/ds1305.c **** 
  84:../../freeRtos/Lib/ds1305.c **** void ds1305start(void)
  85:../../freeRtos/Lib/ds1305.c **** {  
 749               	.LM38:
 750               	.LFBB9:
 751               	/* prologue: function */
 752               	/* frame size = 0 */
 753               	/* stack size = 0 */
 754               	.L__stack_usage = 0
  86:../../freeRtos/Lib/ds1305.c ****   spiTake();
 756               	.LM39:
 757 00d6 0E94 0000 		call spiTake
  87:../../freeRtos/Lib/ds1305.c ****   spiEnableDS1305();
 759               	.LM40:
 760 00da 0E94 0000 		call spiEnableDS1305
  88:../../freeRtos/Lib/ds1305.c **** 
  89:../../freeRtos/Lib/ds1305.c ****   spiSend(0x8F);
 762               	.LM41:
 763 00de 8FE8      		ldi r24,lo8(-113)
 764 00e0 0E94 0000 		call spiSend
  90:../../freeRtos/Lib/ds1305.c ****   spiSend(0x00);
 766               	.LM42:
 767 00e4 80E0      		ldi r24,lo8(0)
 768 00e6 0E94 0000 		call spiSend
  91:../../freeRtos/Lib/ds1305.c ****   
  92:../../freeRtos/Lib/ds1305.c ****   spiDisableDS1305();  
 770               	.LM43:
 771 00ea 0E94 0000 		call spiDisableDS1305
  93:../../freeRtos/Lib/ds1305.c ****   spiGive();
 773               	.LM44:
 774 00ee 0E94 0000 		call spiGive
 775               	/* epilogue start */
  94:../../freeRtos/Lib/ds1305.c **** 
  95:../../freeRtos/Lib/ds1305.c ****   return;
  96:../../freeRtos/Lib/ds1305.c **** }
 777               	.LM45:
 778 00f2 0895      		ret
 780               	.Lscope9:
 782               		.stabd	78,0,0
 787               	.global	ds1305writeMem
 789               	ds1305writeMem:
 790               		.stabd	46,0,0
  97:../../freeRtos/Lib/ds1305.c **** 
  98:../../freeRtos/Lib/ds1305.c **** 
  99:../../freeRtos/Lib/ds1305.c **** uint8_t ds1305writeMem      (uint8_t addr, uint8_t length, uint8_t *data)
 100:../../freeRtos/Lib/ds1305.c **** {
 792               	.LM46:
 793               	.LFBB10:
 794 00f4 EF92      		push r14
 795 00f6 FF92      		push r15
 796 00f8 1F93      		push r17
 797 00fa DF93      		push r29
 798 00fc CF93      		push r28
 799 00fe 0F92      		push __tmp_reg__
 800 0100 CDB7      		in r28,__SP_L__
 801 0102 DEB7      		in r29,__SP_H__
 802               	/* prologue: function */
 803               	/* frame size = 1 */
 804               	/* stack size = 6 */
 805               	.L__stack_usage = 6
 806 0104 162F      		mov r17,r22
 807 0106 7A01      		movw r14,r20
 101:../../freeRtos/Lib/ds1305.c ****   if (addr > 95)
 809               	.LM47:
 810 0108 8036      		cpi r24,lo8(96)
 811 010a 00F4      		brsh .L18
 102:../../freeRtos/Lib/ds1305.c ****     return 1;
 103:../../freeRtos/Lib/ds1305.c ****   if (addr + length > 95)
 813               	.LM48:
 814 010c 282F      		mov r18,r24
 815 010e 30E0      		ldi r19,lo8(0)
 816 0110 260F      		add r18,r22
 817 0112 311D      		adc r19,__zero_reg__
 818 0114 2036      		cpi r18,96
 819 0116 3105      		cpc r19,__zero_reg__
 820 0118 04F4      		brge .L19
 104:../../freeRtos/Lib/ds1305.c ****     return 2;
 105:../../freeRtos/Lib/ds1305.c **** 
 106:../../freeRtos/Lib/ds1305.c ****   addr += 0xA0;
 107:../../freeRtos/Lib/ds1305.c ****   
 108:../../freeRtos/Lib/ds1305.c ****   spiTake();
 822               	.LM49:
 823 011a 8983      		std Y+1,r24
 824 011c 0E94 0000 		call spiTake
 109:../../freeRtos/Lib/ds1305.c ****   spiEnableDS1305();
 826               	.LM50:
 827 0120 0E94 0000 		call spiEnableDS1305
 110:../../freeRtos/Lib/ds1305.c **** 
 111:../../freeRtos/Lib/ds1305.c ****   spiSend(addr);
 829               	.LM51:
 830 0124 8981      		ldd r24,Y+1
 831 0126 8056      		subi r24,lo8(-(-96))
 832 0128 0E94 0000 		call spiSend
 112:../../freeRtos/Lib/ds1305.c ****   while (length > 0)
 834               	.LM52:
 835 012c 00C0      		rjmp .L16
 836               	.L17:
 113:../../freeRtos/Lib/ds1305.c ****   {
 114:../../freeRtos/Lib/ds1305.c ****     spiSend(*data);
 838               	.LM53:
 839 012e F701      		movw r30,r14
 840 0130 8191      		ld r24,Z+
 841 0132 7F01      		movw r14,r30
 842 0134 0E94 0000 		call spiSend
 115:../../freeRtos/Lib/ds1305.c ****     data++;
 116:../../freeRtos/Lib/ds1305.c ****     length--;
 844               	.LM54:
 845 0138 1150      		subi r17,lo8(-(-1))
 846               	.L16:
 112:../../freeRtos/Lib/ds1305.c ****   while (length > 0)
 848               	.LM55:
 849 013a 1123      		tst r17
 850 013c 01F4      		brne .L17
 117:../../freeRtos/Lib/ds1305.c ****   }
 118:../../freeRtos/Lib/ds1305.c ****   
 119:../../freeRtos/Lib/ds1305.c ****   spiDisableDS1305();  
 852               	.LM56:
 853 013e 0E94 0000 		call spiDisableDS1305
 120:../../freeRtos/Lib/ds1305.c ****   spiGive();
 855               	.LM57:
 856 0142 0E94 0000 		call spiGive
 121:../../freeRtos/Lib/ds1305.c ****   return 0;
 858               	.LM58:
 859 0146 80E0      		ldi r24,lo8(0)
 860 0148 00C0      		rjmp .L15
 861               	.L18:
 102:../../freeRtos/Lib/ds1305.c ****     return 1;
 863               	.LM59:
 864 014a 81E0      		ldi r24,lo8(1)
 865 014c 00C0      		rjmp .L15
 866               	.L19:
 104:../../freeRtos/Lib/ds1305.c ****     return 2;
 868               	.LM60:
 869 014e 82E0      		ldi r24,lo8(2)
 870               	.L15:
 871               	/* epilogue start */
 122:../../freeRtos/Lib/ds1305.c **** }
 873               	.LM61:
 874 0150 0F90      		pop __tmp_reg__
 875 0152 CF91      		pop r28
 876 0154 DF91      		pop r29
 877 0156 1F91      		pop r17
 878 0158 FF90      		pop r15
 879 015a EF90      		pop r14
 880 015c 0895      		ret
 882               	.Lscope10:
 884               		.stabd	78,0,0
 889               	.global	ds1305readMem
 891               	ds1305readMem:
 892               		.stabd	46,0,0
 123:../../freeRtos/Lib/ds1305.c **** uint8_t ds1305readMem       (uint8_t addr, uint8_t length, uint8_t *data)
 124:../../freeRtos/Lib/ds1305.c **** {
 894               	.LM62:
 895               	.LFBB11:
 896 015e EF92      		push r14
 897 0160 FF92      		push r15
 898 0162 1F93      		push r17
 899 0164 DF93      		push r29
 900 0166 CF93      		push r28
 901 0168 0F92      		push __tmp_reg__
 902 016a CDB7      		in r28,__SP_L__
 903 016c DEB7      		in r29,__SP_H__
 904               	/* prologue: function */
 905               	/* frame size = 1 */
 906               	/* stack size = 6 */
 907               	.L__stack_usage = 6
 908 016e 162F      		mov r17,r22
 909 0170 7A01      		movw r14,r20
 125:../../freeRtos/Lib/ds1305.c ****   if (addr >95)
 911               	.LM63:
 912 0172 8036      		cpi r24,lo8(96)
 913 0174 00F4      		brsh .L24
 126:../../freeRtos/Lib/ds1305.c ****     return 1;
 127:../../freeRtos/Lib/ds1305.c ****   if (addr + length > 95)
 915               	.LM64:
 916 0176 282F      		mov r18,r24
 917 0178 30E0      		ldi r19,lo8(0)
 918 017a 260F      		add r18,r22
 919 017c 311D      		adc r19,__zero_reg__
 920 017e 2036      		cpi r18,96
 921 0180 3105      		cpc r19,__zero_reg__
 922 0182 04F4      		brge .L25
 128:../../freeRtos/Lib/ds1305.c ****     return 2;
 129:../../freeRtos/Lib/ds1305.c ****   
 130:../../freeRtos/Lib/ds1305.c ****   addr += 0x20;
 131:../../freeRtos/Lib/ds1305.c ****   
 132:../../freeRtos/Lib/ds1305.c ****   spiTake();
 924               	.LM65:
 925 0184 8983      		std Y+1,r24
 926 0186 0E94 0000 		call spiTake
 133:../../freeRtos/Lib/ds1305.c ****   spiEnableDS1305();
 928               	.LM66:
 929 018a 0E94 0000 		call spiEnableDS1305
 134:../../freeRtos/Lib/ds1305.c **** 
 135:../../freeRtos/Lib/ds1305.c ****   spiSend(addr);
 931               	.LM67:
 932 018e 8981      		ldd r24,Y+1
 933 0190 805E      		subi r24,lo8(-(32))
 934 0192 0E94 0000 		call spiSend
 136:../../freeRtos/Lib/ds1305.c ****   while (length > 0)
 936               	.LM68:
 937 0196 00C0      		rjmp .L22
 938               	.L23:
 137:../../freeRtos/Lib/ds1305.c ****   {
 138:../../freeRtos/Lib/ds1305.c ****     *data = spiSend(0);
 940               	.LM69:
 941 0198 80E0      		ldi r24,lo8(0)
 942 019a 0E94 0000 		call spiSend
 943 019e F701      		movw r30,r14
 944 01a0 8193      		st Z+,r24
 945 01a2 7F01      		movw r14,r30
 139:../../freeRtos/Lib/ds1305.c ****     data++;
 140:../../freeRtos/Lib/ds1305.c ****     length--;
 947               	.LM70:
 948 01a4 1150      		subi r17,lo8(-(-1))
 949               	.L22:
 136:../../freeRtos/Lib/ds1305.c ****   while (length > 0)
 951               	.LM71:
 952 01a6 1123      		tst r17
 953 01a8 01F4      		brne .L23
 141:../../freeRtos/Lib/ds1305.c ****   }
 142:../../freeRtos/Lib/ds1305.c ****   
 143:../../freeRtos/Lib/ds1305.c ****   spiDisableDS1305();  
 955               	.LM72:
 956 01aa 0E94 0000 		call spiDisableDS1305
 144:../../freeRtos/Lib/ds1305.c ****   spiGive();
 958               	.LM73:
 959 01ae 0E94 0000 		call spiGive
 145:../../freeRtos/Lib/ds1305.c ****   return 0;
 961               	.LM74:
 962 01b2 80E0      		ldi r24,lo8(0)
 963 01b4 00C0      		rjmp .L21
 964               	.L24:
 126:../../freeRtos/Lib/ds1305.c ****     return 1;
 966               	.LM75:
 967 01b6 81E0      		ldi r24,lo8(1)
 968 01b8 00C0      		rjmp .L21
 969               	.L25:
 128:../../freeRtos/Lib/ds1305.c ****     return 2;
 971               	.LM76:
 972 01ba 82E0      		ldi r24,lo8(2)
 973               	.L21:
 974               	/* epilogue start */
 146:../../freeRtos/Lib/ds1305.c **** }
 976               	.LM77:
 977 01bc 0F90      		pop __tmp_reg__
 978 01be CF91      		pop r28
 979 01c0 DF91      		pop r29
 980 01c2 1F91      		pop r17
 981 01c4 FF90      		pop r15
 982 01c6 EF90      		pop r14
 983 01c8 0895      		ret
 985               	.Lscope11:
 987               		.stabd	78,0,0
 988               		.comm xSemaphoreSpiSS,2,1
 990               		.weak	spiSend
 992               	.Letext0:
 993               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:00000000 ds1305.c
     /tmp/cc5W6HIw.s:2      *ABS*:0000003f __SREG__
     /tmp/cc5W6HIw.s:3      *ABS*:0000003e __SP_H__
     /tmp/cc5W6HIw.s:4      *ABS*:0000003d __SP_L__
     /tmp/cc5W6HIw.s:5      *ABS*:00000034 __CCP__
     /tmp/cc5W6HIw.s:6      *ABS*:00000000 __tmp_reg__
     /tmp/cc5W6HIw.s:7      *ABS*:00000001 __zero_reg__
     /tmp/cc5W6HIw.s:446    .text:00000000 spiEnableDS1305
     /tmp/cc5W6HIw.s:466    .text:00000002 spiDisableDS1305
     /tmp/cc5W6HIw.s:486    .text:00000004 readTimeBCD
     /tmp/cc5W6HIw.s:568    .text:0000005e readTimeDecoded
     /tmp/cc5W6HIw.s:592    .text:00000064 readTime
     /tmp/cc5W6HIw.s:615    .text:0000006a setTimeBCD
     /tmp/cc5W6HIw.s:699    .text:000000ca setTimeDecoded
     /tmp/cc5W6HIw.s:723    .text:000000d0 setTime
     /tmp/cc5W6HIw.s:746    .text:000000d6 ds1305start
     /tmp/cc5W6HIw.s:789    .text:000000f4 ds1305writeMem
     /tmp/cc5W6HIw.s:891    .text:0000015e ds1305readMem
                            *COM*:00000002 xSemaphoreSpiSS

UNDEFINED SYMBOLS
spiTake
spiSend
spiGive
__do_clear_bss
